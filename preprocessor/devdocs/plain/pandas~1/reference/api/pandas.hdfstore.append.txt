# pandas.HDFStore.append

HDFStore.append(key, value, format=None, axes=None, index=True, append=True,
complib=None, complevel=None, columns=None, min_itemsize=None, nan_rep=None,
chunksize=None, expectedrows=None, dropna=None, data_columns=None,
encoding=None, errors='strict')[source]

    
Append to Table in file. Node must already exist and be Table format.

Parameters

    
key:str

value:{Series, DataFrame}

format:‘table’ is the default

    
Format to use when storing object in HDFStore. Value can be one of:

`'table'`

    
Table format. Write as a PyTables Table structure which may perform worse but
allow more flexible operations like searching / selecting subsets of the data.

append:bool, default True

    
Append the input data to the existing.

data_columns:list of columns, or True, default None

    
List of columns to create as indexed data columns for on-disk queries, or True
to use all columns. By default only the axes of the object are indexed. See
here.

min_itemsize:dict of columns that specify minimum str sizes

nan_rep:str to use as str nan representation

chunksize:size to chunk the writing

expectedrows:expected TOTAL row size of this table

encoding:default None, provide an encoding for str

dropna:bool, default False

    
Do not write an ALL nan row to the store settable by the option
‘io.hdf.dropna_table’.

Notes

Does not check if data being appended overlaps with existing data in the
table, so be careful

© 2008–2022, AQR Capital Management, LLC, Lambda Foundry, Inc. and PyData
Development Team  
Licensed under the 3-clause BSD License.  
https://pandas.pydata.org/pandas-
docs/version/1.4.0/reference/api/pandas.HDFStore.append.html

