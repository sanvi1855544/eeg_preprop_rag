# pandas.Interval.is_empty

Interval.is_empty

    
Indicates if an interval is empty, meaning it contains no points.

New in version 0.25.0.

Returns

    
bool or ndarray

    
A boolean indicating if a scalar `Interval` is empty, or a boolean `ndarray`
positionally indicating if an `Interval` in an `IntervalArray` or
`IntervalIndex` is empty.

Examples

An `Interval` that contains points is not empty:

    
    >>> pd.Interval(0, 1, closed='right').is_empty
    False
    
An `Interval` that does not contain any points is empty:

    
    >>> pd.Interval(0, 0, closed='right').is_empty
    True
    >>> pd.Interval(0, 0, closed='left').is_empty
    True
    >>> pd.Interval(0, 0, closed='neither').is_empty
    True
    
An `Interval` that contains a single point is not empty:

    
    >>> pd.Interval(0, 0, closed='both').is_empty
    False
    
An `IntervalArray` or `IntervalIndex` returns a boolean `ndarray` positionally
indicating if an `Interval` is empty:

    
    >>> ivs = [pd.Interval(0, 0, closed='neither'),
    ...        pd.Interval(1, 2, closed='neither')]
    >>> pd.arrays.IntervalArray(ivs).is_empty
    array([ True, False])
    
Missing values are not considered empty:

    
    >>> ivs = [pd.Interval(0, 0, closed='neither'), np.nan]
    >>> pd.IntervalIndex(ivs).is_empty
    array([ True, False])
    
© 2008–2022, AQR Capital Management, LLC, Lambda Foundry, Inc. and PyData
Development Team  
Licensed under the 3-clause BSD License.  
https://pandas.pydata.org/pandas-
docs/version/1.4.0/reference/api/pandas.Interval.is_empty.html

