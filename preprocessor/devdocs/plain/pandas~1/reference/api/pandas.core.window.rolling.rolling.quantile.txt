# pandas.core.window.rolling.Rolling.quantile

Rolling.quantile(quantile, interpolation='linear', **kwargs)[source]

    
Calculate the rolling quantile.

Parameters

    
quantile:float

    
Quantile to compute. 0 <= quantile <= 1.

interpolation:{‘linear’, ‘lower’, ‘higher’, ‘midpoint’, ‘nearest’}

    
This optional parameter specifies the interpolation method to use, when the
desired quantile lies between two data points i and j:

>   * linear: i + (j - i) * fraction, where fraction is the fractional part of
> the index surrounded by i and j.
>   * lower: i.
>   * higher: j.
>   * nearest: i or j whichever is nearest.
>   * midpoint: (i \+ j) / 2.
>

**kwargs

    
For NumPy compatibility and will not have an effect on the result.

Returns

    
Series or DataFrame

    
Return type is the same as the original object with `np.float64` dtype.

See also

`pandas.Series.rolling`

    
Calling rolling with Series data.

`pandas.DataFrame.rolling`

    
Calling rolling with DataFrames.

`pandas.Series.quantile`

    
Aggregating quantile for Series.

`pandas.DataFrame.quantile`

    
Aggregating quantile for DataFrame.

Examples

    
    >>> s = pd.Series([1, 2, 3, 4])
    >>> s.rolling(2).quantile(.4, interpolation='lower')
    0    NaN
    1    1.0
    2    2.0
    3    3.0
    dtype: float64
    
    
    >>> s.rolling(2).quantile(.4, interpolation='midpoint')
    0    NaN
    1    1.5
    2    2.5
    3    3.5
    dtype: float64
    
© 2008–2022, AQR Capital Management, LLC, Lambda Foundry, Inc. and PyData
Development Team  
Licensed under the 3-clause BSD License.  
https://pandas.pydata.org/pandas-
docs/version/1.4.0/reference/api/pandas.core.window.rolling.Rolling.quantile.html

