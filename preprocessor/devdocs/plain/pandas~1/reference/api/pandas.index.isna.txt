# pandas.Index.isna

finalIndex.isna()[source]

    
Detect missing values.

Return a boolean same-sized object indicating if the values are NA. NA values,
such as `None`, `numpy.NaN` or `pd.NaT`, get mapped to `True` values.
Everything else get mapped to `False` values. Characters such as empty strings
‘’ or `numpy.inf` are not considered NA values (unless you set
`pandas.options.mode.use_inf_as_na = True`).

Returns

    
numpy.ndarray[bool]

    
A boolean array of whether my values are NA.

See also

`Index.notna`

    
Boolean inverse of isna.

`Index.dropna`

    
Omit entries with missing values.

`isna`

    
Top-level isna.

`Series.isna`

    
Detect missing values in Series object.

Examples

Show which entries in a pandas.Index are NA. The result is an array.

    
    >>> idx = pd.Index([5.2, 6.0, np.NaN])
    >>> idx
    Float64Index([5.2, 6.0, nan], dtype='float64')
    >>> idx.isna()
    array([False, False,  True])
    
Empty strings are not considered NA values. None is considered an NA value.

    
    >>> idx = pd.Index(['black', '', 'red', None])
    >>> idx
    Index(['black', '', 'red', None], dtype='object')
    >>> idx.isna()
    array([False, False, False,  True])
    
For datetimes, NaT (Not a Time) is considered as an NA value.

    
    >>> idx = pd.DatetimeIndex([pd.Timestamp('1940-04-25'),
    ...                         pd.Timestamp(''), None, pd.NaT])
    >>> idx
    DatetimeIndex(['1940-04-25', 'NaT', 'NaT', 'NaT'],
                  dtype='datetime64[ns]', freq=None)
    >>> idx.isna()
    array([False,  True,  True,  True])
    
© 2008–2022, AQR Capital Management, LLC, Lambda Foundry, Inc. and PyData
Development Team  
Licensed under the 3-clause BSD License.  
https://pandas.pydata.org/pandas-
docs/version/1.4.0/reference/api/pandas.Index.isna.html

