# pandas.DataFrame.std

DataFrame.std(axis=None, skipna=True, level=None, ddof=1, numeric_only=None,
**kwargs)[source]

    
Return sample standard deviation over requested axis.

Normalized by N-1 by default. This can be changed using the ddof argument.

Parameters

    
axis:{index (0), columns (1)}

skipna:bool, default True

    
Exclude NA/null values. If an entire row/column is NA, the result will be NA.

level:int or level name, default None

    
If the axis is a MultiIndex (hierarchical), count along a particular level,
collapsing into a Series.

ddof:int, default 1

    
Delta Degrees of Freedom. The divisor used in calculations is N - ddof, where
N represents the number of elements.

numeric_only:bool, default None

    
Include only float, int, boolean columns. If None, will attempt to use
everything, then use only numeric data. Not implemented for Series.

Returns

    
Series or DataFrame (if level specified)

Notes

To have the same behaviour as numpy.std, use ddof=0 (instead of the default
ddof=1)

Examples

    
    >>> df = pd.DataFrame({'person_id': [0, 1, 2, 3],
    ...                   'age': [21, 25, 62, 43],
    ...                   'height': [1.61, 1.87, 1.49, 2.01]}
    ...                  ).set_index('person_id')
    >>> df
               age  height
    person_id
    0           21    1.61
    1           25    1.87
    2           62    1.49
    3           43    2.01
    
The standard deviation of the columns can be found as follows:

    
    >>> df.std()
    age       18.786076
    height     0.237417
    
Alternatively, ddof=0 can be set to normalize by N instead of N-1:

    
    >>> df.std(ddof=0)
    age       16.269219
    height     0.205609
    
© 2008–2022, AQR Capital Management, LLC, Lambda Foundry, Inc. and PyData
Development Team  
Licensed under the 3-clause BSD License.  
https://pandas.pydata.org/pandas-
docs/version/1.4.0/reference/api/pandas.DataFrame.std.html

