# pandas.DataFrame.at_time

DataFrame.at_time(time, asof=False, axis=None)[source]

    
Select values at particular time of day (e.g., 9:30AM).

Parameters

    
time:datetime.time or str

axis:{0 or ‘index’, 1 or ‘columns’}, default 0

Returns

    
Series or DataFrame

Raises

    
TypeError

    
If the index is not a `DatetimeIndex`

See also

`between_time`

    
Select values between particular times of the day.

`first`

    
Select initial periods of time series based on a date offset.

`last`

    
Select final periods of time series based on a date offset.

`DatetimeIndex.indexer_at_time`

    
Get just the index locations for values at particular time of the day.

Examples

    
    >>> i = pd.date_range('2018-04-09', periods=4, freq='12H')
    >>> ts = pd.DataFrame({'A': [1, 2, 3, 4]}, index=i)
    >>> ts
                         A
    2018-04-09 00:00:00  1
    2018-04-09 12:00:00  2
    2018-04-10 00:00:00  3
    2018-04-10 12:00:00  4
    
    
    >>> ts.at_time('12:00')
                         A
    2018-04-09 12:00:00  2
    2018-04-10 12:00:00  4
    
© 2008–2022, AQR Capital Management, LLC, Lambda Foundry, Inc. and PyData
Development Team  
Licensed under the 3-clause BSD License.  
https://pandas.pydata.org/pandas-
docs/version/1.4.0/reference/api/pandas.DataFrame.at_time.html

