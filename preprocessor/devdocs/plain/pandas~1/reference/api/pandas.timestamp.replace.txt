# pandas.Timestamp.replace

Timestamp.replace(year=None, month=None, day=None, hour=None, minute=None,
second=None, microsecond=None, nanosecond=None, tzinfo=<class 'object'>,
fold=None)

    
Implements datetime.replace, handles nanoseconds.

Parameters

    
year:int, optional

month:int, optional

day:int, optional

hour:int, optional

minute:int, optional

second:int, optional

microsecond:int, optional

nanosecond:int, optional

tzinfo:tz-convertible, optional

fold:int, optional

Returns

    
Timestamp with fields replaced

Examples

Create a timestamp object:

    
    >>> ts = pd.Timestamp('2020-03-14T15:32:52.192548651', tz='UTC')
    >>> ts
    Timestamp('2020-03-14 15:32:52.192548651+0000', tz='UTC')
    
Replace year and the hour:

    
    >>> ts.replace(year=1999, hour=10)
    Timestamp('1999-03-14 10:32:52.192548651+0000', tz='UTC')
    
Replace timezone (not a conversion):

    
    >>> import pytz
    >>> ts.replace(tzinfo=pytz.timezone('US/Pacific'))
    Timestamp('2020-03-14 15:32:52.192548651-0700', tz='US/Pacific')
    
Analogous for `pd.NaT`:

    
    >>> pd.NaT.replace(tzinfo=pytz.timezone('US/Pacific'))
    NaT
    
© 2008–2022, AQR Capital Management, LLC, Lambda Foundry, Inc. and PyData
Development Team  
Licensed under the 3-clause BSD License.  
https://pandas.pydata.org/pandas-
docs/version/1.4.0/reference/api/pandas.Timestamp.replace.html

