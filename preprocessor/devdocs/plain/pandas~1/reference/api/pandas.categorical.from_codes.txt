# pandas.Categorical.from_codes

classmethodCategorical.from_codes(codes, categories=None, ordered=None,
dtype=None)[source]

    
Make a Categorical type from codes and categories or dtype.

This constructor is useful if you already have codes and categories/dtype and
so do not need the (computation intensive) factorization step, which is
usually done on the constructor.

If your data does not follow this convention, please use the normal
constructor.

Parameters

    
codes:array-like of int

    
An integer array, where each integer points to a category in categories or
dtype.categories, or else is -1 for NaN.

categories:index-like, optional

    
The categories for the categorical. Items need to be unique. If the categories
are not given here, then they must be provided in dtype.

ordered:bool, optional

    
Whether or not this categorical is treated as an ordered categorical. If not
given here or in dtype, the resulting categorical will be unordered.

dtype:CategoricalDtype or “category”, optional

    
If `CategoricalDtype`, cannot be used together with categories or ordered.

Returns

    
Categorical

Examples

    
    >>> dtype = pd.CategoricalDtype(['a', 'b'], ordered=True)
    >>> pd.Categorical.from_codes(codes=[0, 1, 0, 1], dtype=dtype)
    ['a', 'b', 'a', 'b']
    Categories (2, object): ['a' < 'b']
    
© 2008–2022, AQR Capital Management, LLC, Lambda Foundry, Inc. and PyData
Development Team  
Licensed under the 3-clause BSD License.  
https://pandas.pydata.org/pandas-
docs/version/1.4.0/reference/api/pandas.Categorical.from_codes.html

