# pandas.Series.all

Series.all(axis=0, bool_only=None, skipna=True, level=None, **kwargs)[source]

    
Return whether all elements are True, potentially over an axis.

Returns True unless there at least one element within a series or along a
Dataframe axis that is False or equivalent (e.g. zero or empty).

Parameters

    
axis:{0 or ‘index’, 1 or ‘columns’, None}, default 0

    
Indicate which axis or axes should be reduced.

  * 0 / ‘index’ : reduce the index, return a Series whose index is the original column labels.
  * 1 / ‘columns’ : reduce the columns, return a Series whose index is the original index.
  * None : reduce all axes, return a scalar.

bool_only:bool, default None

    
Include only boolean columns. If None, will attempt to use everything, then
use only boolean data. Not implemented for Series.

skipna:bool, default True

    
Exclude NA/null values. If the entire row/column is NA and skipna is True,
then the result will be True, as for an empty row/column. If skipna is False,
then NA are treated as True, because these are not equal to zero.

level:int or level name, default None

    
If the axis is a MultiIndex (hierarchical), count along a particular level,
collapsing into a scalar.

**kwargs:any, default None

    
Additional keywords have no effect but might be accepted for compatibility
with NumPy.

Returns

    
scalar or Series

    
If level is specified, then, Series is returned; otherwise, scalar is
returned.

See also

`Series.all`

    
Return True if all elements are True.

`DataFrame.any`

    
Return True if one (or more) elements are True.

Examples

Series

    
    >>> pd.Series([True, True]).all()
    True
    >>> pd.Series([True, False]).all()
    False
    >>> pd.Series([], dtype="float64").all()
    True
    >>> pd.Series([np.nan]).all()
    True
    >>> pd.Series([np.nan]).all(skipna=False)
    True
    
DataFrames

Create a dataframe from a dictionary.

    
    >>> df = pd.DataFrame({'col1': [True, True], 'col2': [True, False]})
    >>> df
       col1   col2
    0  True   True
    1  True  False
    
Default behaviour checks if column-wise values all return True.

    
    >>> df.all()
    col1     True
    col2    False
    dtype: bool
    
Specify `axis='columns'` to check if row-wise values all return True.

    
    >>> df.all(axis='columns')
    0     True
    1    False
    dtype: bool
    
Or `axis=None` for whether every value is True.

    
    >>> df.all(axis=None)
    False
    
© 2008–2022, AQR Capital Management, LLC, Lambda Foundry, Inc. and PyData
Development Team  
Licensed under the 3-clause BSD License.  
https://pandas.pydata.org/pandas-
docs/version/1.4.0/reference/api/pandas.Series.all.html

