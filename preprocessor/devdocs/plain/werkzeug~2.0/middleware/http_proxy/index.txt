# Basic HTTP Proxy

`class werkzeug.middleware.http_proxy.ProxyMiddleware(app, targets,
chunk_size=16384, timeout=10)`

    
Proxy requests under a path to an external server, routing other requests to
the app.

This middleware can only proxy HTTP requests, as HTTP is the only protocol
handled by the WSGI server. Other protocols, such as WebSocket requests,
cannot be proxied at this layer. This should only be used for development, in
production a real proxy server should be used.

The middleware takes a dict mapping a path prefix to a dict describing the
host to be proxied to:

    
    app = ProxyMiddleware(app, {
        "/static/": {
            "target": "http://127.0.0.1:5001/",
        }
    })
    
Each host has the following options:

`target:`

    
The target URL to dispatch to. This is required.

`remove_prefix:`

    
Whether to remove the prefix from the URL before dispatching it to the target.
The default is `False`.

`host:`

    
`"<auto>" (default):`

    
The host header is automatically rewritten to the URL of the target.

`None:`

    
The host header is unmodified from the client request.

Any other value:

    
The host header is overwritten with the value.

`headers:`

    
A dictionary of headers to be sent with the request to the target. The default
is `{}`.

`ssl_context:`

    
A `ssl.SSLContext` defining how to verify requests if the target is HTTPS. The
default is `None`.

In the example above, everything under `"/static/"` is proxied to the server
on port 5001. The host header is rewritten to the target, and the `"/static/"`
prefix is removed from the URLs.

Parameters

    
  * app (WSGIApplication) – The WSGI application to wrap.
  * targets (Mapping[str, Dict[str, Any]]) – Proxy target configurations. See description above.
  * chunk_size (int) – Size of chunks to read from input stream and write to target.
  * timeout (int) – Seconds before an operation to a target fails.

Return type

    
None

Changelog

New in version 0.14.

© 2007–2021 Pallets  
Licensed under the BSD 3-clause License.  
https://werkzeug.palletsprojects.com/en/2.0.x/middleware/http_proxy/

