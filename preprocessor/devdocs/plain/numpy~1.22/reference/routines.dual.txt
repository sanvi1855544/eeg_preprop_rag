# Optionally SciPy-accelerated routines (numpy.dual)

Deprecated since version 1.20.

This module is deprecated. Instead of importing functions from `numpy.dual`,
the functions should be imported directly from NumPy or SciPy.

Aliases for functions which may be accelerated by SciPy.

SciPy can be built to use accelerated or otherwise improved libraries for
FFTs, linear algebra, and special functions. This module allows developers to
transparently support these accelerated functions when SciPy is available but
still support users who have only installed NumPy.

## Linear algebra

`cholesky`(a) | Cholesky decomposition.  
---|---  
`det`(a) | Compute the determinant of an array.  
`eig`(a) | Compute the eigenvalues and right eigenvectors of a square array.  
`eigh`(a[, UPLO]) | Return the eigenvalues and eigenvectors of a complex Hermitian (conjugate symmetric) or a real symmetric matrix.  
`eigvals`(a) | Compute the eigenvalues of a general matrix.  
`eigvalsh`(a[, UPLO]) | Compute the eigenvalues of a complex Hermitian or real symmetric matrix.  
`inv`(a) | Compute the (multiplicative) inverse of a matrix.  
`lstsq`(a, b[, rcond]) | Return the least-squares solution to a linear matrix equation.  
`norm`(x[, ord, axis, keepdims]) | Matrix or vector norm.  
`pinv`(a[, rcond, hermitian]) | Compute the (Moore-Penrose) pseudo-inverse of a matrix.  
`solve`(a, b) | Solve a linear matrix equation, or system of linear scalar equations.  
`svd`(a[, full_matrices, compute_uv, hermitian]) | Singular Value Decomposition.  
## FFT

`fft`(a[, n, axis, norm]) | Compute the one-dimensional discrete Fourier Transform.  
---|---  
`fft2`(a[, s, axes, norm]) | Compute the 2-dimensional discrete Fourier Transform.  
`fftn`(a[, s, axes, norm]) | Compute the N-dimensional discrete Fourier Transform.  
`ifft`(a[, n, axis, norm]) | Compute the one-dimensional inverse discrete Fourier Transform.  
`ifft2`(a[, s, axes, norm]) | Compute the 2-dimensional inverse discrete Fourier Transform.  
`ifftn`(a[, s, axes, norm]) | Compute the N-dimensional inverse discrete Fourier Transform.  
## Other

`i0`(x) | Modified Bessel function of the first kind, order 0.  
---|---  
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/routines.dual.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

