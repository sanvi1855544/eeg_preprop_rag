# numpy.fft.rfft2

fft.rfft2(a, s=None, axes=(- 2, - 1), norm=None)[source]

    
Compute the 2-dimensional FFT of a real array.

Parameters

    
aarray

    
Input array, taken to be real.

ssequence of ints, optional

    
Shape of the FFT.

axessequence of ints, optional

    
Axes over which to compute the FFT.

norm{“backward”, “ortho”, “forward”}, optional

    
New in version 1.10.0.

Normalization mode (see `numpy.fft`). Default is “backward”. Indicates which
direction of the forward/backward pair of transforms is scaled and with what
normalization factor.

New in version 1.20.0: The “backward”, “forward” values were added.

Returns

    
outndarray

    
The result of the real 2-D FFT.

See also

`rfftn`

    
Compute the N-dimensional discrete Fourier Transform for real input.

#### Notes

This is really just `rfftn` with different default behavior. For more details
see `rfftn`.

#### Examples

    
    >>> a = np.mgrid[:5, :5][0]
    >>> np.fft.rfft2(a)
    array([[ 50.  +0.j        ,   0.  +0.j        ,   0.  +0.j        ],
           [-12.5+17.20477401j,   0.  +0.j        ,   0.  +0.j        ],
           [-12.5 +4.0614962j ,   0.  +0.j        ,   0.  +0.j        ],
           [-12.5 -4.0614962j ,   0.  +0.j        ,   0.  +0.j        ],
           [-12.5-17.20477401j,   0.  +0.j        ,   0.  +0.j        ]])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.fft.rfft2.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

