# numpy.ma.flatnotmasked_contiguous

ma.flatnotmasked_contiguous(a)[source]

    
Find contiguous unmasked data in a masked array along the given axis.

Parameters

    
anarray

    
The input array.

Returns

    
slice_listlist

    
A sorted sequence of `slice` objects (start index, end index).

Changed in version 1.15.0: Now returns an empty list instead of None for a
fully masked array

See also

`flatnotmasked_edges`, `notmasked_contiguous`, `notmasked_edges`

`clump_masked`, `clump_unmasked`

#### Notes

Only accepts 2-D arrays at most.

#### Examples

    
    >>> a = np.ma.arange(10)
    >>> np.ma.flatnotmasked_contiguous(a)
    [slice(0, 10, None)]
    
    
    >>> mask = (a < 3) | (a > 8) | (a == 5)
    >>> a[mask] = np.ma.masked
    >>> np.array(a[~a.mask])
    array([3, 4, 6, 7, 8])
    
    
    >>> np.ma.flatnotmasked_contiguous(a)
    [slice(3, 5, None), slice(6, 9, None)]
    >>> a[:] = np.ma.masked
    >>> np.ma.flatnotmasked_contiguous(a)
    []
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.ma.flatnotmasked_contiguous.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

