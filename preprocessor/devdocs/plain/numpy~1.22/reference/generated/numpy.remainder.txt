# numpy.remainder

numpy.remainder(x1, x2, /, out=None, *, where=True, casting='same_kind',
order='K', dtype=None, subok=True[, signature, extobj]) = <ufunc 'remainder'>

    
Returns the element-wise remainder of division.

Computes the remainder complementary to the `floor_divide` function. It is
equivalent to the Python modulus operator``x1 % x2`` and has the same sign as
the divisor `x2`. The MATLAB function equivalent to `np.remainder` is `mod`.

Warning

This should not be confused with:

  * Python 3.7’s `math.remainder` and C’s `remainder`, which computes the IEEE remainder, which are the complement to `round(x1 / x2)`.
  * The MATLAB `rem` function and or the C `%` operator which is the complement to `int(x1 / x2)`.

Parameters

    
x1array_like

    
Dividend array.

x2array_like

    
Divisor array. If `x1.shape != x2.shape`, they must be broadcastable to a
common shape (which becomes the shape of the output).

outndarray, None, or tuple of ndarray and None, optional

    
A location into which the result is stored. If provided, it must have a shape
that the inputs broadcast to. If not provided or None, a freshly-allocated
array is returned. A tuple (possible only as a keyword argument) must have
length equal to the number of outputs.

wherearray_like, optional

    
This condition is broadcast over the input. At locations where the condition
is True, the `out` array will be set to the ufunc result. Elsewhere, the `out`
array will retain its original value. Note that if an uninitialized `out`
array is created via the default `out=None`, locations within it where the
condition is False will remain uninitialized.

**kwargs

    
For other keyword-only arguments, see the ufunc docs.

Returns

    
yndarray

    
The element-wise remainder of the quotient `floor_divide(x1, x2)`. This is a
scalar if both `x1` and `x2` are scalars.

See also

`floor_divide`

    
Equivalent of Python `//` operator.

`divmod`

    
Simultaneous floor division and remainder.

`fmod`

    
Equivalent of the MATLAB `rem` function.

`divide`, `floor`

#### Notes

Returns 0 when `x2` is 0 and both `x1` and `x2` are (arrays of) integers.
`mod` is an alias of `remainder`.

#### Examples

    
    >>> np.remainder([4, 7], [2, 3])
    array([0, 1])
    >>> np.remainder(np.arange(7), 5)
    array([0, 1, 2, 3, 4, 0, 1])
    
The `%` operator can be used as a shorthand for `np.remainder` on ndarrays.

    
    >>> x1 = np.arange(7)
    >>> x1 % 5
    array([0, 1, 2, 3, 4, 0, 1])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.remainder.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

