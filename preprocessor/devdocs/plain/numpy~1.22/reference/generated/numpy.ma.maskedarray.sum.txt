# numpy.ma.MaskedArray.sum

method

ma.MaskedArray.sum(axis=None, dtype=None, out=None, keepdims=<no
value>)[source]

    
Return the sum of the array elements over the given axis.

Masked elements are set to 0 internally.

Refer to `numpy.sum` for full documentation.

See also

`numpy.ndarray.sum`

    
corresponding function for ndarrays

`numpy.sum`

    
equivalent function

#### Examples

    
    >>> x = np.ma.array([[1,2,3],[4,5,6],[7,8,9]], mask=[0] + [1,0]*4)
    >>> x
    masked_array(
      data=[[1, --, 3],
            [--, 5, --],
            [7, --, 9]],
      mask=[[False,  True, False],
            [ True, False,  True],
            [False,  True, False]],
      fill_value=999999)
    >>> x.sum()
    25
    >>> x.sum(axis=1)
    masked_array(data=[4, 5, 16],
                 mask=[False, False, False],
           fill_value=999999)
    >>> x.sum(axis=0)
    masked_array(data=[8, 5, 12],
                 mask=[False, False, False],
           fill_value=999999)
    >>> print(type(x.sum(axis=0, dtype=np.int64)[0]))
    <class 'numpy.int64'>
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.ma.MaskedArray.sum.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

