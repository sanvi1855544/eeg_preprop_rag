# numpy.fft.fftfreq

fft.fftfreq(n, d=1.0)[source]

    
Return the Discrete Fourier Transform sample frequencies.

The returned float array `f` contains the frequency bin centers in cycles per
unit of the sample spacing (with zero at the start). For instance, if the
sample spacing is in seconds, then the frequency unit is cycles/second.

Given a window length `n` and a sample spacing `d`:

    
    f = [0, 1, ...,   n/2-1,     -n/2, ..., -1] / (d*n)   if n is even
    f = [0, 1, ..., (n-1)/2, -(n-1)/2, ..., -1] / (d*n)   if n is odd
    
Parameters

    
nint

    
Window length.

dscalar, optional

    
Sample spacing (inverse of the sampling rate). Defaults to 1.

Returns

    
fndarray

    
Array of length `n` containing the sample frequencies.

#### Examples

    
    >>> signal = np.array([-2, 8, 6, 4, 1, 0, 3, 5], dtype=float)
    >>> fourier = np.fft.fft(signal)
    >>> n = signal.size
    >>> timestep = 0.1
    >>> freq = np.fft.fftfreq(n, d=timestep)
    >>> freq
    array([ 0.  ,  1.25,  2.5 , ..., -3.75, -2.5 , -1.25])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.fft.fftfreq.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

