# numpy.right_shift

numpy.right_shift(x1, x2, /, out=None, *, where=True, casting='same_kind',
order='K', dtype=None, subok=True[, signature, extobj]) = <ufunc
'right_shift'>

    
Shift the bits of an integer to the right.

Bits are shifted to the right `x2`. Because the internal representation of
numbers is in binary format, this operation is equivalent to dividing `x1` by
`2**x2`.

Parameters

    
x1array_like, int

    
Input values.

x2array_like, int

    
Number of bits to remove at the right of `x1`. If `x1.shape != x2.shape`, they
must be broadcastable to a common shape (which becomes the shape of the
output).

outndarray, None, or tuple of ndarray and None, optional

    
A location into which the result is stored. If provided, it must have a shape
that the inputs broadcast to. If not provided or None, a freshly-allocated
array is returned. A tuple (possible only as a keyword argument) must have
length equal to the number of outputs.

wherearray_like, optional

    
This condition is broadcast over the input. At locations where the condition
is True, the `out` array will be set to the ufunc result. Elsewhere, the `out`
array will retain its original value. Note that if an uninitialized `out`
array is created via the default `out=None`, locations within it where the
condition is False will remain uninitialized.

**kwargs

    
For other keyword-only arguments, see the ufunc docs.

Returns

    
outndarray, int

    
Return `x1` with bits shifted `x2` times to the right. This is a scalar if
both `x1` and `x2` are scalars.

See also

`left_shift`

    
Shift the bits of an integer to the left.

`binary_repr`

    
Return the binary representation of the input number as a string.

#### Examples

    
    >>> np.binary_repr(10)
    '1010'
    >>> np.right_shift(10, 1)
    5
    >>> np.binary_repr(5)
    '101'
    
    
    >>> np.right_shift(10, [1,2,3])
    array([5, 2, 1])
    
The `>>` operator can be used as a shorthand for `np.right_shift` on ndarrays.

    
    >>> x1 = 10
    >>> x2 = np.array([1,2,3])
    >>> x1 >> x2
    array([5, 2, 1])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.right_shift.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

