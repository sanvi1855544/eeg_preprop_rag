# numpy.ma.allequal

ma.allequal(a, b, fill_value=True)[source]

    
Return True if all entries of a and b are equal, using fill_value as a truth
value where either or both are masked.

Parameters

    
a, barray_like

    
Input arrays to compare.

fill_valuebool, optional

    
Whether masked values in a or b are considered equal (True) or not (False).

Returns

    
ybool

    
Returns True if the two arrays are equal within the given tolerance, False
otherwise. If either array contains NaN, then False is returned.

See also

`all`, `any`

`numpy.ma.allclose`

#### Examples

    
    >>> a = np.ma.array([1e10, 1e-7, 42.0], mask=[0, 0, 1])
    >>> a
    masked_array(data=[10000000000.0, 1e-07, --],
                 mask=[False, False,  True],
           fill_value=1e+20)
    
    
    >>> b = np.array([1e10, 1e-7, -42.0])
    >>> b
    array([  1.00000000e+10,   1.00000000e-07,  -4.20000000e+01])
    >>> np.ma.allequal(a, b, fill_value=False)
    False
    >>> np.ma.allequal(a, b)
    True
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.ma.allequal.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

