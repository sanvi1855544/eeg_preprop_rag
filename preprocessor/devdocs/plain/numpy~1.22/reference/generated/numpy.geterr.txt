# numpy.geterr

numpy.geterr()[source]

    
Get the current way of handling floating-point errors.

Returns

    
resdict

    
A dictionary with keys “divide”, “over”, “under”, and “invalid”, whose values
are from the strings “ignore”, “print”, “log”, “warn”, “raise”, and “call”.
The keys represent possible floating-point exceptions, and the values define
how these exceptions are handled.

See also

`geterrcall`, `seterr`, `seterrcall`

#### Notes

For complete documentation of the types of floating-point exceptions and
treatment options, see `seterr`.

#### Examples

    
    >>> np.geterr()
    {'divide': 'warn', 'over': 'warn', 'under': 'ignore', 'invalid': 'warn'}
    >>> np.arange(3.) / np.arange(3.)
    array([nan,  1.,  1.])
    
    
    >>> oldsettings = np.seterr(all='warn', over='raise')
    >>> np.geterr()
    {'divide': 'warn', 'over': 'raise', 'under': 'warn', 'invalid': 'warn'}
    >>> np.arange(3.) / np.arange(3.)
    array([nan,  1.,  1.])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.geterr.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

