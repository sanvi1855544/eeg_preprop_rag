# numpy.distutils.ccompiler

#### Functions

`CCompiler_compile`(self, sources[, ...]) | Compile one or more source files.  
---|---  
`CCompiler_customize`(self, dist[, need_cxx]) | Do any platform-specific customization of a compiler instance.  
`CCompiler_customize_cmd`(self, cmd[, ignore]) | Customize compiler using distutils command.  
`CCompiler_cxx_compiler`(self) | Return the C++ compiler.  
`CCompiler_find_executables`(self) | Does nothing here, but is called by the get_version method and can be overridden by subclasses.  
`CCompiler_get_version`(self[, force, ok_status]) | Return compiler version, or None if compiler is not available.  
`CCompiler_object_filenames`(self, ...[, ...]) | Return the name of the object files for the given source files.  
`CCompiler_show_customization`(self) | Print the compiler customizations to stdout.  
`CCompiler_spawn`(self, cmd[, display, env]) | Execute a command in a sub-process.  
`gen_lib_options`(compiler, library_dirs, ...) |   
`new_compiler`([plat, compiler, verbose, ...]) |   
`replace_method`(klass, method_name, func) |   
`simple_version_match`([pat, ignore, start]) | Simple matching of version numbers, for use in CCompiler and FCompiler.  
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.distutils.ccompiler.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

