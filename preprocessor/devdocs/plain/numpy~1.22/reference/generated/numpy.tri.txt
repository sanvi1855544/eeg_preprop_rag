# numpy.tri

numpy.tri(N, M=None, k=0, dtype=<class 'float'>, *, like=None)[source]

    
An array with ones at and below the given diagonal and zeros elsewhere.

Parameters

    
Nint

    
Number of rows in the array.

Mint, optional

    
Number of columns in the array. By default, `M` is taken equal to `N`.

kint, optional

    
The sub-diagonal at and below which the array is filled. `k` = 0 is the main
diagonal, while `k` < 0 is below it, and `k` > 0 is above. The default is 0.

dtypedtype, optional

    
Data type of the returned array. The default is float.

likearray_like

    
Reference object to allow the creation of arrays which are not NumPy arrays.
If an array-like passed in as `like` supports the `__array_function__`
protocol, the result will be defined by it. In this case, it ensures the
creation of an array object compatible with that passed in via this argument.

New in version 1.20.0.

Returns

    
trindarray of shape (N, M)

    
Array with its lower triangle filled with ones and zero elsewhere; in other
words `T[i,j] == 1` for `j <= i + k`, 0 otherwise.

#### Examples

    
    >>> np.tri(3, 5, 2, dtype=int)
    array([[1, 1, 1, 0, 0],
           [1, 1, 1, 1, 0],
           [1, 1, 1, 1, 1]])
    
    
    >>> np.tri(3, 5, -1)
    array([[0.,  0.,  0.,  0.,  0.],
           [1.,  0.,  0.,  0.,  0.],
           [1.,  1.,  0.,  0.,  0.]])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.tri.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

