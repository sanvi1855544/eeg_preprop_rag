# numpy.lib.NumpyVersion

class numpy.lib.NumpyVersion(vstring)[source]

    
Parse and compare numpy version strings.

NumPy has the following versioning scheme (numbers given are examples; they
can be > 9 in principle):

  * Released version: ‘1.8.0’, ‘1.8.1’, etc.
  * Alpha: ‘1.8.0a1’, ‘1.8.0a2’, etc.
  * Beta: ‘1.8.0b1’, ‘1.8.0b2’, etc.
  * Release candidates: ‘1.8.0rc1’, ‘1.8.0rc2’, etc.
  * Development versions: ‘1.8.0.dev-f1234afa’ (git commit hash appended)
  * Development versions after a1: ‘1.8.0a1.dev-f1234afa’,
    
‘1.8.0b2.dev-f1234afa’, ‘1.8.1rc1.dev-f1234afa’, etc.

  * Development versions (no git hash available): ‘1.8.0.dev-Unknown’

Comparing needs to be done against a valid version string or other
`NumpyVersion` instance. Note that all development versions of the same
(pre-)release compare equal.

New in version 1.9.0.

Parameters

    
vstringstr

    
NumPy version string (`np.__version__`).

#### Examples

    
    >>> from numpy.lib import NumpyVersion
    >>> if NumpyVersion(np.__version__) < '1.7.0':
    ...     print('skip')
    >>> # skip
    
    
    >>> NumpyVersion('1.7')  # raises ValueError, add ".0"
    Traceback (most recent call last):
        ...
    ValueError: Not a valid numpy version string
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.lib.NumpyVersion.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

