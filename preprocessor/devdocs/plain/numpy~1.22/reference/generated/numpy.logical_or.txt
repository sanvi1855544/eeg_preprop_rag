# numpy.logical_or

numpy.logical_or(x1, x2, /, out=None, *, where=True, casting='same_kind',
order='K', dtype=None, subok=True[, signature, extobj]) = <ufunc 'logical_or'>

    
Compute the truth value of x1 OR x2 element-wise.

Parameters

    
x1, x2array_like

    
Logical OR is applied to the elements of `x1` and `x2`. If `x1.shape !=
x2.shape`, they must be broadcastable to a common shape (which becomes the
shape of the output).

outndarray, None, or tuple of ndarray and None, optional

    
A location into which the result is stored. If provided, it must have a shape
that the inputs broadcast to. If not provided or None, a freshly-allocated
array is returned. A tuple (possible only as a keyword argument) must have
length equal to the number of outputs.

wherearray_like, optional

    
This condition is broadcast over the input. At locations where the condition
is True, the `out` array will be set to the ufunc result. Elsewhere, the `out`
array will retain its original value. Note that if an uninitialized `out`
array is created via the default `out=None`, locations within it where the
condition is False will remain uninitialized.

**kwargs

    
For other keyword-only arguments, see the ufunc docs.

Returns

    
yndarray or bool

    
Boolean result of the logical OR operation applied to the elements of `x1` and
`x2`; the shape is determined by broadcasting. This is a scalar if both `x1`
and `x2` are scalars.

See also

`logical_and`, `logical_not`, `logical_xor`

`bitwise_or`

#### Examples

    
    >>> np.logical_or(True, False)
    True
    >>> np.logical_or([True, False], [False, False])
    array([ True, False])
    
    
    >>> x = np.arange(5)
    >>> np.logical_or(x < 1, x > 3)
    array([ True, False, False, False,  True])
    
The `|` operator can be used as a shorthand for `np.logical_or` on boolean
ndarrays.

    
    >>> a = np.array([True, False])
    >>> b = np.array([False, False])
    >>> a | b
    array([ True, False])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.logical_or.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

