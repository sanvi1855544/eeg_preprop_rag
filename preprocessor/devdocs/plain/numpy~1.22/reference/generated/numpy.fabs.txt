# numpy.fabs

numpy.fabs(x, /, out=None, *, where=True, casting='same_kind', order='K',
dtype=None, subok=True[, signature, extobj]) = <ufunc 'fabs'>

    
Compute the absolute values element-wise.

This function returns the absolute values (positive magnitude) of the data in
`x`. Complex values are not handled, use `absolute` to find the absolute
values of complex data.

Parameters

    
xarray_like

    
The array of numbers for which the absolute values are required. If `x` is a
scalar, the result `y` will also be a scalar.

outndarray, None, or tuple of ndarray and None, optional

    
A location into which the result is stored. If provided, it must have a shape
that the inputs broadcast to. If not provided or None, a freshly-allocated
array is returned. A tuple (possible only as a keyword argument) must have
length equal to the number of outputs.

wherearray_like, optional

    
This condition is broadcast over the input. At locations where the condition
is True, the `out` array will be set to the ufunc result. Elsewhere, the `out`
array will retain its original value. Note that if an uninitialized `out`
array is created via the default `out=None`, locations within it where the
condition is False will remain uninitialized.

**kwargs

    
For other keyword-only arguments, see the ufunc docs.

Returns

    
yndarray or scalar

    
The absolute values of `x`, the returned values are always floats. This is a
scalar if `x` is a scalar.

See also

`absolute`

    
Absolute values including `complex` types.

#### Examples

    
    >>> np.fabs(-1)
    1.0
    >>> np.fabs([-1.2, 1.2])
    array([ 1.2,  1.2])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.fabs.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

