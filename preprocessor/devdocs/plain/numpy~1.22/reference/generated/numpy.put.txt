# numpy.put

numpy.put(a, ind, v, mode='raise')[source]

    
Replaces specified elements of an array with given values.

The indexing works on the flattened target array. `put` is roughly equivalent
to:

    
    a.flat[ind] = v
    
Parameters

    
andarray

    
Target array.

indarray_like

    
Target indices, interpreted as integers.

varray_like

    
Values to place in `a` at target indices. If `v` is shorter than `ind` it will
be repeated as necessary.

mode{‘raise’, ‘wrap’, ‘clip’}, optional

    
Specifies how out-of-bounds indices will behave.

  * ‘raise’ – raise an error (default)
  * ‘wrap’ – wrap around
  * ‘clip’ – clip to the range

‘clip’ mode means that all indices that are too large are replaced by the
index that addresses the last element along that axis. Note that this disables
indexing with negative numbers. In ‘raise’ mode, if an exception occurs the
target array may still be modified.

See also

`putmask`, `place`

`put_along_axis`

    
Put elements by matching the array and the index arrays

#### Examples

    
    >>> a = np.arange(5)
    >>> np.put(a, [0, 2], [-44, -55])
    >>> a
    array([-44,   1, -55,   3,   4])
    
    
    >>> a = np.arange(5)
    >>> np.put(a, 22, -5, mode='clip')
    >>> a
    array([ 0,  1,  2,  3, -5])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.put.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

