# numpy.ma.masked_object

ma.masked_object(x, value, copy=True, shrink=True)[source]

    
Mask the array `x` where the data are exactly equal to value.

This function is similar to `masked_values`, but only suitable for object
arrays: for floating point, use `masked_values` instead.

Parameters

    
xarray_like

    
Array to mask

valueobject

    
Comparison value

copy{True, False}, optional

    
Whether to return a copy of `x`.

shrink{True, False}, optional

    
Whether to collapse a mask full of False to nomask

Returns

    
resultMaskedArray

    
The result of masking `x` where equal to `value`.

See also

`masked_where`

    
Mask where a condition is met.

`masked_equal`

    
Mask where equal to a given value (integers).

`masked_values`

    
Mask using floating point equality.

#### Examples

    
    >>> import numpy.ma as ma
    >>> food = np.array(['green_eggs', 'ham'], dtype=object)
    >>> # don't eat spoiled food
    >>> eat = ma.masked_object(food, 'green_eggs')
    >>> eat
    masked_array(data=[--, 'ham'],
                 mask=[ True, False],
           fill_value='green_eggs',
                dtype=object)
    >>> # plain ol` ham is boring
    >>> fresh_food = np.array(['cheese', 'ham', 'pineapple'], dtype=object)
    >>> eat = ma.masked_object(fresh_food, 'green_eggs')
    >>> eat
    masked_array(data=['cheese', 'ham', 'pineapple'],
                 mask=False,
           fill_value='green_eggs',
                dtype=object)
    
Note that `mask` is set to `nomask` if possible.

    
    >>> eat
    masked_array(data=['cheese', 'ham', 'pineapple'],
                 mask=False,
           fill_value='green_eggs',
                dtype=object)
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.ma.masked_object.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

