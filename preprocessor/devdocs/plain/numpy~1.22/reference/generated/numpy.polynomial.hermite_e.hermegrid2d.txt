# numpy.polynomial.hermite_e.hermegrid2d

polynomial.hermite_e.hermegrid2d(x, y, c)[source]

    
Evaluate a 2-D HermiteE series on the Cartesian product of x and y.

This function returns the values:

\\[p(a,b) = \sum_{i,j} c_{i,j} * H_i(a) * H_j(b)\\]

where the points `(a, b)` consist of all pairs formed by taking `a` from `x`
and `b` from `y`. The resulting points form a grid with `x` in the first
dimension and `y` in the second.

The parameters `x` and `y` are converted to arrays only if they are tuples or
a lists, otherwise they are treated as a scalars. In either case, either `x`
and `y` or their elements must support multiplication and addition both with
themselves and with the elements of `c`.

If `c` has fewer than two dimensions, ones are implicitly appended to its
shape to make it 2-D. The shape of the result will be c.shape[2:] + x.shape.

Parameters

    
x, yarray_like, compatible objects

    
The two dimensional series is evaluated at the points in the Cartesian product
of `x` and `y`. If `x` or `y` is a list or tuple, it is first converted to an
ndarray, otherwise it is left unchanged and, if it isn’t an ndarray, it is
treated as a scalar.

carray_like

    
Array of coefficients ordered so that the coefficients for terms of degree i,j
are contained in `c[i,j]`. If `c` has dimension greater than two the remaining
indices enumerate multiple sets of coefficients.

Returns

    
valuesndarray, compatible object

    
The values of the two dimensional polynomial at points in the Cartesian
product of `x` and `y`.

See also

`hermeval`, `hermeval2d`, `hermeval3d`, `hermegrid3d`

#### Notes

New in version 1.7.0.

© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.polynomial.hermite_e.hermegrid2d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

