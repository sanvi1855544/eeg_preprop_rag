# numpy.flipud

numpy.flipud(m)[source]

    
Reverse the order of elements along axis 0 (up/down).

For a 2-D array, this flips the entries in each column in the up/down
direction. Rows are preserved, but appear in a different order than before.

Parameters

    
marray_like

    
Input array.

Returns

    
outarray_like

    
A view of `m` with the rows reversed. Since a view is returned, this operation
is \\(\mathcal O(1)\\).

See also

`fliplr`

    
Flip array in the left/right direction.

`flip`

    
Flip array in one or more dimensions.

`rot90`

    
Rotate array counterclockwise.

#### Notes

Equivalent to `m[::-1, ...]` or `np.flip(m, axis=0)`. Requires the array to be
at least 1-D.

#### Examples

    
    >>> A = np.diag([1.0, 2, 3])
    >>> A
    array([[1.,  0.,  0.],
           [0.,  2.,  0.],
           [0.,  0.,  3.]])
    >>> np.flipud(A)
    array([[0.,  0.,  3.],
           [0.,  2.,  0.],
           [1.,  0.,  0.]])
    
    
    >>> A = np.random.randn(2,3,5)
    >>> np.all(np.flipud(A) == A[::-1,...])
    True
    
    
    >>> np.flipud([1,2])
    array([2, 1])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.flipud.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

