# numpy.polynomial.laguerre.lagval2d

polynomial.laguerre.lagval2d(x, y, c)[source]

    
Evaluate a 2-D Laguerre series at points (x, y).

This function returns the values:

\\[p(x,y) = \sum_{i,j} c_{i,j} * L_i(x) * L_j(y)\\]

The parameters `x` and `y` are converted to arrays only if they are tuples or
a lists, otherwise they are treated as a scalars and they must have the same
shape after conversion. In either case, either `x` and `y` or their elements
must support multiplication and addition both with themselves and with the
elements of `c`.

If `c` is a 1-D array a one is implicitly appended to its shape to make it
2-D. The shape of the result will be c.shape[2:] + x.shape.

Parameters

    
x, yarray_like, compatible objects

    
The two dimensional series is evaluated at the points `(x, y)`, where `x` and
`y` must have the same shape. If `x` or `y` is a list or tuple, it is first
converted to an ndarray, otherwise it is left unchanged and if it isn’t an
ndarray it is treated as a scalar.

carray_like

    
Array of coefficients ordered so that the coefficient of the term of multi-
degree i,j is contained in `c[i,j]`. If `c` has dimension greater than two the
remaining indices enumerate multiple sets of coefficients.

Returns

    
valuesndarray, compatible object

    
The values of the two dimensional polynomial at points formed with pairs of
corresponding values from `x` and `y`.

See also

`lagval`, `laggrid2d`, `lagval3d`, `laggrid3d`

#### Notes

New in version 1.7.0.

© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.polynomial.laguerre.lagval2d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

