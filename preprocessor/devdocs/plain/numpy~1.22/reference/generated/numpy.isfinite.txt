# numpy.isfinite

numpy.isfinite(x, /, out=None, *, where=True, casting='same_kind', order='K',
dtype=None, subok=True[, signature, extobj]) = <ufunc 'isfinite'>

    
Test element-wise for finiteness (not infinity and not Not a Number).

The result is returned as a boolean array.

Parameters

    
xarray_like

    
Input values.

outndarray, None, or tuple of ndarray and None, optional

    
A location into which the result is stored. If provided, it must have a shape
that the inputs broadcast to. If not provided or None, a freshly-allocated
array is returned. A tuple (possible only as a keyword argument) must have
length equal to the number of outputs.

wherearray_like, optional

    
This condition is broadcast over the input. At locations where the condition
is True, the `out` array will be set to the ufunc result. Elsewhere, the `out`
array will retain its original value. Note that if an uninitialized `out`
array is created via the default `out=None`, locations within it where the
condition is False will remain uninitialized.

**kwargs

    
For other keyword-only arguments, see the ufunc docs.

Returns

    
yndarray, bool

    
True where `x` is not positive infinity, negative infinity, or NaN; false
otherwise. This is a scalar if `x` is a scalar.

See also

`isinf`, `isneginf`, `isposinf`, `isnan`

#### Notes

Not a Number, positive infinity and negative infinity are considered to be
non-finite.

NumPy uses the IEEE Standard for Binary Floating-Point for Arithmetic (IEEE
754). This means that Not a Number is not equivalent to infinity. Also that
positive infinity is not equivalent to negative infinity. But infinity is
equivalent to positive infinity. Errors result if the second argument is also
supplied when `x` is a scalar input, or if first and second arguments have
different shapes.

#### Examples

    
    >>> np.isfinite(1)
    True
    >>> np.isfinite(0)
    True
    >>> np.isfinite(np.nan)
    False
    >>> np.isfinite(np.inf)
    False
    >>> np.isfinite(np.NINF)
    False
    >>> np.isfinite([np.log(-1.),1.,np.log(0)])
    array([False,  True, False])
    
    
    >>> x = np.array([-np.inf, 0., np.inf])
    >>> y = np.array([2, 2, 2])
    >>> np.isfinite(x, y)
    array([0, 1, 0])
    >>> y
    array([0, 1, 0])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.isfinite.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

