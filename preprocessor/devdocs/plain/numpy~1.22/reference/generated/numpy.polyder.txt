# numpy.polyder

numpy.polyder(p, m=1)[source]

    
Return the derivative of the specified order of a polynomial.

Note

This forms part of the old polynomial API. Since version 1.4, the new
polynomial API defined in `numpy.polynomial` is preferred. A summary of the
differences can be found in the transition guide.

Parameters

    
ppoly1d or sequence

    
Polynomial to differentiate. A sequence is interpreted as polynomial
coefficients, see `poly1d`.

mint, optional

    
Order of differentiation (default: 1)

Returns

    
derpoly1d

    
A new polynomial representing the derivative.

See also

`polyint`

    
Anti-derivative of a polynomial.

`poly1d`

    
Class for one-dimensional polynomials.

#### Examples

The derivative of the polynomial \\(x^3 + x^2 + x^1 + 1\\) is:

    
    >>> p = np.poly1d([1,1,1,1])
    >>> p2 = np.polyder(p)
    >>> p2
    poly1d([3, 2, 1])
    
which evaluates to:

    
    >>> p2(2.)
    17.0
    
We can verify this, approximating the derivative with `(f(x + h) - f(x))/h`:

    
    >>> (p(2. + 0.001) - p(2.)) / 0.001
    17.007000999997857
    
The fourth-order derivative of a 3rd-order polynomial is zero:

    
    >>> np.polyder(p, 2)
    poly1d([6, 2])
    >>> np.polyder(p, 3)
    poly1d([6])
    >>> np.polyder(p, 4)
    poly1d([0])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.polyder.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

