# numpy.full

numpy.full(shape, fill_value, dtype=None, order='C', *, like=None)[source]

    
Return a new array of given shape and type, filled with `fill_value`.

Parameters

    
shapeint or sequence of ints

    
Shape of the new array, e.g., `(2, 3)` or `2`.

fill_valuescalar or array_like

    
Fill value.

dtypedata-type, optional

    
The desired data-type for the array The default, None, means

    
`np.array(fill_value).dtype`.

order{‘C’, ‘F’}, optional

    
Whether to store multidimensional data in C- or Fortran-contiguous (row- or
column-wise) order in memory.

likearray_like

    
Reference object to allow the creation of arrays which are not NumPy arrays.
If an array-like passed in as `like` supports the `__array_function__`
protocol, the result will be defined by it. In this case, it ensures the
creation of an array object compatible with that passed in via this argument.

New in version 1.20.0.

Returns

    
outndarray

    
Array of `fill_value` with the given shape, dtype, and order.

See also

`full_like`

    
Return a new array with shape of input filled with value.

`empty`

    
Return a new uninitialized array.

`ones`

    
Return a new array setting values to one.

`zeros`

    
Return a new array setting values to zero.

#### Examples

    
    >>> np.full((2, 2), np.inf)
    array([[inf, inf],
           [inf, inf]])
    >>> np.full((2, 2), 10)
    array([[10, 10],
           [10, 10]])
    
    
    >>> np.full((2, 2), [1, 2])
    array([[1, 2],
           [1, 2]])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.full.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

