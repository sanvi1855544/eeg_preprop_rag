# numpy.mgrid

numpy.mgrid = <numpy.lib.index_tricks.MGridClass object>

    
`nd_grid` instance which returns a dense multi-dimensional “meshgrid”.

An instance of `numpy.lib.index_tricks.nd_grid` which returns an dense (or
fleshed out) mesh-grid when indexed, so that each returned argument has the
same shape. The dimensions and number of the output arrays are equal to the
number of indexing dimensions. If the step length is not a complex number,
then the stop is not inclusive.

However, if the step length is a complex number (e.g. 5j), then the integer
part of its magnitude is interpreted as specifying the number of points to
create between the start and stop values, where the stop value is inclusive.

Returns

    
mesh-grid `ndarrays` all of the same dimensions

See also

`numpy.lib.index_tricks.nd_grid`

    
class of `ogrid` and `mgrid` objects

`ogrid`

    
like mgrid but returns open (not fleshed out) mesh grids

`r_`

    
array concatenator

#### Examples

    
    >>> np.mgrid[0:5,0:5]
    array([[[0, 0, 0, 0, 0],
            [1, 1, 1, 1, 1],
            [2, 2, 2, 2, 2],
            [3, 3, 3, 3, 3],
            [4, 4, 4, 4, 4]],
           [[0, 1, 2, 3, 4],
            [0, 1, 2, 3, 4],
            [0, 1, 2, 3, 4],
            [0, 1, 2, 3, 4],
            [0, 1, 2, 3, 4]]])
    >>> np.mgrid[-1:1:5j]
    array([-1. , -0.5,  0. ,  0.5,  1. ])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.mgrid.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

