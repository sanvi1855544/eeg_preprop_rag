# numpy.atleast_3d

numpy.atleast_3d(*arys)[source]

    
View inputs as arrays with at least three dimensions.

Parameters

    
arys1, arys2, …array_like

    
One or more array-like sequences. Non-array inputs are converted to arrays.
Arrays that already have three or more dimensions are preserved.

Returns

    
res1, res2, …ndarray

    
An array, or list of arrays, each with `a.ndim >= 3`. Copies are avoided where
possible, and views with three or more dimensions are returned. For example, a
1-D array of shape `(N,)` becomes a view of shape `(1, N, 1)`, and a 2-D array
of shape `(M, N)` becomes a view of shape `(M, N, 1)`.

See also

`atleast_1d`, `atleast_2d`

#### Examples

    
    >>> np.atleast_3d(3.0)
    array([[[3.]]])
    
    
    >>> x = np.arange(3.0)
    >>> np.atleast_3d(x).shape
    (1, 3, 1)
    
    
    >>> x = np.arange(12.0).reshape(4,3)
    >>> np.atleast_3d(x).shape
    (4, 3, 1)
    >>> np.atleast_3d(x).base is x.base  # x is a reshape, so not base itself
    True
    
    
    >>> for arr in np.atleast_3d([1, 2], [[1, 2]], [[[1, 2]]]):
    ...     print(arr, arr.shape) 
    ...
    [[[1]
      [2]]] (1, 2, 1)
    [[[1]
      [2]]] (1, 2, 1)
    [[[1 2]]] (1, 1, 2)
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.atleast_3d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

