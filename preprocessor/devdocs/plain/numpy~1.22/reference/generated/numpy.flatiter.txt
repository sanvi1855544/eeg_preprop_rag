# numpy.flatiter

class numpy.flatiter[source]

    
Flat iterator object to iterate over arrays.

A `flatiter` iterator is returned by `x.flat` for any array `x`. It allows
iterating over the array as if it were a 1-D array, either in a for-loop or by
calling its `next` method.

Iteration is done in row-major, C-style order (the last index varying the
fastest). The iterator can also be indexed using basic slicing or advanced
indexing.

See also

`ndarray.flat`

    
Return a flat iterator over an array.

`ndarray.flatten`

    
Returns a flattened copy of an array.

#### Notes

A `flatiter` iterator can not be constructed directly from Python code by
calling the `flatiter` constructor.

#### Examples

    
    >>> x = np.arange(6).reshape(2, 3)
    >>> fl = x.flat
    >>> type(fl)
    <class 'numpy.flatiter'>
    >>> for item in fl:
    ...     print(item)
    ...
    0
    1
    2
    3
    4
    5
    
    
    >>> fl[2:4]
    array([2, 3])
    
Attributes

    
`base`

    
A reference to the array that is iterated over.

`coords`

    
An N-dimensional tuple of current coordinates.

`index`

    
Current flat index into the array.

#### Methods

`copy`() | Get a copy of the iterator as a 1-D array.  
---|---  
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.flatiter.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

