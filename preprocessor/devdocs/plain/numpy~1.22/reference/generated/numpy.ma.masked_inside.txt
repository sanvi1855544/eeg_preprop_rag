# numpy.ma.masked_inside

ma.masked_inside(x, v1, v2, copy=True)[source]

    
Mask an array inside a given interval.

Shortcut to `masked_where`, where `condition` is True for `x` inside the
interval [v1,v2] (v1 <= x <= v2). The boundaries `v1` and `v2` can be given in
either order.

See also

`masked_where`

    
Mask where a condition is met.

#### Notes

The array `x` is prefilled with its filling value.

#### Examples

    
    >>> import numpy.ma as ma
    >>> x = [0.31, 1.2, 0.01, 0.2, -0.4, -1.1]
    >>> ma.masked_inside(x, -0.3, 0.3)
    masked_array(data=[0.31, 1.2, --, --, -0.4, -1.1],
                 mask=[False, False,  True,  True, False, False],
           fill_value=1e+20)
    
The order of `v1` and `v2` doesn’t matter.

    
    >>> ma.masked_inside(x, 0.3, -0.3)
    masked_array(data=[0.31, 1.2, --, --, -0.4, -1.1],
                 mask=[False, False,  True,  True, False, False],
           fill_value=1e+20)
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.ma.masked_inside.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

