# numpy.polynomial.chebyshev.chebdiv

polynomial.chebyshev.chebdiv(c1, c2)[source]

    
Divide one Chebyshev series by another.

Returns the quotient-with-remainder of two Chebyshev series `c1` / `c2`. The
arguments are sequences of coefficients from lowest order “term” to highest,
e.g., [1,2,3] represents the series `T_0 + 2*T_1 + 3*T_2`.

Parameters

    
c1, c2array_like

    
1-D arrays of Chebyshev series coefficients ordered from low to high.

Returns

    
[quo, rem]ndarrays

    
Of Chebyshev series coefficients representing the quotient and remainder.

See also

`chebadd`, `chebsub`, `chebmulx`, `chebmul`, `chebpow`

#### Notes

In general, the (polynomial) division of one C-series by another results in
quotient and remainder terms that are not in the Chebyshev polynomial basis
set. Thus, to express these results as C-series, it is typically necessary to
“reproject” the results onto said basis set, which typically produces
“unintuitive” (but correct) results; see Examples section below.

#### Examples

    
    >>> from numpy.polynomial import chebyshev as C
    >>> c1 = (1,2,3)
    >>> c2 = (3,2,1)
    >>> C.chebdiv(c1,c2) # quotient "intuitive," remainder not
    (array([3.]), array([-8., -4.]))
    >>> c2 = (0,1,2,3)
    >>> C.chebdiv(c2,c1) # neither "intuitive"
    (array([0., 2.]), array([-2., -4.]))
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.polynomial.chebyshev.chebdiv.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

