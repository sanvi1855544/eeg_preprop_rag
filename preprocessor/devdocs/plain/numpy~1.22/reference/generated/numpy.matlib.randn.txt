# numpy.matlib.randn

matlib.randn(*args)[source]

    
Return a random matrix with data from the “standard normal” distribution.

`randn` generates a matrix filled with random floats sampled from a univariate
“normal” (Gaussian) distribution of mean 0 and variance 1.

Parameters

    
*argsArguments
    
Shape of the output. If given as N integers, each integer specifies the size
of one dimension. If given as a tuple, this tuple gives the complete shape.

Returns

    
Zmatrix of floats

    
A matrix of floating-point samples drawn from the standard normal
distribution.

See also

`rand`, `numpy.random.RandomState.randn`

#### Notes

For random samples from \\(N(\mu, \sigma^2)\\), use:

`sigma * np.matlib.randn(...) + mu`

#### Examples

    
    >>> np.random.seed(123)
    >>> import numpy.matlib
    >>> np.matlib.randn(1)
    matrix([[-1.0856306]])
    >>> np.matlib.randn(1, 2, 3)
    matrix([[ 0.99734545,  0.2829785 , -1.50629471],
            [-0.57860025,  1.65143654, -2.42667924]])
    
Two-by-four matrix of samples from \\(N(3, 6.25)\\):

    
    >>> 2.5 * np.matlib.randn((2, 4)) + 3
    matrix([[1.92771843, 6.16484065, 0.83314899, 1.30278462],
            [2.76322758, 6.72847407, 1.40274501, 1.8900451 ]])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.matlib.randn.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

