# numpy.ma.MaskedArray.reshape

method

ma.MaskedArray.reshape(*s, **kwargs)[source]

    
Give a new shape to the array without changing its data.

Returns a masked array containing the same data, but with a new shape. The
result is a view on the original array; if this is not possible, a ValueError
is raised.

Parameters

    
shapeint or tuple of ints

    
The new shape should be compatible with the original shape. If an integer is
supplied, then the result will be a 1-D array of that length.

order{‘C’, ‘F’}, optional

    
Determines whether the array data should be viewed as in C (row-major) or
FORTRAN (column-major) order.

Returns

    
reshaped_arrayarray

    
A new view on the array.

See also

`reshape`

    
Equivalent function in the masked array module.

`numpy.ndarray.reshape`

    
Equivalent method on ndarray object.

`numpy.reshape`

    
Equivalent function in the NumPy module.

#### Notes

The reshaping operation cannot guarantee that a copy will not be made, to
modify the shape in place, use `a.shape = s`

#### Examples

    
    >>> x = np.ma.array([[1,2],[3,4]], mask=[1,0,0,1])
    >>> x
    masked_array(
      data=[[--, 2],
            [3, --]],
      mask=[[ True, False],
            [False,  True]],
      fill_value=999999)
    >>> x = x.reshape((4,1))
    >>> x
    masked_array(
      data=[[--],
            [2],
            [3],
            [--]],
      mask=[[ True],
            [False],
            [False],
            [ True]],
      fill_value=999999)
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.ma.MaskedArray.reshape.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

