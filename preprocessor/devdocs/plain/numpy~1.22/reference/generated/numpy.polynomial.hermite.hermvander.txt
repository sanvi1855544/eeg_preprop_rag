# numpy.polynomial.hermite.hermvander

polynomial.hermite.hermvander(x, deg)[source]

    
Pseudo-Vandermonde matrix of given degree.

Returns the pseudo-Vandermonde matrix of degree `deg` and sample points `x`.
The pseudo-Vandermonde matrix is defined by

\\[V[..., i] = H_i(x),\\]

where `0 <= i <= deg`. The leading indices of `V` index the elements of `x`
and the last index is the degree of the Hermite polynomial.

If `c` is a 1-D array of coefficients of length `n + 1` and `V` is the array
`V = hermvander(x, n)`, then `np.dot(V, c)` and `hermval(x, c)` are the same
up to roundoff. This equivalence is useful both for least squares fitting and
for the evaluation of a large number of Hermite series of the same degree and
sample points.

Parameters

    
xarray_like

    
Array of points. The dtype is converted to float64 or complex128 depending on
whether any of the elements are complex. If `x` is scalar it is converted to a
1-D array.

degint

    
Degree of the resulting matrix.

Returns

    
vanderndarray

    
The pseudo-Vandermonde matrix. The shape of the returned matrix is `x.shape +
(deg + 1,)`, where The last index is the degree of the corresponding Hermite
polynomial. The dtype will be the same as the converted `x`.

#### Examples

    
    >>> from numpy.polynomial.hermite import hermvander
    >>> x = np.array([-1, 0, 1])
    >>> hermvander(x, 3)
    array([[ 1., -2.,  2.,  4.],
           [ 1.,  0., -2., -0.],
           [ 1.,  2.,  2., -4.]])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.polynomial.hermite.hermvander.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

