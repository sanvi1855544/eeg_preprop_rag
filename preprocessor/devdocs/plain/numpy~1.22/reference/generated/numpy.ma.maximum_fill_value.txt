# numpy.ma.maximum_fill_value

ma.maximum_fill_value(obj)[source]

    
Return the minimum value that can be represented by the dtype of an object.

This function is useful for calculating a fill value suitable for taking the
maximum of an array with a given dtype.

Parameters

    
objndarray, dtype or scalar

    
An object that can be queried for it’s numeric type.

Returns

    
valscalar

    
The minimum representable value.

Raises

    
TypeError

    
If `obj` isn’t a suitable numeric type.

See also

`minimum_fill_value`

    
The inverse function.

`set_fill_value`

    
Set the filling value of a masked array.

`MaskedArray.fill_value`

    
Return current fill value.

#### Examples

    
    >>> import numpy.ma as ma
    >>> a = np.int8()
    >>> ma.maximum_fill_value(a)
    -128
    >>> a = np.int32()
    >>> ma.maximum_fill_value(a)
    -2147483648
    
An array of numeric data can also be passed.

    
    >>> a = np.array([1, 2, 3], dtype=np.int8)
    >>> ma.maximum_fill_value(a)
    -128
    >>> a = np.array([1, 2, 3], dtype=np.float32)
    >>> ma.maximum_fill_value(a)
    -inf
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.ma.maximum_fill_value.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

