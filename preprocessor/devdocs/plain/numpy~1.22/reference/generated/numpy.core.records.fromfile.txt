# numpy.core.records.fromfile

core.records.fromfile(fd, dtype=None, shape=None, offset=0, formats=None,
names=None, titles=None, aligned=False, byteorder=None)[source]

    
Create an array from binary file data

Parameters

    
fdstr or file type

    
If file is a string or a path-like object then that file is opened, else it is
assumed to be a file object. The file object must support random access (i.e.
it must have tell and seek methods).

dtypedata-type, optional

    
valid dtype for all arrays

shapeint or tuple of ints, optional

    
shape of each array.

offsetint, optional

    
Position in the file to start reading from.

formats, names, titles, aligned, byteorder :

    
If `dtype` is `None`, these arguments are passed to `numpy.format_parser` to
construct a dtype. See that function for detailed documentation

Returns

    
np.recarray

    
record array consisting of data enclosed in file.

#### Examples

    
    >>> from tempfile import TemporaryFile
    >>> a = np.empty(10,dtype='f8,i4,a5')
    >>> a[5] = (0.5,10,'abcde')
    >>>
    >>> fd=TemporaryFile()
    >>> a = a.newbyteorder('<')
    >>> a.tofile(fd)
    >>>
    >>> _ = fd.seek(0)
    >>> r=np.core.records.fromfile(fd, formats='f8,i4,a5', shape=10,
    ... byteorder='<')
    >>> print(r[5])
    (0.5, 10, 'abcde')
    >>> r.shape
    (10,)
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.core.records.fromfile.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

