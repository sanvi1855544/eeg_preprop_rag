# numpy.heaviside

numpy.heaviside(x1, x2, /, out=None, *, where=True, casting='same_kind',
order='K', dtype=None, subok=True[, signature, extobj]) = <ufunc 'heaviside'>

    
Compute the Heaviside step function.

The Heaviside step function is defined as:

    
                          0   if x1 < 0
    heaviside(x1, x2) =  x2   if x1 == 0
                          1   if x1 > 0
    
where `x2` is often taken to be 0.5, but 0 and 1 are also sometimes used.

Parameters

    
x1array_like

    
Input values.

x2array_like

    
The value of the function when x1 is 0. If `x1.shape != x2.shape`, they must
be broadcastable to a common shape (which becomes the shape of the output).

outndarray, None, or tuple of ndarray and None, optional

    
A location into which the result is stored. If provided, it must have a shape
that the inputs broadcast to. If not provided or None, a freshly-allocated
array is returned. A tuple (possible only as a keyword argument) must have
length equal to the number of outputs.

wherearray_like, optional

    
This condition is broadcast over the input. At locations where the condition
is True, the `out` array will be set to the ufunc result. Elsewhere, the `out`
array will retain its original value. Note that if an uninitialized `out`
array is created via the default `out=None`, locations within it where the
condition is False will remain uninitialized.

**kwargs

    
For other keyword-only arguments, see the ufunc docs.

Returns

    
outndarray or scalar

    
The output array, element-wise Heaviside step function of `x1`. This is a
scalar if both `x1` and `x2` are scalars.

#### Notes

New in version 1.13.0.

#### References

#### Examples

    
    >>> np.heaviside([-1.5, 0, 2.0], 0.5)
    array([ 0. ,  0.5,  1. ])
    >>> np.heaviside([-1.5, 0, 2.0], 1)
    array([ 0.,  1.,  1.])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.heaviside.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

