# numpy.ma.masked_all_like

ma.masked_all_like(arr)[source]

    
Empty masked array with the properties of an existing array.

Return an empty masked array of the same shape and dtype as the array `arr`,
where all the data are masked.

Parameters

    
arrndarray

    
An array describing the shape and dtype of the required MaskedArray.

Returns

    
aMaskedArray

    
A masked array with all data masked.

Raises

    
AttributeError

    
If `arr` doesn’t have a shape attribute (i.e. not an ndarray)

See also

`masked_all`

    
Empty masked array with all elements masked.

#### Examples

    
    >>> import numpy.ma as ma
    >>> arr = np.zeros((2, 3), dtype=np.float32)
    >>> arr
    array([[0., 0., 0.],
           [0., 0., 0.]], dtype=float32)
    >>> ma.masked_all_like(arr)
    masked_array(
      data=[[--, --, --],
            [--, --, --]],
      mask=[[ True,  True,  True],
            [ True,  True,  True]],
      fill_value=1e+20,
      dtype=float32)
    
The dtype of the masked array matches the dtype of `arr`.

    
    >>> arr.dtype
    dtype('float32')
    >>> ma.masked_all_like(arr).dtype
    dtype('float32')
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.ma.masked_all_like.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

