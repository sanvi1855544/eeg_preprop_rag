# numpy.argmin

numpy.argmin(a, axis=None, out=None, *, keepdims=<no value>)[source]

    
Returns the indices of the minimum values along an axis.

Parameters

    
aarray_like

    
Input array.

axisint, optional

    
By default, the index is into the flattened array, otherwise along the
specified axis.

outarray, optional

    
If provided, the result will be inserted into this array. It should be of the
appropriate shape and dtype.

keepdimsbool, optional

    
If this is set to True, the axes which are reduced are left in the result as
dimensions with size one. With this option, the result will broadcast
correctly against the array.

New in version 1.22.0.

Returns

    
index_arrayndarray of ints

    
Array of indices into the array. It has the same shape as `a.shape` with the
dimension along `axis` removed. If `keepdims` is set to True, then the size of
`axis` will be 1 with the resulting array having same shape as `a.shape`.

See also

`ndarray.argmin`, `argmax`

`amin`

    
The minimum value along a given axis.

`unravel_index`

    
Convert a flat index into an index tuple.

`take_along_axis`

    
Apply `np.expand_dims(index_array, axis)` from argmin to an array as if by
calling min.

#### Notes

In case of multiple occurrences of the minimum values, the indices
corresponding to the first occurrence are returned.

#### Examples

    
    >>> a = np.arange(6).reshape(2,3) + 10
    >>> a
    array([[10, 11, 12],
           [13, 14, 15]])
    >>> np.argmin(a)
    0
    >>> np.argmin(a, axis=0)
    array([0, 0, 0])
    >>> np.argmin(a, axis=1)
    array([0, 0])
    
Indices of the minimum elements of a N-dimensional array:

    
    >>> ind = np.unravel_index(np.argmin(a, axis=None), a.shape)
    >>> ind
    (0, 0)
    >>> a[ind]
    10
    
    
    >>> b = np.arange(6) + 10
    >>> b[4] = 10
    >>> b
    array([10, 11, 12, 13, 10, 15])
    >>> np.argmin(b)  # Only the first occurrence is returned.
    0
    
    
    >>> x = np.array([[4,2,3], [1,0,3]])
    >>> index_array = np.argmin(x, axis=-1)
    >>> # Same as np.amin(x, axis=-1, keepdims=True)
    >>> np.take_along_axis(x, np.expand_dims(index_array, axis=-1), axis=-1)
    array([[2],
           [0]])
    >>> # Same as np.amax(x, axis=-1)
    >>> np.take_along_axis(x, np.expand_dims(index_array, axis=-1), axis=-1).squeeze(axis=-1)
    array([2, 0])
    
Setting `keepdims` to `True`,

    
    >>> x = np.arange(24).reshape((2, 3, 4))
    >>> res = np.argmin(x, axis=1, keepdims=True)
    >>> res.shape
    (2, 1, 4)
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.argmin.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

