# numpy.common_type

numpy.common_type(*arrays)[source]

    
Return a scalar type which is common to the input arrays.

The return type will always be an inexact (i.e. floating point) scalar type,
even if all the arrays are integer arrays. If one of the inputs is an integer
array, the minimum precision type that is returned is a 64-bit floating point
dtype.

All input arrays except int64 and uint64 can be safely cast to the returned
dtype without loss of information.

Parameters

    
array1, array2, …ndarrays

    
Input arrays.

Returns

    
outdata type code

    
Data type code.

See also

`dtype`, `mintypecode`

#### Examples

    
    >>> np.common_type(np.arange(2, dtype=np.float32))
    <class 'numpy.float32'>
    >>> np.common_type(np.arange(2, dtype=np.float32), np.arange(2))
    <class 'numpy.float64'>
    >>> np.common_type(np.arange(4), np.array([45, 6.j]), np.array([45.0]))
    <class 'numpy.complex128'>
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.common_type.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

