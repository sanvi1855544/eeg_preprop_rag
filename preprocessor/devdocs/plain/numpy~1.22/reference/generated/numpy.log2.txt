# numpy.log2

numpy.log2(x, /, out=None, *, where=True, casting='same_kind', order='K',
dtype=None, subok=True[, signature, extobj]) = <ufunc 'log2'>

    
Base-2 logarithm of `x`.

Parameters

    
xarray_like

    
Input values.

outndarray, None, or tuple of ndarray and None, optional

    
A location into which the result is stored. If provided, it must have a shape
that the inputs broadcast to. If not provided or None, a freshly-allocated
array is returned. A tuple (possible only as a keyword argument) must have
length equal to the number of outputs.

wherearray_like, optional

    
This condition is broadcast over the input. At locations where the condition
is True, the `out` array will be set to the ufunc result. Elsewhere, the `out`
array will retain its original value. Note that if an uninitialized `out`
array is created via the default `out=None`, locations within it where the
condition is False will remain uninitialized.

**kwargs

    
For other keyword-only arguments, see the ufunc docs.

Returns

    
yndarray

    
Base-2 logarithm of `x`. This is a scalar if `x` is a scalar.

See also

`log`, `log10`, `log1p`, `emath.log2`

#### Notes

New in version 1.3.0.

Logarithm is a multivalued function: for each `x` there is an infinite number
of `z` such that `2**z = x`. The convention is to return the `z` whose
imaginary part lies in `[-pi, pi]`.

For real-valued input data types, `log2` always returns real output. For each
value that cannot be expressed as a real number or infinity, it yields `nan`
and sets the `invalid` floating point error flag.

For complex-valued input, `log2` is a complex analytical function that has a
branch cut `[-inf, 0]` and is continuous from above on it. `log2` handles the
floating-point negative zero as an infinitesimal negative number, conforming
to the C99 standard.

#### Examples

    
    >>> x = np.array([0, 1, 2, 2**4])
    >>> np.log2(x)
    array([-Inf,   0.,   1.,   4.])
    
    
    >>> xi = np.array([0+1.j, 1, 2+0.j, 4.j])
    >>> np.log2(xi)
    array([ 0.+2.26618007j,  0.+0.j        ,  1.+0.j        ,  2.+2.26618007j])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.log2.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

