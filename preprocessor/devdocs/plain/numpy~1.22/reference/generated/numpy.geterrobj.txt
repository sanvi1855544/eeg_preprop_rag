# numpy.geterrobj

numpy.geterrobj()

    
Return the current object that defines floating-point error handling.

The error object contains all information that defines the error handling
behavior in NumPy. `geterrobj` is used internally by the other functions that
get and set error handling behavior (`geterr`, `seterr`, `geterrcall`,
`seterrcall`).

Returns

    
errobjlist

    
The error object, a list containing three elements: [internal numpy buffer
size, error mask, error callback function].

The error mask is a single integer that holds the treatment information on all
four floating point errors. The information for each error type is contained
in three bits of the integer. If we print it in base 8, we can see what
treatment is set for “invalid”, “under”, “over”, and “divide” (in that order).
The printed string can be interpreted with

  * 0 : ‘ignore’
  * 1 : ‘warn’
  * 2 : ‘raise’
  * 3 : ‘call’
  * 4 : ‘print’
  * 5 : ‘log’

See also

`seterrobj`, `seterr`, `geterr`, `seterrcall`, `geterrcall`

`getbufsize`, `setbufsize`

#### Notes

For complete documentation of the types of floating-point exceptions and
treatment options, see `seterr`.

#### Examples

    
    >>> np.geterrobj()  # first get the defaults
    [8192, 521, None]
    
    
    >>> def err_handler(type, flag):
    ...     print("Floating point error (%s), with flag %s" % (type, flag))
    ...
    >>> old_bufsize = np.setbufsize(20000)
    >>> old_err = np.seterr(divide='raise')
    >>> old_handler = np.seterrcall(err_handler)
    >>> np.geterrobj()
    [8192, 521, <function err_handler at 0x91dcaac>]
    
    
    >>> old_err = np.seterr(all='ignore')
    >>> np.base_repr(np.geterrobj()[1], 8)
    '0'
    >>> old_err = np.seterr(divide='warn', over='log', under='call',
    ...                     invalid='print')
    >>> np.base_repr(np.geterrobj()[1], 8)
    '4351'
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.geterrobj.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

