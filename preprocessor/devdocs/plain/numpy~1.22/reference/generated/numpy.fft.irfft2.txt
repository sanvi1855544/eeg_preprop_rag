# numpy.fft.irfft2

fft.irfft2(a, s=None, axes=(- 2, - 1), norm=None)[source]

    
Computes the inverse of `rfft2`.

Parameters

    
aarray_like

    
The input array

ssequence of ints, optional

    
Shape of the real output to the inverse FFT.

axessequence of ints, optional

    
The axes over which to compute the inverse fft. Default is the last two axes.

norm{“backward”, “ortho”, “forward”}, optional

    
New in version 1.10.0.

Normalization mode (see `numpy.fft`). Default is “backward”. Indicates which
direction of the forward/backward pair of transforms is scaled and with what
normalization factor.

New in version 1.20.0: The “backward”, “forward” values were added.

Returns

    
outndarray

    
The result of the inverse real 2-D FFT.

See also

`rfft2`

    
The forward two-dimensional FFT of real input, of which `irfft2` is the
inverse.

`rfft`

    
The one-dimensional FFT for real input.

`irfft`

    
The inverse of the one-dimensional FFT of real input.

`irfftn`

    
Compute the inverse of the N-dimensional FFT of real input.

#### Notes

This is really `irfftn` with different defaults. For more details see
`irfftn`.

#### Examples

    
    >>> a = np.mgrid[:5, :5][0]
    >>> A = np.fft.rfft2(a)
    >>> np.fft.irfft2(A, s=a.shape)
    array([[0., 0., 0., 0., 0.],
           [1., 1., 1., 1., 1.],
           [2., 2., 2., 2., 2.],
           [3., 3., 3., 3., 3.],
           [4., 4., 4., 4., 4.]])
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/generated/numpy.fft.irfft2.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

