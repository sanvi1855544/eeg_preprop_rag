# numpy.random.Generator.standard_exponential

method

random.Generator.standard_exponential(size=None, dtype=np.float64,
method='zig', out=None)

    
Draw samples from the standard exponential distribution.

`standard_exponential` is identical to the exponential distribution with a
scale parameter of 1.

Parameters

    
sizeint or tuple of ints, optional

    
Output shape. If the given shape is, e.g., `(m, n, k)`, then `m * n * k`
samples are drawn. Default is None, in which case a single value is returned.

dtypedtype, optional

    
Desired dtype of the result, only `float64` and `float32` are supported.
Byteorder must be native. The default value is np.float64.

methodstr, optional

    
Either ‘inv’ or ‘zig’. ‘inv’ uses the default inverse CDF method. ‘zig’ uses
the much faster Ziggurat method of Marsaglia and Tsang.

outndarray, optional

    
Alternative output array in which to place the result. If size is not None, it
must have the same shape as the provided size and must match the type of the
output values.

Returns

    
outfloat or ndarray

    
Drawn samples.

#### Examples

Output a 3x8000 array:

    
    >>> n = np.random.default_rng().standard_exponential((3, 8000))
    
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/random/generated/numpy.random.Generator.standard_exponential.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

