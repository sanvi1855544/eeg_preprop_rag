# numpy.random.beta

random.beta(a, b, size=None)

    
Draw samples from a Beta distribution.

The Beta distribution is a special case of the Dirichlet distribution, and is
related to the Gamma distribution. It has the probability distribution
function

\\[f(x; a,b) = \frac{1}{B(\alpha, \beta)} x^{\alpha - 1} (1 - x)^{\beta -
1},\\]

where the normalization, B, is the beta function,

\\[B(\alpha, \beta) = \int_0^1 t^{\alpha - 1} (1 - t)^{\beta - 1} dt.\\]

It is often seen in Bayesian inference and order statistics.

Note

New code should use the `beta` method of a `default_rng()` instance instead;
please see the Quick Start.

Parameters

    
afloat or array_like of floats

    
Alpha, positive (>0).

bfloat or array_like of floats

    
Beta, positive (>0).

sizeint or tuple of ints, optional

    
Output shape. If the given shape is, e.g., `(m, n, k)`, then `m * n * k`
samples are drawn. If size is `None` (default), a single value is returned if
`a` and `b` are both scalars. Otherwise, `np.broadcast(a, b).size` samples are
drawn.

Returns

    
outndarray or scalar

    
Drawn samples from the parameterized beta distribution.

See also

`Generator.beta`

    
which should be used for new code.

© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/random/generated/numpy.random.beta.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

