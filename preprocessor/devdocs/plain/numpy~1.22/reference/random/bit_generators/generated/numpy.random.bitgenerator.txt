# numpy.random.BitGenerator

class numpy.random.BitGenerator(seed=None)

    
Base Class for generic BitGenerators, which provide a stream of random bits
based on different algorithms. Must be overridden.

Parameters

    
seed{None, int, array_like[ints], SeedSequence}, optional

    
A seed to initialize the `BitGenerator`. If None, then fresh, unpredictable
entropy will be pulled from the OS. If an `int` or `array_like[ints]` is
passed, then it will be passed to ~`numpy.random.SeedSequence` to derive the
initial `BitGenerator` state. One may also pass in a `SeedSequence` instance.

See also

`SeedSequence`

Attributes

    
lockthreading.Lock

    
Lock instance that is shared so that the same BitGenerator can be used in
multiple Generators without corrupting the state. Code that generates values
from a bit generator should hold the bit generator’s lock.

#### Methods

`random_raw`(self[, size]) | Return randoms as generated by the underlying BitGenerator  
---|---  
© 2005–2021 NumPy Developers  
Licensed under the 3-clause BSD License.  
https://numpy.org/doc/1.22/reference/random/bit_generators/generated/numpy.random.BitGenerator.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

