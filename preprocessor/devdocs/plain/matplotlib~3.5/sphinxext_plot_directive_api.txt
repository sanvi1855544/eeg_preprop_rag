# matplotlib.sphinxext.plot_directive

## A directive for including a Matplotlib plot in a Sphinx document

By default, in HTML output, `plot` will include a .png file with a link to a
high-res .png and .pdf. In LaTeX output, it will include a .pdf.

The source code for the plot may be included in one of three ways:

  1. A path to a source file as the argument to the directive:
        .. plot:: path/to/plot.py
    
When a path to a source file is given, the content of the directive may
optionally contain a caption for the plot:

        .. plot:: path/to/plot.py
    
       The plot caption.
    
Additionally, one may specify the name of a function to call (with no
arguments) immediately after importing the module:

        .. plot:: path/to/plot.py plot_function1
    
  2. Included as inline content to the directive:
        .. plot::
    
       import matplotlib.pyplot as plt
       import matplotlib.image as mpimg
       import numpy as np
       img = mpimg.imread('_static/stinkbug.png')
       imgplot = plt.imshow(img)
    
  3. Using doctest syntax:
        .. plot::
    
       A plotting example:
       >>> import matplotlib.pyplot as plt
       >>> plt.plot([1, 2, 3], [4, 5, 6])
    

### Options

The `plot` directive supports the following options:

format{'python', 'doctest'}

    
The format of the input. If unset, the format is auto-detected.

include-sourcebool

    
Whether to display the source code. The default can be changed using the
`plot_include_source` variable in `conf.py` (which itself defaults to False).

encodingstr

    
If this source file is in a non-UTF8 or non-ASCII encoding, the encoding must
be specified using the `:encoding:` option. The encoding will not be inferred
using the `-*- coding -*-` metacomment.

contextbool or str

    
If provided, the code will be run in the context of all previous plot
directives for which the `:context:` option was specified. This only applies
to inline code plot directives, not those run from files. If the `:context:
reset` option is specified, the context is reset for this and future plots,
and previous figures are closed prior to running the code. `:context: close-
figs` keeps the context but closes previous figures before running the code.

nofigsbool

    
If specified, the code block will be run, but no figures will be inserted.
This is usually useful with the `:context:` option.

captionstr

    
If specified, the option's argument will be used as a caption for the figure.
This overwrites the caption given in the content, when the plot is generated
from a file.

Additionally, this directive supports all of the options of the `image`
directive, except for target (since plot will add its own target). These
include alt, height, width, scale, align and class.

### Configuration options

The plot directive has the following configuration options:

plot_include_source

    
Default value for the include-source option (default: False).

plot_html_show_source_link

    
Whether to show a link to the source in HTML (default: True).

plot_pre_code

    
Code that should be executed before each plot. If None (the default), it will
default to a string containing:

    
    import numpy as np
    from matplotlib import pyplot as plt
    
plot_basedir

    
Base directory, to which `plot::` file names are relative to. If None or empty
(the default), file names are relative to the directory where the file
containing the directive is.

plot_formats

    
File formats to generate (default: ['png', 'hires.png', 'pdf']). List of
tuples or strings:

    
    [(suffix, dpi), suffix, ...]
    
that determine the file format and the DPI. For entries whose DPI was omitted,
sensible defaults are chosen. When passing from the command line through
sphinx_build the list should be passed as suffix:dpi,suffix:dpi, ...

plot_html_show_formats

    
Whether to show links to the files in HTML (default: True).

plot_rcparams

    
A dictionary containing any non-standard rcParams that should be applied
before each plot (default: {}).

plot_apply_rcparams

    
By default, rcParams are applied when `:context:` option is not used in a plot
directive. If set, this configuration option overrides this behavior and
applies rcParams before each plot.

plot_working_directory

    
By default, the working directory will be changed to the directory of the
example, so the code can get at its data files, if any. Also its path will be
added to `sys.path` so it can import any helper modules sitting beside it.
This configuration option can be used to specify a central directory (also
added to `sys.path`) where data files and helper modules for all code are
located.

plot_template

    
Provide a customized template for preparing restructured text.

classmatplotlib.sphinxext.plot_directive.PlotDirective(name, arguments,
options, content, lineno, content_offset, block_text, state,
state_machine)[source]

    
The `.. plot::` directive, as documented in the module's docstring.

run()[source]

    
Run the plot directive.

exceptionmatplotlib.sphinxext.plot_directive.PlotError[source]

matplotlib.sphinxext.plot_directive.mark_plot_labels(app, document)[source]

    
To make plots referenceable, we need to move the reference from the "htmlonly"
(or "latexonly") node to the actual figure node itself.

matplotlib.sphinxext.plot_directive.out_of_date(original, derived,
includes=None)[source]

    
Return whether derived is out-of-date relative to original or any of the RST
files included in it using the RST include directive (includes). derived and
original are full paths, and includes is optionally a list of full paths which
may have been included in the original.

matplotlib.sphinxext.plot_directive.render_figures(code, code_path,
output_dir, output_base, context, function_name, config, context_reset=False,
close_figs=False, code_includes=None)[source]

    
Run a pyplot script and save the images in output_dir.

Save the images under output_dir with file names derived from output_base

matplotlib.sphinxext.plot_directive.run_code(code, code_path, ns=None,
function_name=None)[source]

    
[Deprecated] Import a Python module from a path, and run the function given by
name, if function_name is not None.

#### Notes

Deprecated since version 3.5.

matplotlib.sphinxext.plot_directive.split_code_at_show(text)[source]

    
[Deprecated] Split code at plt.show().

#### Notes

Deprecated since version 3.5.

matplotlib.sphinxext.plot_directive.unescape_doctest(text)[source]

    
[Deprecated] Extract code from a piece of text, which contains either Python
code or doctests.

#### Notes

Deprecated since version 3.5.

© 2012–2021 Matplotlib Development Team. All rights reserved.  
Licensed under the Matplotlib License Agreement.  
https://matplotlib.org/3.5.1/api/sphinxext_plot_directive_api.html

