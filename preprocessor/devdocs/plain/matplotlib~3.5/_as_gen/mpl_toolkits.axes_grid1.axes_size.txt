# mpl_toolkits.axes_grid1.axes_size

Provides classes of simple units that will be used with AxesDivider class (or
others) to determine the size of each axes. The unit classes define `get_size`
method that returns a tuple of two floats, meaning relative and absolute
sizes, respectively.

Note that this class is nothing more than a simple tuple of two floats. Take a
look at the Divider class to see how these two values are used.

## Classes

`Add`(a, b) |   
---|---  
`AddList`(add_list) |   
`AxesX`(axes[, aspect, ref_ax]) | Scaled size whose relative part corresponds to the data width of the axes multiplied by the aspect.  
`AxesY`(axes[, aspect, ref_ax]) | Scaled size whose relative part corresponds to the data height of the axes multiplied by the aspect.  
`Fixed`(fixed_size) | Simple fixed size with absolute part = fixed_size and relative part = 0.  
`Fraction`(fraction, ref_size) | An instance whose size is a fraction of the ref_size.  
`GetExtentHelper`(ax, direction) |   
`MaxExtent`(artist_list, w_or_h) | Size whose absolute part is either the largest width or the largest height of the given artist_list.  
`MaxHeight`(artist_list) | Size whose absolute part is the largest height of the given artist_list.  
`MaxWidth`(artist_list) | Size whose absolute part is the largest width of the given artist_list.  
`Padded`(size, pad) | Return a instance where the absolute part of size is increase by the amount of pad.  
`Scalable` | alias of `mpl_toolkits.axes_grid1.axes_size.Scaled`  
`Scaled`(scalable_size) | Simple scaled(?) size with absolute part = 0 and relative part = scalable_size.  
`SizeFromFunc`(func) |   
## Functions

`from_any`(size[, fraction_ref]) | Create a Fixed unit when the first argument is a float, or a Fraction unit if that is a string that ends with %.  
---|---  
© 2012–2021 Matplotlib Development Team. All rights reserved.  
Licensed under the Matplotlib License Agreement.  
https://matplotlib.org/3.5.1/api/_as_gen/mpl_toolkits.axes_grid1.axes_size.html

