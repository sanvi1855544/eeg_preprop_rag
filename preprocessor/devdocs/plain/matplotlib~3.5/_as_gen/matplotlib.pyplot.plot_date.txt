# matplotlib.pyplot.plot_date

matplotlib.pyplot.plot_date(x, y, fmt='o', tz=None, xdate=True, ydate=False,
*, data=None, **kwargs)[source]

    
Plot coercing the axis to treat floats as dates.

Discouraged

This method exists for historic reasons and will be deprecated in the future.

  * `datetime`-like data should directly be plotted using `plot`.
  * If you need to plot plain numeric data as Matplotlib date format or need to set a timezone, call `ax.xaxis.axis_date` / `ax.yaxis.axis_date` before `plot`. See `Axis.axis_date`.

Similar to `plot`, this plots y vs. x as lines or markers. However, the axis
labels are formatted as dates depending on xdate and ydate. Note that `plot`
will work with `datetime` and `numpy.datetime64` objects without resorting to
this method.

Parameters

    
x, yarray-like

    
The coordinates of the data points. If xdate or ydate is True, the respective
values x or y are interpreted as Matplotlib dates.

fmtstr, optional

    
The plot format string. For details, see the corresponding parameter in
`plot`.

tztimezone string or `datetime.tzinfo`, default: `rcParams["timezone"]`
(default: `'UTC'`)

    
The time zone to use in labeling dates.

xdatebool, default: True

    
If True, the x-axis will be interpreted as Matplotlib dates.

ydatebool, default: False

    
If True, the y-axis will be interpreted as Matplotlib dates.

Returns

    
list of `Line2D`

    
Objects representing the plotted data.

Other Parameters

    
dataindexable object, optional

    
If given, the following parameters also accept a string `s`, which is
interpreted as `data[s]` (unless this raises an exception):

x, y

**kwargs

    
Keyword arguments control the `Line2D` properties:

Property | Description  
---|---  
`agg_filter` | a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array  
`alpha` | scalar or None  
`animated` | bool  
`antialiased` or aa | bool  
`clip_box` | `Bbox`  
`clip_on` | bool  
`clip_path` | Patch or (Path, Transform) or None  
`color` or c | color  
`dash_capstyle` | `CapStyle` or {'butt', 'projecting', 'round'}  
`dash_joinstyle` | `JoinStyle` or {'miter', 'round', 'bevel'}  
`dashes` | sequence of floats (on/off ink in points) or (None, None)  
`data` | (2, N) array or two 1D arrays  
`drawstyle` or ds | {'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'  
`figure` | `Figure`  
`fillstyle` | {'full', 'left', 'right', 'bottom', 'top', 'none'}  
`gid` | str  
`in_layout` | bool  
`label` | object  
`linestyle` or ls | {'-', '--', '-.', ':', '', (offset, on-off-seq), ...}  
`linewidth` or lw | float  
`marker` | marker style string, `Path` or `MarkerStyle`  
`markeredgecolor` or mec | color  
`markeredgewidth` or mew | float  
`markerfacecolor` or mfc | color  
`markerfacecoloralt` or mfcalt | color  
`markersize` or ms | float  
`markevery` | None or int or (int, int) or slice or list[int] or float or (float, float) or list[bool]  
`path_effects` | `AbstractPathEffect`  
`picker` | float or callable[[Artist, Event], tuple[bool, dict]]  
`pickradius` | float  
`rasterized` | bool  
`sketch_params` | (scale: float, length: float, randomness: float)  
`snap` | bool or None  
`solid_capstyle` | `CapStyle` or {'butt', 'projecting', 'round'}  
`solid_joinstyle` | `JoinStyle` or {'miter', 'round', 'bevel'}  
`transform` | unknown  
`url` | str  
`visible` | bool  
`xdata` | 1D array  
`ydata` | 1D array  
`zorder` | float  
See also

`matplotlib.dates`

    
Helper functions on dates.

`matplotlib.dates.date2num`

    
Convert dates to num.

`matplotlib.dates.num2date`

    
Convert num to dates.

`matplotlib.dates.drange`

    
Create an equally spaced sequence of dates.

#### Notes

If you are using custom date tickers and formatters, it may be necessary to
set the formatters/locators after the call to `plot_date`. `plot_date` will
set the default tick locator to `AutoDateLocator` (if the tick locator is not
already set to a `DateLocator` instance) and the default tick formatter to
`AutoDateFormatter` (if the tick formatter is not already set to a
`DateFormatter` instance).

© 2012–2021 Matplotlib Development Team. All rights reserved.  
Licensed under the Matplotlib License Agreement.  
https://matplotlib.org/3.5.1/api/_as_gen/matplotlib.pyplot.plot_date.html

