# backend_tkagg, backend_tkcairo

matplotlib.backends.backend_tkagg.FigureCanvas[source]

    
alias of `matplotlib.backends.backend_tkagg.FigureCanvasTkAgg`

classmatplotlib.backends.backend_tkagg.FigureCanvasTkAgg(figure=None,
master=None, resize_callback=<deprecated parameter>)[source]

    
Bases: `matplotlib.backends.backend_agg.FigureCanvasAgg`,
`matplotlib.backends._backend_tk.FigureCanvasTk`

blit(bbox=None)[source]

    
Blit the canvas in bbox (default entire canvas).

draw()[source]

    
Render the `Figure`.

It is important that this method actually walk the artist tree even if not
output is produced because this will trigger deferred work (like computing
limits auto-limits and tick values) that users may want access to before
saving to disk.

matplotlib.backends.backend_tkcairo.FigureCanvas[source]

    
alias of `matplotlib.backends.backend_tkcairo.FigureCanvasTkCairo`

classmatplotlib.backends.backend_tkcairo.FigureCanvasTkCairo(*args,
**kwargs)[source]

    
Bases: `matplotlib.backends.backend_cairo.FigureCanvasCairo`,
`matplotlib.backends._backend_tk.FigureCanvasTk`

draw()[source]

    
Render the `Figure`.

It is important that this method actually walk the artist tree even if not
output is produced because this will trigger deferred work (like computing
limits auto-limits and tick values) that users may want access to before
saving to disk.

© 2012–2021 Matplotlib Development Team. All rights reserved.  
Licensed under the Matplotlib License Agreement.  
https://matplotlib.org/3.5.1/api/backend_tk_api.html

