# matplotlib.container

classmatplotlib.container.BarContainer(*args, **kwargs)[source]

    
Bases: `matplotlib.container.Container`

Container for the artists of bar plots (e.g. created by `Axes.bar`).

The container can be treated as a tuple of the patches themselves.
Additionally, you can access these and further parameters by the attributes.

Attributes

    
patcheslist of `Rectangle`

    
The artists of the bars.

errorbarNone or `ErrorbarContainer`

    
A container for the error bar artists if error bars are present. None
otherwise.

datavaluesNone or array-like

    
The underlying data values corresponding to the bars.

orientation{'vertical', 'horizontal'}, default: None

    
If 'vertical', the bars are assumed to be vertical. If 'horizontal', the bars
are assumed to be horizontal.

classmatplotlib.container.Container(*args, **kwargs)[source]

    
Bases: `tuple`

Base class for containers.

Containers are classes that collect semantically related Artists such as the
bars of a bar plot.

add_callback(func)[source]

    
Add a callback function that will be called whenever one of the `Artist`'s
properties changes.

Parameters

    
funccallable

    
The callback function. It must have the signature:

    
    def func(artist: Artist) -> Any
    
where artist is the calling `Artist`. Return values may exist but are ignored.

Returns

    
int

    
The observer id associated with the callback. This id can be used for removing
the callback with `remove_callback` later.

See also

`remove_callback`

get_children()[source]

get_label()[source]

    
Return the label used for this artist in the legend.

pchanged()[source]

    
Call all of the registered callbacks.

This function is triggered internally when a property is changed.

See also

`add_callback`

`remove_callback`

remove()[source]

remove_callback(oid)[source]

    
Remove a callback based on its observer id.

See also

`add_callback`

set_label(s)[source]

    
Set a label that will be displayed in the legend.

Parameters

    
sobject

    
s will be converted to a string by calling `str`.

classmatplotlib.container.ErrorbarContainer(*args, **kwargs)[source]

    
Bases: `matplotlib.container.Container`

Container for the artists of error bars (e.g. created by `Axes.errorbar`).

The container can be treated as the lines tuple itself. Additionally, you can
access these and further parameters by the attributes.

Attributes

    
linestuple

    
Tuple of `(data_line, caplines, barlinecols)`.

  * data_line : `Line2D` instance of x, y plot markers and/or line.
  * caplines : tuple of `Line2D` instances of the error bar caps.
  * barlinecols : list of `LineCollection` with the horizontal and vertical error ranges.

has_xerr, has_yerrbool

    
`True` if the errorbar has x/y errors.

classmatplotlib.container.StemContainer(*args, **kwargs)[source]

    
Bases: `matplotlib.container.Container`

Container for the artists created in a `Axes.stem()` plot.

The container can be treated like a namedtuple `(markerline, stemlines,
baseline)`.

Attributes

    
markerline`Line2D`

    
The artist of the markers at the stem heads.

stemlineslist of `Line2D`

    
The artists of the vertical lines for all stems.

baseline`Line2D`

    
The artist of the horizontal baseline.

Parameters

    
markerline_stemlines_baselinetuple

    
Tuple of `(markerline, stemlines, baseline)`. `markerline` contains the
`LineCollection` of the markers, `stemlines` is a `LineCollection` of the main
lines, `baseline` is the `Line2D` of the baseline.

© 2012–2021 Matplotlib Development Team. All rights reserved.  
Licensed under the Matplotlib License Agreement.  
https://matplotlib.org/3.5.1/api/container_api.html

