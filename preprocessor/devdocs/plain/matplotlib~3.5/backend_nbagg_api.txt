# backend_nbagg

Interactive figures in the IPython notebook.

classmatplotlib.backends.backend_nbagg.CommSocket(manager)[source]

    
Bases: `object`

Manages the Comm connection between IPython and the browser (client).

Comms are 2 way, with the CommSocket being able to publish a message via the
send_json method, and handle a message with on_message. On the JS side
figure.send_message and figure.ws.onmessage do the sending and receiving
respectively.

is_open()[source]

on_close()[source]

on_message(message)[source]

send_binary(blob)[source]

send_json(content)[source]

matplotlib.backends.backend_nbagg.FigureCanvas[source]

    
alias of `matplotlib.backends.backend_nbagg.FigureCanvasNbAgg`

classmatplotlib.backends.backend_nbagg.FigureCanvasNbAgg(*args,
**kwargs)[source]

    
Bases: `matplotlib.backends.backend_webagg_core.FigureCanvasWebAggCore`

matplotlib.backends.backend_nbagg.FigureManager[source]

    
alias of `matplotlib.backends.backend_nbagg.FigureManagerNbAgg`

classmatplotlib.backends.backend_nbagg.FigureManagerNbAgg(canvas, num)[source]

    
Bases: `matplotlib.backends.backend_webagg_core.FigureManagerWebAgg`

ToolbarCls[source]

    
alias of `matplotlib.backends.backend_nbagg.NavigationIPy`

clearup_closed()[source]

    
Clear up any closed Comms.

propertyconnected

destroy()[source]

display_js()[source]

classmethodget_javascript(stream=None)[source]

remove_comm(comm_id)[source]

reshow()[source]

    
A special method to re-show the figure in the notebook.

show()[source]

    
For GUI backends, show the figure window and redraw. For non-GUI backends,
raise an exception, unless running headless (i.e. on Linux with an unset
DISPLAY); this exception is converted to a warning in `Figure.show`.

classmatplotlib.backends.backend_nbagg.NavigationIPy(canvas)[source]

    
Bases: `matplotlib.backends.backend_webagg_core.NavigationToolbar2WebAgg`

toolitems=[('Home', 'Reset original view', 'fa fa-home icon-home', 'home'),
('Back', 'Back to previous view', 'fa fa-arrow-left icon-arrow-left', 'back'),
('Forward', 'Forward to next view', 'fa fa-arrow-right icon-arrow-right',
'forward'), (None, None, None, None), ('Pan', 'Left button pans, Right button
zooms\nx/y fixes axis, CTRL fixes aspect', 'fa fa-arrows icon-move', 'pan'),
('Zoom', 'Zoom to rectangle\nx/y fixes axis', 'fa fa-square-o icon-check-
empty', 'zoom'), (None, None, None, None), ('Download', 'Download plot', 'fa
fa-floppy-o icon-save', 'download')]

matplotlib.backends.backend_nbagg.connection_info()[source]

    
Return a string showing the figure and connection status for the backend.

This is intended as a diagnostic tool, and not for general use.

matplotlib.backends.backend_nbagg.new_figure_manager_given_figure(num,
figure)[source]

    
Create a new figure manager instance for the given figure.

matplotlib.backends.backend_nbagg.show(block=None)[source]

    
Show all figures.

`show` blocks by calling `mainloop` if block is `True`, or if it is `None` and
we are neither in IPython's `%pylab` mode, nor in `interactive` mode.

© 2012–2021 Matplotlib Development Team. All rights reserved.  
Licensed under the Matplotlib License Agreement.  
https://matplotlib.org/3.5.1/api/backend_nbagg_api.html

