# sklearn.manifold.smacof

`sklearn.manifold.smacof(dissimilarities, *, metric=True, n_components=2,
init=None, n_init=8, n_jobs=None, max_iter=300, verbose=0, eps=0.001,
random_state=None, return_n_iter=False)` [source]

    
Computes multidimensional scaling using the SMACOF algorithm.

The SMACOF (Scaling by MAjorizing a COmplicated Function) algorithm is a
multidimensional scaling algorithm which minimizes an objective function (the
stress) using a majorization technique. Stress majorization, also known as the
Guttman Transform, guarantees a monotone convergence of stress, and is more
powerful than traditional techniques such as gradient descent.

The SMACOF algorithm for metric MDS can summarized by the following steps:

  1. Set an initial start configuration, randomly or not.
  2. Compute the stress
  3. Compute the Guttman Transform
  4. Iterate 2 and 3 until convergence.

The nonmetric algorithm adds a monotonic regression step before computing the
stress.

Parameters

    
`dissimilaritiesndarray of shape (n_samples, n_samples)`

    
Pairwise dissimilarities between the points. Must be symmetric.

`metricbool, default=True`

    
Compute metric or nonmetric SMACOF algorithm.

`n_componentsint, default=2`

    
Number of dimensions in which to immerse the dissimilarities. If an `init`
array is provided, this option is overridden and the shape of `init` is used
to determine the dimensionality of the embedding space.

`initndarray of shape (n_samples, n_components), default=None`

    
Starting configuration of the embedding to initialize the algorithm. By
default, the algorithm is initialized with a randomly chosen array.

`n_initint, default=8`

    
Number of times the SMACOF algorithm will be run with different
initializations. The final results will be the best output of the runs,
determined by the run with the smallest final stress. If `init` is provided,
this option is overridden and a single run is performed.

`n_jobsint, default=None`

    
The number of jobs to use for the computation. If multiple initializations are
used (`n_init`), each run of the algorithm is computed in parallel.

`None` means 1 unless in a `joblib.parallel_backend` context. `-1` means using
all processors. See Glossary for more details.

`max_iterint, default=300`

    
Maximum number of iterations of the SMACOF algorithm for a single run.

`verboseint, default=0`

    
Level of verbosity.

`epsfloat, default=1e-3`

    
Relative tolerance with respect to stress at which to declare convergence.

`random_stateint, RandomState instance or None, default=None`

    
Determines the random number generator used to initialize the centers. Pass an
int for reproducible results across multiple function calls. See :term:
`Glossary <random_state>`.

`return_n_iterbool, default=False`

    
Whether or not to return the number of iterations.

Returns

    
`Xndarray of shape (n_samples, n_components)`

    
Coordinates of the points in a `n_components`-space.

`stressfloat`

    
The final value of the stress (sum of squared distance of the disparities and
the distances for all constrained points).

`n_iterint`

    
The number of iterations corresponding to the best stress. Returned only if
`return_n_iter` is set to `True`.

#### Notes

“Modern Multidimensional Scaling - Theory and Applications” Borg, I.; Groenen
P. Springer Series in Statistics (1997)

“Nonmetric multidimensional scaling: a numerical method” Kruskal, J.
Psychometrika, 29 (1964)

“Multidimensional scaling by optimizing goodness of fit to a nonmetric
hypothesis” Kruskal, J. Psychometrika, 29, (1964)

© 2007–2020 The scikit-learn developers  
Licensed under the 3-clause BSD License.  
https://scikit-learn.org/0.24/modules/generated/sklearn.manifold.smacof.html

