# sklearn.model_selection.LeavePOut

`class sklearn.model_selection.LeavePOut(p)` [source]

    
Leave-P-Out cross-validator

Provides train/test indices to split data in train/test sets. This results in
testing on all distinct samples of size p, while the remaining n - p samples
form the training set in each iteration.

Note: `LeavePOut(p)` is NOT equivalent to `KFold(n_splits=n_samples // p)`
which creates non-overlapping test sets.

Due to the high number of iterations which grows combinatorically with the
number of samples this cross-validation method can be very costly. For large
datasets one should favor `KFold`, `StratifiedKFold` or `ShuffleSplit`.

Read more in the User Guide.

Parameters

    
`pint`

    
Size of the test sets. Must be strictly less than the number of samples.

#### Examples

    
    >>> import numpy as np
    >>> from sklearn.model_selection import LeavePOut
    >>> X = np.array([[1, 2], [3, 4], [5, 6], [7, 8]])
    >>> y = np.array([1, 2, 3, 4])
    >>> lpo = LeavePOut(2)
    >>> lpo.get_n_splits(X)
    6
    >>> print(lpo)
    LeavePOut(p=2)
    >>> for train_index, test_index in lpo.split(X):
    ...     print("TRAIN:", train_index, "TEST:", test_index)
    ...     X_train, X_test = X[train_index], X[test_index]
    ...     y_train, y_test = y[train_index], y[test_index]
    TRAIN: [2 3] TEST: [0 1]
    TRAIN: [1 3] TEST: [0 2]
    TRAIN: [1 2] TEST: [0 3]
    TRAIN: [0 3] TEST: [1 2]
    TRAIN: [0 2] TEST: [1 3]
    TRAIN: [0 1] TEST: [2 3]
    
#### Methods

`get_n_splits`(X[, y, groups]) | Returns the number of splitting iterations in the cross-validator  
---|---  
`split`(X[, y, groups]) | Generate indices to split data into training and test set.  
`get_n_splits(X, y=None, groups=None)` [source]

    
Returns the number of splitting iterations in the cross-validator

Parameters

    
`Xarray-like of shape (n_samples, n_features)`

    
Training data, where n_samples is the number of samples and n_features is the
number of features.

`yobject`

    
Always ignored, exists for compatibility.

`groupsobject`

    
Always ignored, exists for compatibility.

`split(X, y=None, groups=None)` [source]

    
Generate indices to split data into training and test set.

Parameters

    
`Xarray-like of shape (n_samples, n_features)`

    
Training data, where n_samples is the number of samples and n_features is the
number of features.

`yarray-like of shape (n_samples,)`

    
The target variable for supervised learning problems.

`groupsarray-like of shape (n_samples,), default=None`

    
Group labels for the samples used while splitting the dataset into train/test
set.

Yields

    
`trainndarray`

    
The training set indices for that split.

`testndarray`

    
The testing set indices for that split.

© 2007–2020 The scikit-learn developers  
Licensed under the 3-clause BSD License.  
https://scikit-
learn.org/0.24/modules/generated/sklearn.model_selection.LeavePOut.html

