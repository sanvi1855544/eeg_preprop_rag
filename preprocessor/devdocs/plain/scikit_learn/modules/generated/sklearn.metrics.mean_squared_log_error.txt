# sklearn.metrics.mean_squared_log_error

`sklearn.metrics.mean_squared_log_error(y_true, y_pred, *, sample_weight=None,
multioutput='uniform_average')` [source]

    
Mean squared logarithmic error regression loss.

Read more in the User Guide.

Parameters

    
`y_truearray-like of shape (n_samples,) or (n_samples, n_outputs)`

    
Ground truth (correct) target values.

`y_predarray-like of shape (n_samples,) or (n_samples, n_outputs)`

    
Estimated target values.

`sample_weightarray-like of shape (n_samples,), default=None`

    
Sample weights.

`multioutput{‘raw_values’, ‘uniform_average’} or array-like of shape
(n_outputs,), default=’uniform_average’`

    
Defines aggregating of multiple output values. Array-like value defines
weights used to average errors.

‘raw_values’ :

    
Returns a full set of errors when the input is of multioutput format.

‘uniform_average’ :

    
Errors of all outputs are averaged with uniform weight.

Returns

    
`lossfloat or ndarray of floats`

    
A non-negative floating point value (the best value is 0.0), or an array of
floating point values, one for each individual target.

#### Examples

    
    >>> from sklearn.metrics import mean_squared_log_error
    >>> y_true = [3, 5, 2.5, 7]
    >>> y_pred = [2.5, 5, 4, 8]
    >>> mean_squared_log_error(y_true, y_pred)
    0.039...
    >>> y_true = [[0.5, 1], [1, 2], [7, 6]]
    >>> y_pred = [[0.5, 2], [1, 2.5], [8, 8]]
    >>> mean_squared_log_error(y_true, y_pred)
    0.044...
    >>> mean_squared_log_error(y_true, y_pred, multioutput='raw_values')
    array([0.00462428, 0.08377444])
    >>> mean_squared_log_error(y_true, y_pred, multioutput=[0.3, 0.7])
    0.060...
    
© 2007–2020 The scikit-learn developers  
Licensed under the 3-clause BSD License.  
https://scikit-
learn.org/0.24/modules/generated/sklearn.metrics.mean_squared_log_error.html

