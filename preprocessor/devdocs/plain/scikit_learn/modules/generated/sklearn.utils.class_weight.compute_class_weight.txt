# sklearn.utils.class_weight.compute_class_weight

`sklearn.utils.class_weight.compute_class_weight(class_weight, *, classes, y)`
[source]

    
Estimate class weights for unbalanced datasets.

Parameters

    
`class_weightdict, ‘balanced’ or None`

    
If ‘balanced’, class weights will be given by `n_samples / (n_classes *
np.bincount(y))`. If a dictionary is given, keys are classes and values are
corresponding class weights. If None is given, the class weights will be
uniform.

`classesndarray`

    
Array of the classes occurring in the data, as given by `np.unique(y_org)`
with `y_org` the original class labels.

`yarray-like of shape (n_samples,)`

    
Array of original class labels per sample.

Returns

    
`class_weight_vectndarray of shape (n_classes,)`

    
Array with class_weight_vect[i] the weight for i-th class.

#### References

The “balanced” heuristic is inspired by Logistic Regression in Rare Events
Data, King, Zen, 2001.

© 2007–2020 The scikit-learn developers  
Licensed under the 3-clause BSD License.  
https://scikit-
learn.org/0.24/modules/generated/sklearn.utils.class_weight.compute_class_weight.html

