# sklearn.pipeline.make_union

`sklearn.pipeline.make_union(*transformers, n_jobs=None, verbose=False)`
[source]

    
Construct a FeatureUnion from the given transformers.

This is a shorthand for the FeatureUnion constructor; it does not require, and
does not permit, naming the transformers. Instead, they will be given names
automatically based on their types. It also does not allow weighting.

Parameters

    
`*transformerslist of estimators`

`n_jobsint, default=None`

    
Number of jobs to run in parallel. `None` means 1 unless in a
`joblib.parallel_backend` context. `-1` means using all processors. See
Glossary for more details.

Changed in version v0.20: `n_jobs` default changed from 1 to None

`verbosebool, default=False`

    
If True, the time elapsed while fitting each transformer will be printed as it
is completed.

Returns

    
`fFeatureUnion`

See also

`FeatureUnion`

    
Class for concatenating the results of multiple transformer objects.

#### Examples

    
    >>> from sklearn.decomposition import PCA, TruncatedSVD
    >>> from sklearn.pipeline import make_union
    >>> make_union(PCA(), TruncatedSVD())
     FeatureUnion(transformer_list=[('pca', PCA()),
                                   ('truncatedsvd', TruncatedSVD())])
    
© 2007–2020 The scikit-learn developers  
Licensed under the 3-clause BSD License.  
https://scikit-
learn.org/0.24/modules/generated/sklearn.pipeline.make_union.html

