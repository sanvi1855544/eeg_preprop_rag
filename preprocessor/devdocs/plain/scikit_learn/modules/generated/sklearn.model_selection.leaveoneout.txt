# sklearn.model_selection.LeaveOneOut

`class sklearn.model_selection.LeaveOneOut` [source]

    
Leave-One-Out cross-validator

Provides train/test indices to split data in train/test sets. Each sample is
used once as a test set (singleton) while the remaining samples form the
training set.

Note: `LeaveOneOut()` is equivalent to `KFold(n_splits=n)` and
`LeavePOut(p=1)` where `n` is the number of samples.

Due to the high number of test sets (which is the same as the number of
samples) this cross-validation method can be very costly. For large datasets
one should favor `KFold`, `ShuffleSplit` or `StratifiedKFold`.

Read more in the User Guide.

See also

`LeaveOneGroupOut`

    
For splitting the data according to explicit, domain-specific stratification
of the dataset.

`GroupKFold`

    
K-fold iterator variant with non-overlapping groups.

#### Examples

    
    >>> import numpy as np
    >>> from sklearn.model_selection import LeaveOneOut
    >>> X = np.array([[1, 2], [3, 4]])
    >>> y = np.array([1, 2])
    >>> loo = LeaveOneOut()
    >>> loo.get_n_splits(X)
    2
    >>> print(loo)
    LeaveOneOut()
    >>> for train_index, test_index in loo.split(X):
    ...     print("TRAIN:", train_index, "TEST:", test_index)
    ...     X_train, X_test = X[train_index], X[test_index]
    ...     y_train, y_test = y[train_index], y[test_index]
    ...     print(X_train, X_test, y_train, y_test)
    TRAIN: [1] TEST: [0]
    [[3 4]] [[1 2]] [2] [1]
    TRAIN: [0] TEST: [1]
    [[1 2]] [[3 4]] [1] [2]
    
#### Methods

`get_n_splits`(X[, y, groups]) | Returns the number of splitting iterations in the cross-validator  
---|---  
`split`(X[, y, groups]) | Generate indices to split data into training and test set.  
`get_n_splits(X, y=None, groups=None)` [source]

    
Returns the number of splitting iterations in the cross-validator

Parameters

    
`Xarray-like of shape (n_samples, n_features)`

    
Training data, where n_samples is the number of samples and n_features is the
number of features.

`yobject`

    
Always ignored, exists for compatibility.

`groupsobject`

    
Always ignored, exists for compatibility.

Returns

    
`n_splitsint`

    
Returns the number of splitting iterations in the cross-validator.

`split(X, y=None, groups=None)` [source]

    
Generate indices to split data into training and test set.

Parameters

    
`Xarray-like of shape (n_samples, n_features)`

    
Training data, where n_samples is the number of samples and n_features is the
number of features.

`yarray-like of shape (n_samples,)`

    
The target variable for supervised learning problems.

`groupsarray-like of shape (n_samples,), default=None`

    
Group labels for the samples used while splitting the dataset into train/test
set.

Yields

    
`trainndarray`

    
The training set indices for that split.

`testndarray`

    
The testing set indices for that split.

© 2007–2020 The scikit-learn developers  
Licensed under the 3-clause BSD License.  
https://scikit-
learn.org/0.24/modules/generated/sklearn.model_selection.LeaveOneOut.html

