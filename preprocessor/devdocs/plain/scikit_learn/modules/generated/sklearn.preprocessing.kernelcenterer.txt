# sklearn.preprocessing.KernelCenterer

`class sklearn.preprocessing.KernelCenterer` [source]

    
Center a kernel matrix.

Let K(x, z) be a kernel defined by phi(x)^T phi(z), where phi is a function
mapping x to a Hilbert space. KernelCenterer centers (i.e., normalize to have
zero mean) the data without explicitly computing phi(x). It is equivalent to
centering phi(x) with sklearn.preprocessing.StandardScaler(with_std=False).

Read more in the User Guide.

Attributes

    
`K_fit_rows_array of shape (n_samples,)`

    
Average of each column of kernel matrix.

`K_fit_all_float`

    
Average of kernel matrix.

#### Examples

    
    >>> from sklearn.preprocessing import KernelCenterer
    >>> from sklearn.metrics.pairwise import pairwise_kernels
    >>> X = [[ 1., -2.,  2.],
    ...      [ -2.,  1.,  3.],
    ...      [ 4.,  1., -2.]]
    >>> K = pairwise_kernels(X, metric='linear')
    >>> K
    array([[  9.,   2.,  -2.],
           [  2.,  14., -13.],
           [ -2., -13.,  21.]])
    >>> transformer = KernelCenterer().fit(K)
    >>> transformer
    KernelCenterer()
    >>> transformer.transform(K)
    array([[  5.,   0.,  -5.],
           [  0.,  14., -14.],
           [ -5., -14.,  19.]])
    
#### Methods

`fit`(K[, y]) | Fit KernelCenterer  
---|---  
`fit_transform`(X[, y]) | Fit to data, then transform it.  
`get_params`([deep]) | Get parameters for this estimator.  
`set_params`(**params) | Set the parameters of this estimator.  
`transform`(K[, copy]) | Center kernel matrix.  
`fit(K, y=None)` [source]

    
Fit KernelCenterer

Parameters

    
`Kndarray of shape (n_samples, n_samples)`

    
Kernel matrix.

`yNone`

    
Ignored.

Returns

    
`selfobject`

    
Fitted transformer.

`fit_transform(X, y=None, **fit_params)` [source]

    
Fit to data, then transform it.

Fits transformer to `X` and `y` with optional parameters `fit_params` and
returns a transformed version of `X`.

Parameters

    
`Xarray-like of shape (n_samples, n_features)`

    
Input samples.

`yarray-like of shape (n_samples,) or (n_samples, n_outputs), default=None`

    
Target values (None for unsupervised transformations).

`**fit_paramsdict`

    
Additional fit parameters.

Returns

    
`X_newndarray array of shape (n_samples, n_features_new)`

    
Transformed array.

`get_params(deep=True)` [source]

    
Get parameters for this estimator.

Parameters

    
`deepbool, default=True`

    
If True, will return the parameters for this estimator and contained
subobjects that are estimators.

Returns

    
`paramsdict`

    
Parameter names mapped to their values.

`set_params(**params)` [source]

    
Set the parameters of this estimator.

The method works on simple estimators as well as on nested objects (such as
`Pipeline`). The latter have parameters of the form `<component>__<parameter>`
so that it’s possible to update each component of a nested object.

Parameters

    
`**paramsdict`

    
Estimator parameters.

Returns

    
`selfestimator instance`

    
Estimator instance.

`transform(K, copy=True)` [source]

    
Center kernel matrix.

Parameters

    
`Kndarray of shape (n_samples1, n_samples2)`

    
Kernel matrix.

`copybool, default=True`

    
Set to False to perform inplace computation.

Returns

    
`K_newndarray of shape (n_samples1, n_samples2)`

© 2007–2020 The scikit-learn developers  
Licensed under the 3-clause BSD License.  
https://scikit-
learn.org/0.24/modules/generated/sklearn.preprocessing.KernelCenterer.html

