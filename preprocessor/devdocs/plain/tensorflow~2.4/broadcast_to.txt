# tf.broadcast_to

Broadcast an array for a compatible shape.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.broadcast_to`

    
    tf.broadcast_to(
        input, shape, name=None
    )
    
Broadcasting is the process of making arrays to have compatible shapes for
arithmetic operations. Two shapes are compatible if for each dimension pair
they are either equal or one of them is one. When trying to broadcast a Tensor
to a shape, it starts with the trailing dimensions, and works its way forward.

For example,

    
    x = tf.constant([1, 2, 3])
    y = tf.broadcast_to(x, [3, 3])
    print(y)
    tf.Tensor(
        [[1 2 3]
         [1 2 3]
         [1 2 3]], shape=(3, 3), dtype=int32)
    
In the above example, the input Tensor with the shape of `[1, 3]` is
broadcasted to output Tensor with shape of `[3, 3]`.

When doing broadcasted operations such as multiplying a tensor by a scalar,
broadcasting (usually) confers some time or space benefit, as the broadcasted
tensor is never materialized.

However, `broadcast_to` does not carry with it any such benefits. The newly-
created tensor takes the full memory of the broadcasted shape. (In a graph
context, `broadcast_to` might be fused to subsequent operation and then be
optimized away, however.)

Args  
---  
`input` |  A `Tensor`. A Tensor to broadcast.   
`shape` |  A `Tensor`. Must be one of the following types: `int32`, `int64`. An 1-D `int` Tensor. The shape of the desired output.   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor`. Has the same type as `input`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/broadcast_to

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

