# tf.SparseTensorSpec

View source on GitHub  Type specification for a `tf.sparse.SparseTensor`.
Inherits From: `TypeSpec`

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.SparseTensorSpec`

    
    tf.SparseTensorSpec(
        shape=None, dtype=tf.dtypes.float32
    )
    
| Args  
---  
`shape` |  The dense shape of the `SparseTensor`, or `None` to allow any dense shape.   
`dtype` |  `tf.DType` of values in the `SparseTensor`.   
Attributes  
---  
`dtype` |  The `tf.dtypes.DType` specified by this type for the SparseTensor.   
`shape` |  The `tf.TensorShape` specified by this type for the SparseTensor.   
`value_type` |   
## Methods

### `from_value`

View source

    
    @classmethod
    from_value(
        value
    )
    
### `is_compatible_with`

View source

    
    is_compatible_with(
        spec_or_value
    )
    
Returns true if `spec_or_value` is compatible with this TypeSpec.

### `most_specific_compatible_type`

View source

    
    most_specific_compatible_type(
        other
    )
    
Returns the most specific TypeSpec compatible with `self` and `other`.

Args  
---  
`other` |  A `TypeSpec`.   
Raises  
---  
`ValueError` |  If there is no TypeSpec that is compatible with both `self` and `other`.   
### `__eq__`

View source

    
    __eq__(
        other
    )
    
Return self==value.

### `__ne__`

View source

    
    __ne__(
        other
    )
    
Return self!=value.

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/SparseTensorSpec

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

