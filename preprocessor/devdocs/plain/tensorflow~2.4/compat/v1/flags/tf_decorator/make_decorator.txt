# tf.compat.v1.flags.tf_decorator.make_decorator

Make a decorator from a wrapper and a target.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.app.flags.tf_decorator.make_decorator`

    
    tf.compat.v1.flags.tf_decorator.make_decorator(
        target, decorator_func, decorator_name=None, decorator_doc='',
        decorator_argspec=None
    )
    
Args  
---  
`target` |  The final callable to be wrapped.   
`decorator_func` |  The wrapper function.   
`decorator_name` |  The name of the decorator. If `None`, the name of the function calling make_decorator.   
`decorator_doc` |  Documentation specific to this application of `decorator_func` to `target`.   
`decorator_argspec` |  The new callable signature of this decorator.   
Returns  
---  
The `decorator_func` argument with new metadata attached.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/compat/v1/flags/tf_decorator/make_decorator

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

