# Module: tf.compat.v1.sparse

Sparse Tensor Representation.

See also `tf.sparse.SparseTensor`.

## Classes

`class SparseConditionalAccumulator`: A conditional accumulator for
aggregating sparse gradients.

`class SparseTensor`: Represents a sparse tensor.

## Functions

`add(...)`: Adds two tensors, at least one of each is a `SparseTensor`.
(deprecated arguments)

`bincount(...)`: Count the number of times an integer value appears in a
tensor.

`concat(...)`: Concatenates a list of `SparseTensor` along the specified
dimension. (deprecated arguments)

`cross(...)`: Generates sparse cross from a list of sparse and dense tensors.

`cross_hashed(...)`: Generates hashed sparse cross from a list of sparse and
dense tensors.

`expand_dims(...)`: Returns a tensor with an length 1 axis inserted at index
`axis`.

`eye(...)`: Creates a two-dimensional sparse tensor with ones along the
diagonal.

`fill_empty_rows(...)`: Fills empty rows in the input 2-D `SparseTensor` with
a default value.

`from_dense(...)`: Converts a dense tensor into a sparse tensor.

`mask(...)`: Masks elements of `IndexedSlices`.

`matmul(...)`: Multiply SparseTensor (or dense Matrix) (of rank 2) "A" by
dense matrix

`maximum(...)`: Returns the element-wise max of two SparseTensors.

`merge(...)`: Combines a batch of feature ids and values into a single
`SparseTensor`. (deprecated)

`minimum(...)`: Returns the element-wise min of two SparseTensors.

`placeholder(...)`: Inserts a placeholder for a sparse tensor that will be
always fed.

`reduce_max(...)`: Computes the max of elements across dimensions of a
SparseTensor. (deprecated arguments) (deprecated arguments)

`reduce_max_sparse(...)`: Computes the max of elements across dimensions of a
SparseTensor. (deprecated arguments)

`reduce_sum(...)`: Computes the sum of elements across dimensions of a
SparseTensor. (deprecated arguments) (deprecated arguments)

`reduce_sum_sparse(...)`: Computes the sum of elements across dimensions of a
SparseTensor. (deprecated arguments)

`reorder(...)`: Reorders a `SparseTensor` into the canonical, row-major
ordering.

`reset_shape(...)`: Resets the shape of a `SparseTensor` with indices and
values unchanged.

`reshape(...)`: Reshapes a `SparseTensor` to represent values in a new dense
shape.

`retain(...)`: Retains specified non-empty values within a `SparseTensor`.

`segment_mean(...)`: Computes the mean along sparse segments of a tensor.

`segment_sqrt_n(...)`: Computes the sum along sparse segments of a tensor
divided by the sqrt(N).

`segment_sum(...)`: Computes the sum along sparse segments of a tensor.

`slice(...)`: Slice a `SparseTensor` based on the `start` and `size.

`softmax(...)`: Applies softmax to a batched N-D `SparseTensor`.

`sparse_dense_matmul(...)`: Multiply SparseTensor (or dense Matrix) (of rank
2) "A" by dense matrix

`split(...)`: Split a `SparseTensor` into `num_split` tensors along `axis`.
(deprecated arguments)

`to_dense(...)`: Converts a `SparseTensor` into a dense tensor.

`to_indicator(...)`: Converts a `SparseTensor` of ids into a dense bool
indicator tensor.

`transpose(...)`: Transposes a `SparseTensor`

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/compat/v1/sparse

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

