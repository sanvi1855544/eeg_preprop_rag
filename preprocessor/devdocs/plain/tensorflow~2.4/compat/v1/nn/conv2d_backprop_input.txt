# tf.compat.v1.nn.conv2d_backprop_input

Computes the gradients of convolution with respect to the input.

    
    tf.compat.v1.nn.conv2d_backprop_input(
        input_sizes, filter=None, out_backprop=None, strides=None, padding=None,
        use_cudnn_on_gpu=True, data_format='NHWC', dilations=[1, 1, 1, 1],
        name=None, filters=None
    )
    
Args  
---  
`input_sizes` |  A `Tensor` of type `int32`. An integer vector representing the shape of `input`, where `input` is a 4-D `[batch, height, width, channels]` tensor.   
`filter` |  A `Tensor`. Must be one of the following types: `half`, `bfloat16`, `float32`, `float64`. 4-D with shape `[filter_height, filter_width, in_channels, out_channels]`.   
`out_backprop` |  A `Tensor`. Must have the same type as `filter`. 4-D with shape `[batch, out_height, out_width, out_channels]`. Gradients w.r.t. the output of the convolution.   
`strides` |  A list of `ints`. The stride of the sliding window for each dimension of the input of the convolution. Must be in the same order as the dimension specified with format.   
`padding` |  Either the `string`"SAME"`or`"VALID"`indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is`"NHWC"`, this should be in the form`[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]`. When explicit padding used and data_format is`"NCHW"`, this should be in the form`[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]`. </td> </tr><tr> <td>`use_cudnn_on_gpu`</td> <td> An optional`bool`. Defaults to`True`. </td> </tr><tr> <td>`data_format`</td> <td> An optional`string`from:`"NHWC", "NCHW"`. Defaults to`"NHWC"`. Specify the data format of the input and output data. With the default format "NHWC", the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be "NCHW", the data storage order of: [batch, in_channels, in_height, in_width]. </td> </tr><tr> <td>`dilations`</td> <td> An optional list of`ints`. Defaults to`[1, 1, 1, 1]`. 1-D tensor of length 4. The dilation factor for each dimension of`input`. If set to k > 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of`data_format`, see above for details. Dilations in the batch and depth dimensions must be 1. </td> </tr><tr> <td>`name`</td> <td> A name for the operation (optional). </td> </tr><tr> <td>`filters`  |  Alias for filter.   
Returns  
---  
A `Tensor`. Has the same type as `filter`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/compat/v1/nn/conv2d_backprop_input

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

