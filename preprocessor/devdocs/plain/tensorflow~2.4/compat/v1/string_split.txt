# tf.compat.v1.string_split

Split elements of `source` based on `delimiter`. (deprecated arguments)

    
    tf.compat.v1.string_split(
        source, sep=None, skip_empty=True, delimiter=None,
        result_type='SparseTensor', name=None
    )
    
Warning: SOME ARGUMENTS ARE DEPRECATED: `(delimiter)`. They will be removed in
a future version. Instructions for updating: delimiter is deprecated, please
use sep instead.

Let N be the size of `source` (typically N will be the batch size). Split each
element of `source` based on `delimiter` and return a `SparseTensor` or
`RaggedTensor` containing the split tokens. Empty tokens are ignored.

If `sep` is an empty string, each element of the `source` is split into
individual strings, each containing one byte. (This includes splitting
multibyte sequences of UTF-8.) If delimiter contains multiple bytes, it is
treated as a set of delimiters with each considered a potential split point.

#### Examples:

    
    print(tf.compat.v1.string_split(['hello world', 'a b c']))
    SparseTensor(indices=tf.Tensor( [[0 0] [0 1] [1 0] [1 1] [1 2]], ...),
                 values=tf.Tensor([b'hello' b'world' b'a' b'b' b'c'], ...),
                 dense_shape=tf.Tensor([2 3], shape=(2,), dtype=int64))
    
    
    print(tf.compat.v1.string_split(['hello world', 'a b c'],
        result_type="RaggedTensor"))
    <tf.RaggedTensor [[b'hello', b'world'], [b'a', b'b', b'c']]>
    
Args  
---  
`source` |  `1-D` string `Tensor`, the strings to split.   
`sep` |  `0-D` string `Tensor`, the delimiter character, the string should be length 0 or 1. Default is ' '.   
`skip_empty` |  A `bool`. If `True`, skip the empty strings from the result.   
`delimiter` |  deprecated alias for `sep`.   
`result_type` |  The tensor type for the result: one of `"RaggedTensor"` or `"SparseTensor"`.   
`name` |  A name for the operation (optional).   
Raises  
---  
`ValueError` |  If delimiter is not a string.   
Returns  
---  
A `SparseTensor` or `RaggedTensor` of rank `2`, the strings split according to
the delimiter. The first column of the indices corresponds to the row in
`source` and the second column corresponds to the index of the split component
in this row.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/compat/v1/string_split

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

