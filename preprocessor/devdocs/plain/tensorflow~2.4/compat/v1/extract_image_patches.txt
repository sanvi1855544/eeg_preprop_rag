# tf.compat.v1.extract_image_patches

Extract `patches` from `images` and put them in the "depth" output dimension.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.image.extract_image_patches`

    
    tf.compat.v1.extract_image_patches(
        images, ksizes=None, strides=None, rates=None, padding=None, name=None,
        sizes=None
    )
    
Args  
---  
`images` |  A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`, `int8`, `int16`, `int32`, `int64`, `uint8`, `uint16`, `uint32`, `uint64`, `complex64`, `complex128`, `bool`. 4-D Tensor with shape `[batch, in_rows, in_cols, depth]`.   
`ksizes` |  A list of `ints` that has length `>= 4`. The size of the sliding window for each dimension of `images`.   
`strides` |  A list of `ints` that has length `>= 4`. How far the centers of two consecutive patches are in the images. Must be: `[1, stride_rows, stride_cols, 1]`.   
`rates` |  A list of `ints` that has length `>= 4`. Must be: `[1, rate_rows, rate_cols, 1]`. This is the input stride, specifying how far two consecutive patch samples are in the input. Equivalent to extracting patches with `patch_sizes_eff = patch_sizes + (patch_sizes - 1) * (rates - 1)`, followed by subsampling them spatially by a factor of `rates`. This is equivalent to `rate` in dilated (a.k.a. Atrous) convolutions.   
`padding` |  A `string` from: `"SAME", "VALID"`. The type of padding algorithm to use.   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor`. Has the same type as `images`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/compat/v1/extract_image_patches

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

