# tf.compat.v1.lite.experimental.nn.TfLiteRNNCell

The most basic RNN cell.

Inherits From: `RNNCell`, `Layer`, `Layer`, `Module`

    
    tf.compat.v1.lite.experimental.nn.TfLiteRNNCell(
        num_units, activation=None, reuse=None, name=None, dtype=None, **kwargs
    )
    
This is used only for TfLite, it provides hints and it also makes the
variables in the desired for the tflite ops.

Args  
---  
`num_units` |  int, The number of units in the RNN cell.   
`activation` |  Nonlinearity to use. Default: `tanh`. It could also be string that is within Keras activation function names.   
`reuse` |  (optional) Python boolean describing whether to reuse variables in an existing scope. Raises an error if not `True` and the existing scope already has the given variables.   
`name` |  String, the name of the layer. Layers with the same name will share weights, but to avoid mistakes we require reuse=True in such cases.   
`dtype` |  Default dtype of the layer (default of `None` means use the type of the first input). Required when `build` is called before `call`.   
`**kwargs` |  Dict, keyword named properties for common layer attributes, like `trainable` etc when constructing the cell from configs of get_config().   
Raises  
---  
`ValueError` |  If the existing scope already has the given variables.   
Attributes  
---  
`graph` |   
`output_size` |  Integer or TensorShape: size of outputs produced by this cell.   
`scope_name` |   
`state_size` |  size(s) of state(s) used by this cell. It can be represented by an Integer, a TensorShape or a tuple of Integers or TensorShapes.   
## Methods

### `get_initial_state`

View source

    
    get_initial_state(
        inputs=None, batch_size=None, dtype=None
    )
    
### `zero_state`

View source

    
    zero_state(
        batch_size, dtype
    )
    
Return zero-filled state tensor(s).

Args  
---  
`batch_size` |  int, float, or unit Tensor representing the batch size.   
`dtype` |  the data type to use for the state.   
Returns  
---  
If `state_size` is an int or TensorShape, then the return value is a `N-D`
tensor of shape `[batch_size, state_size]` filled with zeros. If `state_size`
is a nested list or tuple, then the return value is a nested list or tuple (of
the same structure) of `2-D` tensors with the shapes `[batch_size, s]` for
each s in `state_size`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/compat/v1/lite/experimental/nn/TfLiteRNNCell

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

