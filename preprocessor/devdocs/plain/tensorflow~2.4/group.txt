# tf.group

|  View source on GitHub  Create an op that groups multiple operations.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.group`

    
    tf.group(
        *inputs, **kwargs
    )
    
When this op finishes, all ops in `inputs` have finished. This op has no
output.

> Note: In TensorFlow 2 with eager and/or Autograph, you should not require
> this method, as code executes in your expected order. Only use tf.group when
> working with v1-style code or in a graph context such as inside
> `Dataset.map`.
When operating in a v1-style graph context, ops are not executed in the same
order as specified in the code; TensorFlow will attempt to execute ops in
parallel or in an order convienient to the result it is computing. `tf.group`
allows you to request that one or more results finish before execution
continues. `tf.group` creates a single op (of type `NoOp`), and then adds
appropriate control dependencies. Thus, `c = tf.group(a, b)` will compute the
same graph as this:

    
    with tf.control_dependencies([a, b]):
        c = tf.no_op()
    
See also `tf.tuple` and `tf.control_dependencies`. | Args  
---  
`*inputs` |  Zero or more tensors to group.   
`name` |  A name for this operation (optional).   
Returns  
---  
An Operation that executes all its inputs.  
Raises  
---  
`ValueError` |  If an unknown keyword argument is provided.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/group

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

