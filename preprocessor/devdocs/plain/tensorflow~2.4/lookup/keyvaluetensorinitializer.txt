# tf.lookup.KeyValueTensorInitializer

View source on GitHub  Table initializers given `keys` and `values` tensors.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.lookup.KeyValueTensorInitializer`

    
    tf.lookup.KeyValueTensorInitializer(
        keys, values, key_dtype=None, value_dtype=None, name=None
    )
    
    
    keys_tensor = tf.constant(['a', 'b', 'c'])
    vals_tensor = tf.constant([7, 8, 9])
    input_tensor = tf.constant(['a', 'f'])
    init = tf.lookup.KeyValueTensorInitializer(keys_tensor, vals_tensor)
    table = tf.lookup.StaticHashTable(
        init,
        default_value=-1)
    table.lookup(input_tensor).numpy()
    array([ 7, -1], dtype=int32)
    
| Args  
---  
`keys` |  The tensor for the keys.   
`values` |  The tensor for the values.   
`key_dtype` |  The `keys` data type. Used when `keys` is a python array.   
`value_dtype` |  The `values` data type. Used when `values` is a python array.   
`name` |  A name for the operation (optional).   
Attributes  
---  
`key_dtype` |  The expected table key dtype.   
`value_dtype` |  The expected table value dtype.   
## Methods

### `initialize`

View source

    
    initialize(
        table
    )
    
Initializes the given `table` with `keys` and `values` tensors.

Args  
---  
`table` |  The table to initialize.   
Returns  
---  
The operation that initializes the table.  
Raises  
---  
`TypeError` |  when the keys and values data types do not match the table key and value data types.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/lookup/KeyValueTensorInitializer

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

