# tf.image.image_gradients

View source on GitHub  Returns image gradients (dy, dx) for each color
channel.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.image.image_gradients`

    
    tf.image.image_gradients(
        image
    )
    
Both output tensors have the same shape as the input: [batch_size, h, w, d].
The gradient values are organized so that [I(x+1, y) - I(x, y)] is in location
(x, y). That means that dy will always have zeros in the last row, and dx will
always have zeros in the last column.

#### Usage Example:

    
    BATCH_SIZE = 1
    IMAGE_HEIGHT = 5
    IMAGE_WIDTH = 5
    CHANNELS = 1
    image = tf.reshape(tf.range(IMAGE_HEIGHT * IMAGE_WIDTH * CHANNELS,
      delta=1, dtype=tf.float32),
      shape=(BATCH_SIZE, IMAGE_HEIGHT, IMAGE_WIDTH, CHANNELS))
    dx, dy = tf.image.image_gradients(image)
    print(image[0, :,:,0])
    tf.Tensor(
      [[ 0.  1.  2.  3.  4.]
      [ 5.  6.  7.  8.  9.]
      [10. 11. 12. 13. 14.]
      [15. 16. 17. 18. 19.]
      [20. 21. 22. 23. 24.]], shape=(5, 5), dtype=float32)
    print(dx[0, :,:,0])
    tf.Tensor(
      [[5. 5. 5. 5. 5.]
      [5. 5. 5. 5. 5.]
      [5. 5. 5. 5. 5.]
      [5. 5. 5. 5. 5.]
      [0. 0. 0. 0. 0.]], shape=(5, 5), dtype=float32)
    print(dy[0, :,:,0])
    tf.Tensor(
      [[1. 1. 1. 1. 0.]
      [1. 1. 1. 1. 0.]
      [1. 1. 1. 1. 0.]
      [1. 1. 1. 1. 0.]
      [1. 1. 1. 1. 0.]], shape=(5, 5), dtype=float32)
    
| Arguments  
---  
`image` |  Tensor with shape [batch_size, h, w, d].   
Returns  
---  
Pair of tensors (dy, dx) holding the vertical and horizontal image gradients
(1-step finite difference).  
Raises  
---  
`ValueError` |  If `image` is not a 4D tensor.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/image/image_gradients

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

