# tf.image.random_flip_left_right

View source on GitHub  Randomly flip an image horizontally (left to right).

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.image.random_flip_left_right`

    
    tf.image.random_flip_left_right(
        image, seed=None
    )
    
With a 1 in 2 chance, outputs the contents of `image` flipped along the second
dimension, which is `width`. Otherwise output the image as-is. When passing a
batch of images, each image will be randomly flipped independent of other
images.

#### Example usage:

    
    image = np.array([[[1], [2]], [[3], [4]]])
    tf.image.random_flip_left_right(image, 5).numpy().tolist()
    [[[2], [1]], [[4], [3]]]
    
Randomly flip multiple images.

    
    images = np.array(
    [
        [[[1], [2]], [[3], [4]]],
        [[[5], [6]], [[7], [8]]]
    ])
    tf.image.random_flip_left_right(images, 6).numpy().tolist()
    [[[[2], [1]], [[4], [3]]], [[[5], [6]], [[7], [8]]]]
    
| Args  
---  
`image` |  4-D Tensor of shape `[batch, height, width, channels]` or 3-D Tensor of shape `[height, width, channels]`.   
`seed` |  A Python integer. Used to create a random seed. See `tf.compat.v1.set_random_seed` for behavior.   
Returns  
---  
A tensor of the same type and shape as `image`.  
Raises  
---  
`ValueError` |  if the shape of `image` not supported.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/image/random_flip_left_right

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

