# tf.image.transpose

View source on GitHub  Transpose image(s) by swapping the height and width
dimension.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.image.transpose`, `tf.compat.v1.image.transpose_image`

    
    tf.image.transpose(
        image, name=None
    )
    
#### Usage Example:

    
    x = [[[1.0, 2.0, 3.0],
          [4.0, 5.0, 6.0]],
        [[7.0, 8.0, 9.0],
          [10.0, 11.0, 12.0]]]
    tf.image.transpose(x)
    <tf.Tensor: shape=(2, 2, 3), dtype=float32, numpy=
    array([[[ 1.,  2.,  3.],
            [ 7.,  8.,  9.]],
           [[ 4.,  5.,  6.],
            [10., 11., 12.]]], dtype=float32)>
    
| Args  
---  
`image` |  4-D Tensor of shape `[batch, height, width, channels]` or 3-D Tensor of shape `[height, width, channels]`.   
`name` |  A name for this operation (optional).   
Returns  
---  
If `image` was 4-D, a 4-D float Tensor of shape `[batch, width, height,
channels]` If `image` was 3-D, a 3-D float Tensor of shape `[width, height,
channels]`  
Raises  
---  
`ValueError` |  if the shape of `image` not supported.   
#### Usage Example:

    
    image = [[[1, 2], [3, 4]],
            [[5, 6], [7, 8]],
            [[9, 10], [11, 12]]]
    image = tf.constant(image)
    tf.image.transpose(image)
    <tf.Tensor: shape=(2, 3, 2), dtype=int32, numpy=
    array([[[ 1,  2],
           [ 5,  6],
           [ 9, 10]],
          [[ 3,  4],
           [ 7,  8],
           [11, 12]]], dtype=int32)>
    
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/image/transpose

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

