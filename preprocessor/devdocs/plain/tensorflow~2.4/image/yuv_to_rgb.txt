# tf.image.yuv_to_rgb

View source on GitHub  Converts one or more images from YUV to RGB.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.image.yuv_to_rgb`

    
    tf.image.yuv_to_rgb(
        images
    )
    
Outputs a tensor of the same shape as the `images` tensor, containing the RGB
value of the pixels. The output is only well defined if the Y value in images
are in [0,1], U and V value are in [-0.5,0.5]. As per the above description,
you need to scale your YUV images if their pixel values are not in the
required range. Below given example illustrates preprocessing of each channel
of images before feeding them to `yuv_to_rgb`.

    
    yuv_images = tf.random.uniform(shape=[100, 64, 64, 3], maxval=255)
    last_dimension_axis = len(yuv_images.shape) - 1
    yuv_tensor_images = tf.truediv(
        tf.subtract(
            yuv_images,
            tf.reduce_min(yuv_images)
        ),
        tf.subtract(
            tf.reduce_max(yuv_images),
            tf.reduce_min(yuv_images)
         )
    )
    y, u, v = tf.split(yuv_tensor_images, 3, axis=last_dimension_axis)
    target_uv_min, target_uv_max = -0.5, 0.5
    u = u * (target_uv_max - target_uv_min) + target_uv_min
    v = v * (target_uv_max - target_uv_min) + target_uv_min
    preprocessed_yuv_images = tf.concat([y, u, v], axis=last_dimension_axis)
    rgb_tensor_images = tf.image.yuv_to_rgb(preprocessed_yuv_images)
    
| Args  
---  
`images` |  2-D or higher rank. Image data to convert. Last dimension must be size 3.   
Returns  
---  
`images` |  tensor with the same shape as `images`.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/image/yuv_to_rgb

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

