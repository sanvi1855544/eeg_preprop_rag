# tf.TypeSpec

View source on GitHub  Specifies a TensorFlow value type.

#### View aliases

Compat aliases for migration See Migration guide for more details. `tf.compat.v1.TypeSpec`, `tf.compat.v1.data.experimental.Structure` A `tf.TypeSpec` provides metadata describing an object accepted or returned by TensorFlow APIs. Concrete subclasses, such as `tf.TensorSpec` and `tf.RaggedTensorSpec`, are used to describe different value types. For example, `tf.function`'s `input_signature` argument accepts a list (or nested structure) of `TypeSpec`s. Creating new subclasses of TypeSpec (outside of TensorFlow core) is not currently supported. In particular, we may make breaking changes to the private methods and properties defined by this base class. | Attributes  
---  
`value_type` |  The Python type for values that are compatible with this TypeSpec. In particular, all values that are compatible with this TypeSpec must be an instance of this type.   
## Methods

### `is_compatible_with`

View source

    
    is_compatible_with(
        spec_or_value
    )
    
Returns true if `spec_or_value` is compatible with this TypeSpec.

### `most_specific_compatible_type`

View source

    
    most_specific_compatible_type(
        other
    )
    
Returns the most specific TypeSpec compatible with `self` and `other`.

Args  
---  
`other` |  A `TypeSpec`.   
Raises  
---  
`ValueError` |  If there is no TypeSpec that is compatible with both `self` and `other`.   
### `__eq__`

View source

    
    __eq__(
        other
    )
    
Return self==value.

### `__ne__`

View source

    
    __ne__(
        other
    )
    
Return self!=value.

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/TypeSpec

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

