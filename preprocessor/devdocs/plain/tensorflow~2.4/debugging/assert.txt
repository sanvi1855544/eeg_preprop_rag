# tf.debugging.Assert

View source on GitHub  Asserts that the given condition is true.

#### View aliases

Main aliases `tf.Assert` Compat aliases for migration See Migration guide for
more details. `tf.compat.v1.Assert`, `tf.compat.v1.debugging.Assert`

    
    tf.debugging.Assert(
        condition, data, summarize=None, name=None
    )
    
If `condition` evaluates to false, print the list of tensors in `data`. `summarize` determines how many entries of the tensors to print. | Args  
---  
`condition` |  The condition to evaluate.   
`data` |  The tensors to print out when condition is false.   
`summarize` |  Print this many entries of each tensor.   
`name` |  A name for this operation (optional).   
Returns  
---  
`assert_op` |  An `Operation` that, when executed, raises a `tf.errors.InvalidArgumentError` if `condition` is not true.   
Raises  
---  
> Note: The output of this function should be used. If it is not, a warning
> will be logged or an error may be raised. To mark the output as used, call
> its .mark_used() method.
#### Tf1 Compatibility

When in TF V1 mode (that is, outside `tf.function`) Assert needs a control
dependency on the output to ensure the assertion executes:

    
    # Ensure maximum element of x is smaller or equal to 1
    assert_op = tf.Assert(tf.less_equal(tf.reduce_max(x), 1.), [x])
    with tf.control_dependencies([assert_op]):
      ... code using x ...
    
#### Eager Compatibility

returns None

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/debugging/Assert

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

