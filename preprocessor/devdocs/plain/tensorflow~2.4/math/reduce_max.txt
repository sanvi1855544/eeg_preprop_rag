# tf.math.reduce_max

View source on GitHub  Computes the maximum of elements across dimensions of a
tensor.

#### View aliases

Main aliases `tf.reduce_max`

    
    tf.math.reduce_max(
        input_tensor, axis=None, keepdims=False, name=None
    )
    
Reduces `input_tensor` along the dimensions given in `axis`. Unless `keepdims`
is true, the rank of the tensor is reduced by 1 for each of the entries in
`axis`, which must be unique. If `keepdims` is true, the reduced dimensions
are retained with length 1. If `axis` is None, all dimensions are reduced, and
a tensor with a single element is returned.

#### Usage example:

    
    x = tf.constant([5, 1, 2, 4])
    print(tf.reduce_max(x))
    tf.Tensor(5, shape=(), dtype=int32)
    x = tf.constant([-5, -1, -2, -4])
    print(tf.reduce_max(x))
    tf.Tensor(-1, shape=(), dtype=int32)
    x = tf.constant([4, float('nan')])
    print(tf.reduce_max(x))
    tf.Tensor(nan, shape=(), dtype=float32)
    x = tf.constant([float('nan'), float('nan')])
    print(tf.reduce_max(x))
    tf.Tensor(nan, shape=(), dtype=float32)
    x = tf.constant([float('-inf'), float('inf')])
    print(tf.reduce_max(x))
    tf.Tensor(inf, shape=(), dtype=float32)
    
See the numpy docs for `np.amax` and `np.nanmax` behavior. | Args  
---  
`input_tensor` |  The tensor to reduce. Should have real numeric type.   
`axis` |  The dimensions to reduce. If `None` (the default), reduces all dimensions. Must be in the range `[-rank(input_tensor), rank(input_tensor))`.   
`keepdims` |  If true, retains reduced dimensions with length 1.   
`name` |  A name for the operation (optional).   
Returns  
---  
The reduced tensor.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/math/reduce_max

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

