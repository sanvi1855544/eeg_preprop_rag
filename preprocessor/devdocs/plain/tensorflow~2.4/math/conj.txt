# tf.math.conj

View source on GitHub  Returns the complex conjugate of a complex number.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.conj`, `tf.compat.v1.math.conj`

    
    tf.math.conj(
        x, name=None
    )
    
Given a tensor `x` of complex numbers, this operation returns a tensor of
complex numbers that are the complex conjugate of each element in `x`. The
complex numbers in `x` must be of the form \\(a + bj\\), where `a` is the real
part and `b` is the imaginary part. The complex conjugate returned by this
operation is of the form \\(a - bj\\).

#### For example:

    
    x = tf.constant([-2.25 + 4.75j, 3.25 + 5.75j])
    tf.math.conj(x)
    <tf.Tensor: shape=(2,), dtype=complex128,
    numpy=array([-2.25-4.75j,  3.25-5.75j])>
    
If `x` is real, it is returned unchanged.

#### For example:

    
    x = tf.constant([-2.25, 3.25])
    tf.math.conj(x)
    <tf.Tensor: shape=(2,), dtype=float32,
    numpy=array([-2.25,  3.25], dtype=float32)>
    
| Args  
---  
`x` |  `Tensor` to conjugate. Must have numeric or variant type.   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor` that is the conjugate of `x` (with the same type).  
Raises  
---  
`TypeError` |  If `x` is not a numeric tensor.   
#### Numpy Compatibility

Equivalent to numpy.conj.

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/math/conj

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

