# tf.math.sigmoid

View source on GitHub  Computes sigmoid of `x` element-wise.

#### View aliases

Main aliases `tf.nn.sigmoid`, `tf.sigmoid` Compat aliases for migration See
Migration guide for more details. `tf.compat.v1.math.sigmoid`,
`tf.compat.v1.nn.sigmoid`, `tf.compat.v1.sigmoid`

    
    tf.math.sigmoid(
        x, name=None
    )
    
Formula for calculating $\mathrm{sigmoid}(x) = y = 1 / (1 + \exp(-x))$. For $x
\in (-\infty, \infty)$, $\mathrm{sigmoid}(x) \in (0, 1)$.

#### Example Usage:

If a positive number is large, then its sigmoid will approach to 1 since the
formula will be `y = <large_num> / (1 + <large_num>)`

    
    x = tf.constant([0.0, 1.0, 50.0, 100.0])
    tf.math.sigmoid(x)
    <tf.Tensor: shape=(4,), dtype=float32,
    numpy=array([0.5      , 0.7310586, 1.       , 1.       ], dtype=float32)>
    
If a negative number is large, its sigmoid will approach to 0 since the
formula will be `y = 1 / (1 + <large_num>)`

    
    x = tf.constant([-100.0, -50.0, -1.0, 0.0])
    tf.math.sigmoid(x)
    <tf.Tensor: shape=(4,), dtype=float32, numpy=
    array([0.0000000e+00, 1.9287499e-22, 2.6894143e-01, 0.5],
          dtype=float32)>
    
| Args  
---  
`x` |  A Tensor with type `float16`, `float32`, `float64`, `complex64`, or `complex128`.   
`name` |  A name for the operation (optional).   
Returns  
---  
A Tensor with the same type as `x`.  
#### Usage Example:

    
    x = tf.constant([-128.0, 0.0, 128.0], dtype=tf.float32)
    tf.sigmoid(x)
    <tf.Tensor: shape=(3,), dtype=float32,
    numpy=array([0. , 0.5, 1. ], dtype=float32)>
    
#### Scipy Compatibility

Equivalent to scipy.special.expit

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/math/sigmoid

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

