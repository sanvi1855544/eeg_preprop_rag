# tf.math.is_strictly_increasing

View source on GitHub  Returns `True` if `x` is strictly increasing.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.debugging.is_strictly_increasing`,
`tf.compat.v1.is_strictly_increasing`,
`tf.compat.v1.math.is_strictly_increasing`

    
    tf.math.is_strictly_increasing(
        x, name=None
    )
    
Elements of `x` are compared in row-major order. The tensor `[x[0],...]` is
strictly increasing if for every adjacent pair we have `x[i] < x[i+1]`. If `x`
has less than two elements, it is trivially strictly increasing. See also:
`is_non_decreasing`

    
    x1 = tf.constant([1.0, 2.0, 3.0])
    tf.math.is_strictly_increasing(x1)
    <tf.Tensor: shape=(), dtype=bool, numpy=True>
    x2 = tf.constant([3.0, 1.0, 2.0])
    tf.math.is_strictly_increasing(x2)
    <tf.Tensor: shape=(), dtype=bool, numpy=False>
    
| Args  
---  
`x` |  Numeric `Tensor`.   
`name` |  A name for this operation (optional). Defaults to "is_strictly_increasing"   
Returns  
---  
Boolean `Tensor`, equal to `True` iff `x` is strictly increasing.  
Raises  
---  
`TypeError` |  if `x` is not a numeric tensor.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/math/is_strictly_increasing

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

