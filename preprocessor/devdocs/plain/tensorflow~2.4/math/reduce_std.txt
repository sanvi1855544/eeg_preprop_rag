# tf.math.reduce_std

View source on GitHub  Computes the standard deviation of elements across
dimensions of a tensor.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.math.reduce_std`

    
    tf.math.reduce_std(
        input_tensor, axis=None, keepdims=False, name=None
    )
    
Reduces `input_tensor` along the dimensions given in `axis`. Unless `keepdims`
is true, the rank of the tensor is reduced by 1 for each of the entries in
`axis`, which must be unique. If `keepdims` is true, the reduced dimensions
are retained with length 1. If `axis` is None, all dimensions are reduced, and
a tensor with a single element is returned.

#### For example:

    
    x = tf.constant([[1., 2.], [3., 4.]])
    tf.math.reduce_std(x)
    <tf.Tensor: shape=(), dtype=float32, numpy=1.118034>
    tf.math.reduce_std(x, 0)
    <tf.Tensor: shape=(2,), dtype=float32, numpy=array([1., 1.], dtype=float32)>
    tf.math.reduce_std(x, 1)
    <tf.Tensor: shape=(2,), dtype=float32, numpy=array([0.5, 0.5], dtype=float32)>
    
| Args  
---  
`input_tensor` |  The tensor to reduce. Should have real or complex type.   
`axis` |  The dimensions to reduce. If `None` (the default), reduces all dimensions. Must be in the range `[-rank(input_tensor), rank(input_tensor))`.   
`keepdims` |  If true, retains reduced dimensions with length 1.   
`name` |  A name scope for the associated operations (optional).   
Returns  
---  
The reduced tensor, of the same dtype as the input_tensor. Note, for
`complex64` or `complex128` input, the returned `Tensor` will be of type
`float32` or `float64`, respectively.  
#### Numpy Compatibility

Equivalent to np.std

Please note `np.std` has a `dtype` parameter that could be used to specify the
output type. By default this is `dtype=float64`. On the other hand,
`tf.math.reduce_std` has aggressive type inference from `input_tensor`.

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/math/reduce_std

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

