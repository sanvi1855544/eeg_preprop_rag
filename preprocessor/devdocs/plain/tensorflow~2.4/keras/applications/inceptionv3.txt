# tf.keras.applications.InceptionV3

View source on GitHub  Instantiates the Inception v3 architecture.

#### View aliases

Main aliases `tf.keras.applications.inception_v3.InceptionV3` Compat aliases
for migration See Migration guide for more details.
`tf.compat.v1.keras.applications.InceptionV3`,
`tf.compat.v1.keras.applications.inception_v3.InceptionV3`

    
    tf.keras.applications.InceptionV3(
        include_top=True, weights='imagenet', input_tensor=None,
        input_shape=None, pooling=None, classes=1000,
        classifier_activation='softmax'
    )
    
#### Reference:

  * Rethinking the Inception Architecture for Computer Vision (CVPR 2016)

Optionally loads weights pre-trained on ImageNet. Note that the data format
convention used by the model is the one specified in the
`tf.keras.backend.image_data_format()`.

> Note: each Keras Application expects a specific kind of input preprocessing.
> For InceptionV3, call `tf.keras.applications.inception_v3.preprocess_input`
> on your inputs before passing them to the model.
| Arguments  
---  
`include_top` |  Boolean, whether to include the fully-connected layer at the top, as the last layer of the network. Default to `True`.   
`weights` |  One of `None` (random initialization), `imagenet` (pre-training on ImageNet), or the path to the weights file to be loaded. Default to `imagenet`.   
`input_tensor` |  Optional Keras tensor (i.e. output of `layers.Input()`) to use as image input for the model. `input_tensor` is useful for sharing inputs between multiple different networks. Default to None.   
`input_shape` |  Optional shape tuple, only to be specified if `include_top` is False (otherwise the input shape has to be `(299, 299, 3)` (with `channels_last` data format) or `(3, 299, 299)` (with `channels_first` data format). It should have exactly 3 inputs channels, and width and height should be no smaller than 75. E.g. `(150, 150, 3)` would be one valid value. `input_shape` will be ignored if the `input_tensor` is provided.   
`pooling` |  Optional pooling mode for feature extraction when `include_top` is `False`. 
  * `None` (default) means that the output of the model will be the 4D tensor output of the last convolutional block.
  * `avg` means that global average pooling will be applied to the output of the last convolutional block, and thus the output of the model will be a 2D tensor.
  * `max` means that global max pooling will be applied. 

  
`classes` |  optional number of classes to classify images into, only to be specified if `include_top` is True, and if no `weights` argument is specified. Default to 1000.   
`classifier_activation` |  A `str` or callable. The activation function to use on the "top" layer. Ignored unless `include_top=True`. Set `classifier_activation=None` to return the logits of the "top" layer.   
Returns  
---  
A `keras.Model` instance.  
Raises  
---  
`ValueError` |  in case of invalid argument for `weights`, or invalid input shape.   
`ValueError` |  if `classifier_activation` is not `softmax` or `None` when using a pretrained top layer.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/applications/InceptionV3

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

