# tf.keras.applications.NASNetLarge

View source on GitHub  Instantiates a NASNet model in ImageNet mode.

#### View aliases

Main aliases `tf.keras.applications.nasnet.NASNetLarge` Compat aliases for
migration See Migration guide for more details.
`tf.compat.v1.keras.applications.NASNetLarge`,
`tf.compat.v1.keras.applications.nasnet.NASNetLarge`

    
    tf.keras.applications.NASNetLarge(
        input_shape=None, include_top=True, weights='imagenet',
        input_tensor=None, pooling=None, classes=1000
    )
    
#### Reference:

  * Learning Transferable Architectures for Scalable Image Recognition (CVPR 2018)

Optionally loads weights pre-trained on ImageNet. Note that the data format
convention used by the model is the one specified in your Keras config at
`~/.keras/keras.json`.

> Note: each Keras Application expects a specific kind of input preprocessing.
> For NASNet, call `tf.keras.applications.nasnet.preprocess_input` on your
> inputs before passing them to the model.
| Arguments  
---  
`input_shape` |  Optional shape tuple, only to be specified if `include_top` is False (otherwise the input shape has to be `(331, 331, 3)` for NASNetLarge. It should have exactly 3 inputs channels, and width and height should be no smaller than 32. E.g. `(224, 224, 3)` would be one valid value.   
`include_top` |  Whether to include the fully-connected layer at the top of the network.   
`weights` |  `None` (random initialization) or `imagenet` (ImageNet weights) For loading `imagenet` weights, `input_shape` should be (331, 331, 3)   
`input_tensor` |  Optional Keras tensor (i.e. output of `layers.Input()`) to use as image input for the model.   
`pooling` |  Optional pooling mode for feature extraction when `include_top` is `False`. 
  * `None` means that the output of the model will be the 4D tensor output of the last convolutional layer.
  * `avg` means that global average pooling will be applied to the output of the last convolutional layer, and thus the output of the model will be a 2D tensor.
  * `max` means that global max pooling will be applied. 

  
`classes` |  Optional number of classes to classify images into, only to be specified if `include_top` is True, and if no `weights` argument is specified.   
Returns  
---  
A Keras model instance.  
Raises  
---  
`ValueError` |  in case of invalid argument for `weights`, or invalid input shape.   
`RuntimeError` |  If attempting to run this model with a backend that does not support separable convolutions.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/applications/NASNetLarge

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

