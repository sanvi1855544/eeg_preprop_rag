# tf.keras.layers.Cropping2D

View source on GitHub  Cropping layer for 2D input (e.g. picture). Inherits
From: `Layer`, `Module`

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.keras.layers.Cropping2D`

    
    tf.keras.layers.Cropping2D(
        cropping=((0, 0), (0, 0)), data_format=None, **kwargs
    )
    
It crops along spatial dimensions, i.e. height and width.

#### Examples:

    
    input_shape = (2, 28, 28, 3)
    x = np.arange(np.prod(input_shape)).reshape(input_shape)
    y = tf.keras.layers.Cropping2D(cropping=((2, 2), (4, 4)))(x)
    print(y.shape)
    (2, 24, 20, 3)
    
| Arguments  
---  
`cropping` |  Int, or tuple of 2 ints, or tuple of 2 tuples of 2 ints. 
  * If int: the same symmetric cropping is applied to height and width.
  * If tuple of 2 ints: interpreted as two different symmetric cropping values for height and width: `(symmetric_height_crop, symmetric_width_crop)`.
  * If tuple of 2 tuples of 2 ints: interpreted as `((top_crop, bottom_crop), (left_crop, right_crop))`

  
`data_format` |  A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs. `channels_last` corresponds to inputs with shape `(batch_size, height, width, channels)` while `channels_first` corresponds to inputs with shape `(batch_size, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be "channels_last".   
#### Input shape:

4D tensor with shape:

  * If `data_format` is `"channels_last"`: `(batch_size, rows, cols, channels)`
  * If `data_format` is `"channels_first"`: `(batch_size, channels, rows, cols)`

#### Output shape:

4D tensor with shape:

  * If `data_format` is `"channels_last"`: `(batch_size, cropped_rows, cropped_cols, channels)`
  * If `data_format` is `"channels_first"`: `(batch_size, channels, cropped_rows, cropped_cols)`

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/layers/Cropping2D

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

