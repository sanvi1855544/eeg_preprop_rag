# tf.keras.layers.experimental.preprocessing.RandomHeight

Randomly vary the height of a batch of images during training.

Inherits From: `PreprocessingLayer`, `Layer`, `Module`

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.keras.layers.experimental.preprocessing.RandomHeight`

    
    tf.keras.layers.experimental.preprocessing.RandomHeight(
        factor, interpolation='bilinear', seed=None, name=None, **kwargs
    )
    
Adjusts the height of a batch of images by a random factor. The input should
be a 4-D tensor in the "channels_last" image data format.

By default, this layer is inactive during inference.

Arguments  
---  
`factor` |  A positive float (fraction of original height), or a tuple of size 2 representing lower and upper bound for resizing vertically. When represented as a single float, this value is used for both the upper and lower bound. For instance, `factor=(0.2, 0.3)` results in an output with height changed by a random amount in the range `[20%, 30%]`. `factor=(-0.2, 0.3)` results in an output with height changed by a random amount in the range `[-20%, +30%].`factor=0.2`results in an output with height changed by a random amount in the range`[-20%, +20%]`. </td> </tr><tr> <td>`interpolation`</td> <td> String, the interpolation method. Defaults to`bilinear`. Supports`bilinear`,`nearest`,`bicubic`,`area`,`lanczos3`,`lanczos5`,`gaussian`,`mitchellcubic`</td> </tr><tr> <td>`seed`</td> <td> Integer. Used to create a random seed. </td> </tr><tr> <td>`name`  |  A string, the name of the layer.   
#### Input shape:

4D tensor with shape: `(samples, height, width, channels)`
(data_format='channels_last').

#### Output shape:

4D tensor with shape: `(samples, random_height, width, channels)`.

## Methods

### `adapt`

View source

    
    adapt(
        data, reset_state=True
    )
    
Fits the state of the preprocessing layer to the data being passed.

Arguments  
---  
`data` |  The data to train on. It can be passed either as a tf.data Dataset, or as a numpy array.   
`reset_state` |  Optional argument specifying whether to clear the state of the layer at the start of the call to `adapt`, or whether to start from the existing state. This argument may not be relevant to all preprocessing layers: a subclass of PreprocessingLayer may choose to throw if 'reset_state' is set to False.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/layers/experimental/preprocessing/RandomHeight

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

