# tf.keras.layers.experimental.preprocessing.Discretization

Buckets data into discrete ranges.

Inherits From: `PreprocessingLayer`, `Layer`, `Module`

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.keras.layers.experimental.preprocessing.Discretization`

    
    tf.keras.layers.experimental.preprocessing.Discretization(
        bins, **kwargs
    )
    
This layer will place each element of its input data into one of several
contiguous ranges and output an integer index indicating which range each
element was placed in.

#### Input shape:

Any `tf.Tensor` or `tf.RaggedTensor` of dimension 2 or higher.

#### Output shape:

Same as input shape.

#### Examples:

Bucketize float values based on provided buckets.

    
    >>> input = np.array([[-1.5, 1.0, 3.4, .5], [0.0, 3.0, 1.3, 0.0]])
    >>> layer = tf.keras.layers.experimental.preprocessing.Discretization(
    ...          bins=[0., 1., 2.])
    >>> layer(input)
    <tf.Tensor: shape=(2, 4), dtype=int32, numpy=
    array([[0, 1, 3, 1],
           [0, 3, 2, 0]], dtype=int32)>
    
Attributes  
---  
`bins` |  Optional boundary specification. Bins exclude the left boundary and include the right boundary, so `bins=[0., 1., 2.]` generates bins `(-inf, 0.)`, `[0., 1.)`, `[1., 2.)`, and `[2., +inf)`.   
## Methods

### `adapt`

View source

    
    adapt(
        data, reset_state=True
    )
    
Fits the state of the preprocessing layer to the data being passed.

Arguments  
---  
`data` |  The data to train on. It can be passed either as a tf.data Dataset, or as a numpy array.   
`reset_state` |  Optional argument specifying whether to clear the state of the layer at the start of the call to `adapt`, or whether to start from the existing state. This argument may not be relevant to all preprocessing layers: a subclass of PreprocessingLayer may choose to throw if 'reset_state' is set to False.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/layers/experimental/preprocessing/Discretization

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

