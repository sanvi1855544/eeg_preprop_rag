# tf.keras.layers.experimental.preprocessing.RandomContrast

Adjust the contrast of an image or images by a random factor.

Inherits From: `PreprocessingLayer`, `Layer`, `Module`

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.keras.layers.experimental.preprocessing.RandomContrast`

    
    tf.keras.layers.experimental.preprocessing.RandomContrast(
        factor, seed=None, name=None, **kwargs
    )
    
Contrast is adjusted independently for each channel of each image during
training.

For each channel, this layer computes the mean of the image pixels in the
channel and then adjusts each component `x` of each pixel to `(x - mean) *
contrast_factor + mean`.

#### Input shape:

4D tensor with shape: `(samples, height, width, channels)`,
data_format='channels_last'.

#### Output shape:

4D tensor with shape: `(samples, height, width, channels)`,
data_format='channels_last'.

Raise  
---  
`ValueError` |  if lower bound is not between [0, 1], or upper bound is negative.   
Attributes  
---  
`factor` |  a positive float represented as fraction of value, or a tuple of size 2 representing lower and upper bound. When represented as a single float, lower = upper. The contrast factor will be randomly picked between [1.0 - lower, 1.0 + upper].   
`seed` |  Integer. Used to create a random seed.   
`name` |  A string, the name of the layer.   
## Methods

### `adapt`

View source

    
    adapt(
        data, reset_state=True
    )
    
Fits the state of the preprocessing layer to the data being passed.

Arguments  
---  
`data` |  The data to train on. It can be passed either as a tf.data Dataset, or as a numpy array.   
`reset_state` |  Optional argument specifying whether to clear the state of the layer at the start of the call to `adapt`, or whether to start from the existing state. This argument may not be relevant to all preprocessing layers: a subclass of PreprocessingLayer may choose to throw if 'reset_state' is set to False.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/layers/experimental/preprocessing/RandomContrast

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

