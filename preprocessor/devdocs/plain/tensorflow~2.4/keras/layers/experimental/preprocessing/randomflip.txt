# tf.keras.layers.experimental.preprocessing.RandomFlip

Randomly flip each image horizontally and vertically.

Inherits From: `PreprocessingLayer`, `Layer`, `Module`

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.keras.layers.experimental.preprocessing.RandomFlip`

    
    tf.keras.layers.experimental.preprocessing.RandomFlip(
        mode=HORIZONTAL_AND_VERTICAL, seed=None, name=None, **kwargs
    )
    
This layer will flip the images based on the `mode` attribute. During
inference time, the output will be identical to input. Call the layer with
`training=True` to flip the input.

#### Input shape:

4D tensor with shape: `(samples, height, width, channels)`,
data_format='channels_last'.

#### Output shape:

4D tensor with shape: `(samples, height, width, channels)`,
data_format='channels_last'.

Attributes  
---  
`mode` |  String indicating which flip mode to use. Can be "horizontal", "vertical", or "horizontal_and_vertical". Defaults to "horizontal_and_vertical". "horizontal" is a left-right flip and "vertical" is a top-bottom flip.   
`seed` |  Integer. Used to create a random seed.   
`name` |  A string, the name of the layer.   
## Methods

### `adapt`

View source

    
    adapt(
        data, reset_state=True
    )
    
Fits the state of the preprocessing layer to the data being passed.

Arguments  
---  
`data` |  The data to train on. It can be passed either as a tf.data Dataset, or as a numpy array.   
`reset_state` |  Optional argument specifying whether to clear the state of the layer at the start of the call to `adapt`, or whether to start from the existing state. This argument may not be relevant to all preprocessing layers: a subclass of PreprocessingLayer may choose to throw if 'reset_state' is set to False.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/layers/experimental/preprocessing/RandomFlip

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

