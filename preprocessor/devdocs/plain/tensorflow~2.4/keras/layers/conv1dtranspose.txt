# tf.keras.layers.Conv1DTranspose

Transposed convolution layer (sometimes called Deconvolution).

Inherits From: `Conv1D`, `Layer`, `Module`

#### View aliases

Main aliases

`tf.keras.layers.Convolution1DTranspose`

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.keras.layers.Conv1DTranspose`,
`tf.compat.v1.keras.layers.Convolution1DTranspose`

    
    tf.keras.layers.Conv1DTranspose(
        filters, kernel_size, strides=1, padding='valid', output_padding=None,
        data_format=None, dilation_rate=1, activation=None, use_bias=True,
        kernel_initializer='glorot_uniform',
        bias_initializer='zeros', kernel_regularizer=None,
        bias_regularizer=None, activity_regularizer=None, kernel_constraint=None,
        bias_constraint=None, **kwargs
    )
    
The need for transposed convolutions generally arises from the desire to use a
transformation going in the opposite direction of a normal convolution, i.e.,
from something that has the shape of the output of some convolution to
something that has the shape of its input while maintaining a connectivity
pattern that is compatible with said convolution.

When using this layer as the first layer in a model, provide the keyword
argument `input_shape` (tuple of integers, does not include the sample axis),
e.g. `input_shape=(128, 3)` for data with 128 time steps and 3 channels.

Arguments  
---  
`filters` |  Integer, the dimensionality of the output space (i.e. the number of output filters in the convolution).   
`kernel_size` |  An integer length of the 1D convolution window.   
`strides` |  An integer specifying the stride of the convolution along the time dimension. Specifying a stride value != 1 is incompatible with specifying a `dilation_rate` value != 1. Defaults to 1.   
`padding` |  one of `"valid"` or `"same"` (case-insensitive). `"valid"` means no padding. `"same"` results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.   
`output_padding` |  An integer specifying the amount of padding along the time dimension of the output tensor. The amount of output padding must be lower than the stride. If set to `None` (default), the output shape is inferred.   
`data_format` |  A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs. `channels_last` corresponds to inputs with shape `(batch_size, length, channels)` while `channels_first` corresponds to inputs with shape `(batch_size, channels, length)`.   
`dilation_rate` |  an integer, specifying the dilation rate to use for dilated convolution. Currently, specifying a `dilation_rate` value != 1 is incompatible with specifying a stride value != 1. Also dilation rate larger than 1 is not currently supported.   
`activation` |  Activation function to use. If you don't specify anything, no activation is applied ( see `keras.activations`).   
`use_bias` |  Boolean, whether the layer uses a bias vector.   
`kernel_initializer` |  Initializer for the `kernel` weights matrix ( see `keras.initializers`).   
`bias_initializer` |  Initializer for the bias vector ( see `keras.initializers`).   
`kernel_regularizer` |  Regularizer function applied to the `kernel` weights matrix (see `keras.regularizers`).   
`bias_regularizer` |  Regularizer function applied to the bias vector ( see `keras.regularizers`).   
`activity_regularizer` |  Regularizer function applied to the output of the layer (its "activation") (see `keras.regularizers`).   
`kernel_constraint` |  Constraint function applied to the kernel matrix ( see `keras.constraints`).   
`bias_constraint` |  Constraint function applied to the bias vector ( see `keras.constraints`).   
#### Input shape:

3D tensor with shape: `(batch_size, steps, channels)`

#### Output shape:

3D tensor with shape: `(batch_size, new_steps, filters)` If `output_padding`
is specified:

    
    new_timesteps = ((timesteps - 1) * strides + kernel_size -
    2 * padding + output_padding)
    
Returns  
---  
A tensor of rank 3 representing `activation(conv1dtranspose(inputs, kernel) +
bias)`.  
Raises  
---  
`ValueError` |  if `padding` is "causal".   
`ValueError` |  when both `strides` > 1 and `dilation_rate` > 1\.   
#### References:

  * A guide to convolution arithmetic for deep learning
  * Deconvolutional Networks

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/layers/Conv1DTranspose

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

