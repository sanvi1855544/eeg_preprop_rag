# tf.keras.preprocessing.image.array_to_img

View source on GitHub  Converts a 3D Numpy array to a PIL Image instance.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.keras.preprocessing.image.array_to_img`

    
    tf.keras.preprocessing.image.array_to_img(
        x, data_format=None, scale=True, dtype=None
    )
    
#### Usage:

    
    from PIL import Image
    img = np.random.random(size=(100, 100, 3))
    pil_img = tf.keras.preprocessing.image.array_to_img(img)
    
| Arguments  
---  
`x` |  Input Numpy array.   
`data_format` |  Image data format, can be either "channels_first" or "channels_last". Defaults to `None`, in which case the global setting `tf.keras.backend.image_data_format()` is used (unless you changed it, it defaults to "channels_last").   
`scale` |  Whether to rescale image values to be within `[0, 255]`. Defaults to `True`.   
`dtype` |  Dtype to use. Default to `None`, in which case the global setting `tf.keras.backend.floatx()` is used (unless you changed it, it defaults to "float32")   
Returns  
---  
A PIL Image instance.  
Raises  
---  
`ImportError` |  if PIL is not available.   
`ValueError` |  if invalid `x` or `data_format` is passed.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/preprocessing/image/array_to_img

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

