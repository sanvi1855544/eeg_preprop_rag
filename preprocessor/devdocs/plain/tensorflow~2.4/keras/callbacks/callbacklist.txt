# tf.keras.callbacks.CallbackList

Container abstracting a list of callbacks.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.keras.callbacks.CallbackList`

    
    tf.keras.callbacks.CallbackList(
        callbacks=None, add_history=False, add_progbar=False, model=None, **params
    )
    
Arguments  
---  
`callbacks` |  List of `Callback` instances.   
`add_history` |  Whether a `History` callback should be added, if one does not already exist in the `callbacks` list.   
`add_progbar` |  Whether a `ProgbarLogger` callback should be added, if one does not already exist in the `callbacks` list.   
`model` |  The `Model` these callbacks are used with.   
`**params` |  If provided, parameters will be passed to each `Callback` via `Callback.set_params`.   
## Methods

### `append`

View source

    
    append(
        callback
    )
    
### `on_batch_begin`

View source

    
    on_batch_begin(
        batch, logs=None
    )
    
### `on_batch_end`

View source

    
    on_batch_end(
        batch, logs=None
    )
    
### `on_epoch_begin`

View source

    
    on_epoch_begin(
        epoch, logs=None
    )
    
Calls the `on_epoch_begin` methods of its callbacks.

This function should only be called during TRAIN mode.

Arguments  
---  
`epoch` |  Integer, index of epoch.   
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_epoch_end`

View source

    
    on_epoch_end(
        epoch, logs=None
    )
    
Calls the `on_epoch_end` methods of its callbacks.

This function should only be called during TRAIN mode.

Arguments  
---  
`epoch` |  Integer, index of epoch.   
`logs` |  Dict, metric results for this training epoch, and for the validation epoch if validation is performed. Validation result keys are prefixed with `val_`.   
### `on_predict_batch_begin`

View source

    
    on_predict_batch_begin(
        batch, logs=None
    )
    
Calls the `on_predict_batch_begin` methods of its callbacks.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict, contains the return value of `model.predict_step`, it typically returns a dict with a key 'outputs' containing the model's outputs.   
### `on_predict_batch_end`

View source

    
    on_predict_batch_end(
        batch, logs=None
    )
    
Calls the `on_predict_batch_end` methods of its callbacks.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict. Aggregated metric results up until this batch.   
### `on_predict_begin`

View source

    
    on_predict_begin(
        logs=None
    )
    
Calls the 'on_predict_begin` methods of its callbacks.

Arguments  
---  
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_predict_end`

View source

    
    on_predict_end(
        logs=None
    )
    
Calls the `on_predict_end` methods of its callbacks.

Arguments  
---  
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_test_batch_begin`

View source

    
    on_test_batch_begin(
        batch, logs=None
    )
    
Calls the `on_test_batch_begin` methods of its callbacks.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict, contains the return value of `model.test_step`. Typically, the values of the `Model`'s metrics are returned. Example: `{'loss': 0.2, 'accuracy': 0.7}`.   
### `on_test_batch_end`

View source

    
    on_test_batch_end(
        batch, logs=None
    )
    
Calls the `on_test_batch_end` methods of its callbacks.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict. Aggregated metric results up until this batch.   
### `on_test_begin`

View source

    
    on_test_begin(
        logs=None
    )
    
Calls the `on_test_begin` methods of its callbacks.

Arguments  
---  
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_test_end`

View source

    
    on_test_end(
        logs=None
    )
    
Calls the `on_test_end` methods of its callbacks.

Arguments  
---  
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_train_batch_begin`

View source

    
    on_train_batch_begin(
        batch, logs=None
    )
    
Calls the `on_train_batch_begin` methods of its callbacks.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict, contains the return value of `model.train_step`. Typically, the values of the `Model`'s metrics are returned. Example: `{'loss': 0.2, 'accuracy': 0.7}`.   
### `on_train_batch_end`

View source

    
    on_train_batch_end(
        batch, logs=None
    )
    
Calls the `on_train_batch_end` methods of its callbacks.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict. Aggregated metric results up until this batch.   
### `on_train_begin`

View source

    
    on_train_begin(
        logs=None
    )
    
Calls the `on_train_begin` methods of its callbacks.

Arguments  
---  
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_train_end`

View source

    
    on_train_end(
        logs=None
    )
    
Calls the `on_train_end` methods of its callbacks.

Arguments  
---  
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `set_model`

View source

    
    set_model(
        model
    )
    
### `set_params`

View source

    
    set_params(
        params
    )
    
### `__iter__`

View source

    
    __iter__()
    
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/callbacks/CallbackList

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

