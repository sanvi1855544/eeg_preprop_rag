# tf.keras.callbacks.Callback

|  View source on GitHub  Abstract base class used to build new callbacks.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.keras.callbacks.Callback`

    
    tf.keras.callbacks.Callback()
    
The `logs` dictionary that callback methods take as argument will contain keys for quantities relevant to the current batch or epoch (see method-specific docstrings). | Attributes  
---  
`params` |  Dict. Training parameters (eg. verbosity, batch size, number of epochs...).   
`model` |  Instance of `keras.models.Model`. Reference of the model being trained.   
## Methods

### `on_batch_begin`

View source

    
    on_batch_begin(
        batch, logs=None
    )
    
A backwards compatibility alias for `on_train_batch_begin`.

### `on_batch_end`

View source

    
    on_batch_end(
        batch, logs=None
    )
    
A backwards compatibility alias for `on_train_batch_end`.

### `on_epoch_begin`

View source

    
    on_epoch_begin(
        epoch, logs=None
    )
    
Called at the start of an epoch.

Subclasses should override for any actions to run. This function should only
be called during TRAIN mode.

Arguments  
---  
`epoch` |  Integer, index of epoch.   
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_epoch_end`

View source

    
    on_epoch_end(
        epoch, logs=None
    )
    
Called at the end of an epoch.

Subclasses should override for any actions to run. This function should only
be called during TRAIN mode.

Arguments  
---  
`epoch` |  Integer, index of epoch.   
`logs` |  Dict, metric results for this training epoch, and for the validation epoch if validation is performed. Validation result keys are prefixed with `val_`. For training epoch, the values of the  
`Model`'s metrics are returned. Example : `{'loss': 0.2, 'acc': 0.7}`.  
### `on_predict_batch_begin`

View source

    
    on_predict_batch_begin(
        batch, logs=None
    )
    
Called at the beginning of a batch in `predict` methods.

Subclasses should override for any actions to run.

Note that if the `steps_per_execution` argument to `compile` in
`tf.keras.Model` is set to `N`, this method will only be called every `N`
batches.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict, contains the return value of `model.predict_step`, it typically returns a dict with a key 'outputs' containing the model's outputs.   
### `on_predict_batch_end`

View source

    
    on_predict_batch_end(
        batch, logs=None
    )
    
Called at the end of a batch in `predict` methods.

Subclasses should override for any actions to run.

Note that if the `steps_per_execution` argument to `compile` in
`tf.keras.Model` is set to `N`, this method will only be called every `N`
batches.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict. Aggregated metric results up until this batch.   
### `on_predict_begin`

View source

    
    on_predict_begin(
        logs=None
    )
    
Called at the beginning of prediction.

Subclasses should override for any actions to run.

Arguments  
---  
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_predict_end`

View source

    
    on_predict_end(
        logs=None
    )
    
Called at the end of prediction.

Subclasses should override for any actions to run.

Arguments  
---  
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_test_batch_begin`

View source

    
    on_test_batch_begin(
        batch, logs=None
    )
    
Called at the beginning of a batch in `evaluate` methods.

Also called at the beginning of a validation batch in the `fit` methods, if
validation data is provided.

Subclasses should override for any actions to run.

Note that if the `steps_per_execution` argument to `compile` in
`tf.keras.Model` is set to `N`, this method will only be called every `N`
batches.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict, contains the return value of `model.test_step`. Typically, the values of the `Model`'s metrics are returned. Example: `{'loss': 0.2, 'accuracy': 0.7}`.   
### `on_test_batch_end`

View source

    
    on_test_batch_end(
        batch, logs=None
    )
    
Called at the end of a batch in `evaluate` methods.

Also called at the end of a validation batch in the `fit` methods, if
validation data is provided.

Subclasses should override for any actions to run.

Note that if the `steps_per_execution` argument to `compile` in
`tf.keras.Model` is set to `N`, this method will only be called every `N`
batches.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict. Aggregated metric results up until this batch.   
### `on_test_begin`

View source

    
    on_test_begin(
        logs=None
    )
    
Called at the beginning of evaluation or validation.

Subclasses should override for any actions to run.

Arguments  
---  
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_test_end`

View source

    
    on_test_end(
        logs=None
    )
    
Called at the end of evaluation or validation.

Subclasses should override for any actions to run.

Arguments  
---  
`logs` |  Dict. Currently the output of the last call to `on_test_batch_end()` is passed to this argument for this method but that may change in the future.   
### `on_train_batch_begin`

View source

    
    on_train_batch_begin(
        batch, logs=None
    )
    
Called at the beginning of a training batch in `fit` methods.

Subclasses should override for any actions to run.

Note that if the `steps_per_execution` argument to `compile` in
`tf.keras.Model` is set to `N`, this method will only be called every `N`
batches.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict, contains the return value of `model.train_step`. Typically, the values of the `Model`'s metrics are returned. Example: `{'loss': 0.2, 'accuracy': 0.7}`.   
### `on_train_batch_end`

View source

    
    on_train_batch_end(
        batch, logs=None
    )
    
Called at the end of a training batch in `fit` methods.

Subclasses should override for any actions to run.

Note that if the `steps_per_execution` argument to `compile` in
`tf.keras.Model` is set to `N`, this method will only be called every `N`
batches.

Arguments  
---  
`batch` |  Integer, index of batch within the current epoch.   
`logs` |  Dict. Aggregated metric results up until this batch.   
### `on_train_begin`

View source

    
    on_train_begin(
        logs=None
    )
    
Called at the beginning of training.

Subclasses should override for any actions to run.

Arguments  
---  
`logs` |  Dict. Currently no data is passed to this argument for this method but that may change in the future.   
### `on_train_end`

View source

    
    on_train_end(
        logs=None
    )
    
Called at the end of training.

Subclasses should override for any actions to run.

Arguments  
---  
`logs` |  Dict. Currently the output of the last call to `on_epoch_end()` is passed to this argument for this method but that may change in the future.   
### `set_model`

View source

    
    set_model(
        model
    )
    
### `set_params`

View source

    
    set_params(
        params
    )
    
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/callbacks/Callback

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

