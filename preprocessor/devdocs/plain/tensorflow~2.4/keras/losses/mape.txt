# tf.keras.losses.MAPE

View source on GitHub  Computes the mean absolute percentage error between
`y_true` and `y_pred`.

#### View aliases

Main aliases `tf.keras.losses.mape`,
`tf.keras.losses.mean_absolute_percentage_error`, `tf.keras.metrics.MAPE`,
`tf.keras.metrics.mape`, `tf.keras.metrics.mean_absolute_percentage_error`,
`tf.losses.MAPE`, `tf.losses.mape`,
`tf.losses.mean_absolute_percentage_error`, `tf.metrics.MAPE`,
`tf.metrics.mape`, `tf.metrics.mean_absolute_percentage_error` Compat aliases
for migration See Migration guide for more details.
`tf.compat.v1.keras.losses.MAPE`, `tf.compat.v1.keras.losses.mape`,
`tf.compat.v1.keras.losses.mean_absolute_percentage_error`,
`tf.compat.v1.keras.metrics.MAPE`, `tf.compat.v1.keras.metrics.mape`,
`tf.compat.v1.keras.metrics.mean_absolute_percentage_error`

    
    tf.keras.losses.MAPE(
        y_true, y_pred
    )
    
`loss = 100 * mean(abs((y_true - y_pred) / y_true), axis=-1)`

#### Standalone usage:

    
    y_true = np.random.random(size=(2, 3))
    y_true = np.maximum(y_true, 1e-7)  # Prevent division by zero
    y_pred = np.random.random(size=(2, 3))
    loss = tf.keras.losses.mean_absolute_percentage_error(y_true, y_pred)
    assert loss.shape == (2,)
    assert np.array_equal(
        loss.numpy(),
        100. * np.mean(np.abs((y_true - y_pred) / y_true), axis=-1))
    
| Args  
---  
`y_true` |  Ground truth values. shape = `[batch_size, d0, .. dN]`.   
`y_pred` |  The predicted values. shape = `[batch_size, d0, .. dN]`.   
Returns  
---  
Mean absolute percentage error values. shape = `[batch_size, d0, .. dN-1]`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/losses/MAPE

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

