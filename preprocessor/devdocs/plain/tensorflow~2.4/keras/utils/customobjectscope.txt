# tf.keras.utils.CustomObjectScope

View source on GitHub  Exposes custom classes/functions to Keras
deserialization internals.

#### View aliases

Main aliases `tf.keras.utils.custom_object_scope` Compat aliases for migration
See Migration guide for more details.
`tf.compat.v1.keras.utils.CustomObjectScope`,
`tf.compat.v1.keras.utils.custom_object_scope`

    
    tf.keras.utils.CustomObjectScope(
        *args
    )
    
Under a scope `with custom_object_scope(objects_dict)`, Keras methods such as
`tf.keras.models.load_model` or `tf.keras.models.model_from_config` will be
able to deserialize any custom object referenced by a saved config (e.g. a
custom layer or metric).

#### Example:

Consider a custom regularizer `my_regularizer`:

    
    layer = Dense(3, kernel_regularizer=my_regularizer)
    config = layer.get_config()  # Config contains a reference to `my_regularizer`
    ...
    # Later:
    with custom_object_scope({'my_regularizer': my_regularizer}):
      layer = Dense.from_config(config)
    
| Arguments  
---  
`*args` |  Dictionary or dictionaries of `{name: object}` pairs.   
## Methods

### `__enter__`

View source

    
    __enter__()
    
### `__exit__`

View source

    
    __exit__(
        *args, **kwargs
    )
    
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/utils/CustomObjectScope

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

