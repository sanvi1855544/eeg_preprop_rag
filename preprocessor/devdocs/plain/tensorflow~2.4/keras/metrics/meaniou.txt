# tf.keras.metrics.MeanIoU

View source on GitHub  Computes the mean Intersection-Over-Union metric.
Inherits From: `Metric`, `Layer`, `Module`

#### View aliases

Main aliases `tf.metrics.MeanIoU` Compat aliases for migration See Migration
guide for more details. `tf.compat.v1.keras.metrics.MeanIoU`

    
    tf.keras.metrics.MeanIoU(
        num_classes, name=None, dtype=None
    )
    
Mean Intersection-Over-Union is a common evaluation metric for semantic image segmentation, which first computes the IOU for each semantic class and then computes the average over classes. IOU is defined as follows: IOU = true_positive / (true_positive + false_positive + false_negative). The predictions are accumulated in a confusion matrix, weighted by `sample_weight` and the metric is then calculated from it. If `sample_weight` is `None`, weights default to 1. Use `sample_weight` of 0 to mask values. | Args  
---  
`num_classes` |  The possible number of labels the prediction task can have. This value must be provided, since a confusion matrix of dimension = [num_classes, num_classes] will be allocated.   
`name` |  (Optional) string name of the metric instance.   
`dtype` |  (Optional) data type of the metric result.   
#### Standalone usage:

    
    # cm = [[1, 1],
    #        [1, 1]]
    # sum_row = [2, 2], sum_col = [2, 2], true_positives = [1, 1]
    # iou = true_positives / (sum_row + sum_col - true_positives))
    # result = (1 / (2 + 2 - 1) + 1 / (2 + 2 - 1)) / 2 = 0.33
    m = tf.keras.metrics.MeanIoU(num_classes=2)
    m.update_state([0, 0, 1, 1], [0, 1, 0, 1])
    m.result().numpy()
    0.33333334
    
    
    m.reset_states()
    m.update_state([0, 0, 1, 1], [0, 1, 0, 1],
                   sample_weight=[0.3, 0.3, 0.3, 0.1])
    m.result().numpy()
    0.23809525
    
Usage with `compile()` API:

    
    model.compile(
      optimizer='sgd',
      loss='mse',
      metrics=[tf.keras.metrics.MeanIoU(num_classes=2)])
    
## Methods

### `reset_states`

View source

    
    reset_states()
    
Resets all of the metric state variables.

This function is called between epochs/steps, when a metric is evaluated
during training.

### `result`

View source

    
    result()
    
Compute the mean intersection-over-union via the confusion matrix.

### `update_state`

View source

    
    update_state(
        y_true, y_pred, sample_weight=None
    )
    
Accumulates the confusion matrix statistics.

Args  
---  
`y_true` |  The ground truth values.   
`y_pred` |  The predicted values.   
`sample_weight` |  Optional weighting of each example. Defaults to 1. Can be a `Tensor` whose rank is either 0, or the same rank as `y_true`, and must be broadcastable to `y_true`.   
Returns  
---  
Update op.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/keras/metrics/MeanIoU

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

