# tf.raw_ops.BatchNormWithGlobalNormalization

Batch normalization.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.BatchNormWithGlobalNormalization`

    
    tf.raw_ops.BatchNormWithGlobalNormalization(
        t, m, v, beta, gamma, variance_epsilon, scale_after_normalization, name=None
    )
    
This op is deprecated. Prefer `tf.nn.batch_normalization`.

Args  
---  
`t` |  A `Tensor`. Must be one of the following types: `float32`, `float64`, `int32`, `uint8`, `int16`, `int8`, `complex64`, `int64`, `qint8`, `quint8`, `qint32`, `bfloat16`, `uint16`, `complex128`, `half`, `uint32`, `uint64`. A 4D input Tensor.   
`m` |  A `Tensor`. Must have the same type as `t`. A 1D mean Tensor with size matching the last dimension of t. This is the first output from tf.nn.moments, or a saved moving average thereof.   
`v` |  A `Tensor`. Must have the same type as `t`. A 1D variance Tensor with size matching the last dimension of t. This is the second output from tf.nn.moments, or a saved moving average thereof.   
`beta` |  A `Tensor`. Must have the same type as `t`. A 1D beta Tensor with size matching the last dimension of t. An offset to be added to the normalized tensor.   
`gamma` |  A `Tensor`. Must have the same type as `t`. A 1D gamma Tensor with size matching the last dimension of t. If "scale_after_normalization" is true, this tensor will be multiplied with the normalized tensor.   
`variance_epsilon` |  A `float`. A small float number to avoid dividing by 0.   
`scale_after_normalization` |  A `bool`. A bool indicating whether the resulted tensor needs to be multiplied with gamma.   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor`. Has the same type as `t`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/BatchNormWithGlobalNormalization

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

