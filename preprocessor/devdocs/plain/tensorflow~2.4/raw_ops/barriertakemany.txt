# tf.raw_ops.BarrierTakeMany

Takes the given number of completed elements from a barrier.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.BarrierTakeMany`

    
    tf.raw_ops.BarrierTakeMany(
        handle, num_elements, component_types, allow_small_batch=False,
        wait_for_incomplete=False, timeout_ms=-1, name=None
    )
    
This operation concatenates completed-element component tensors along the 0th
dimension to make a single component tensor.

Elements come out of the barrier when they are complete, and in the order in
which they were placed into the barrier. The indices output provides
information about the batch in which each element was originally inserted into
the barrier.

Args  
---  
`handle` |  A `Tensor` of type mutable `string`. The handle to a barrier.   
`num_elements` |  A `Tensor` of type `int32`. A single-element tensor containing the number of elements to take.   
`component_types` |  A list of `tf.DTypes` that has length `>= 1`. The type of each component in a value.   
`allow_small_batch` |  An optional `bool`. Defaults to `False`. Allow to return less than num_elements items if barrier is already closed.   
`wait_for_incomplete` |  An optional `bool`. Defaults to `False`.   
`timeout_ms` |  An optional `int`. Defaults to `-1`. If the queue is empty, this operation will block for up to timeout_ms milliseconds. Note: This option is not supported yet.   
`name` |  A name for the operation (optional).   
Returns  
---  
A tuple of `Tensor` objects (indices, keys, values).  
`indices` |  A `Tensor` of type `int64`.   
`keys` |  A `Tensor` of type `string`.   
`values` |  A list of `Tensor` objects of type `component_types`.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/BarrierTakeMany

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

