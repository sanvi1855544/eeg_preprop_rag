# tf.raw_ops.StatelessRandomGetKeyCounterAlg

Picks the best algorithm based on device, and scrambles seed into key and
counter.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.StatelessRandomGetKeyCounterAlg`

    
    tf.raw_ops.StatelessRandomGetKeyCounterAlg(
        seed, name=None
    )
    
This op picks the best counter-based RNG algorithm based on device, and
scrambles a shape-[2] seed into a key and a counter, both needed by the
counter-based algorithm. The scrambling is opaque but approximately satisfies
the property that different seed results in different key/counter pair (which
will in turn result in different random numbers).

Args  
---  
`seed` |  A `Tensor`. Must be one of the following types: `int32`, `int64`. 2 seeds (shape [2]).   
`name` |  A name for the operation (optional).   
Returns  
---  
A tuple of `Tensor` objects (key, counter, alg).  
`key` |  A `Tensor` of type `uint64`.   
`counter` |  A `Tensor` of type `uint64`.   
`alg` |  A `Tensor` of type `int32`.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/StatelessRandomGetKeyCounterAlg

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

