# tf.raw_ops.SparseTensorDenseMatMul

Multiply SparseTensor (of rank 2) "A" by dense matrix "B".

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.SparseTensorDenseMatMul`

    
    tf.raw_ops.SparseTensorDenseMatMul(
        a_indices, a_values, a_shape, b, adjoint_a=False, adjoint_b=False, name=None
    )
    
No validity checking is performed on the indices of A. However, the following
input format is recommended for optimal behavior:

if adjoint_a == false: A should be sorted in lexicographically increasing
order. Use SparseReorder if you're not sure. if adjoint_a == true: A should be
sorted in order of increasing dimension 1 (i.e., "column major" order instead
of "row major" order).

Args  
---  
`a_indices` |  A `Tensor`. Must be one of the following types: `int32`, `int64`. 2-D. The `indices` of the `SparseTensor`, size `[nnz, 2]` Matrix.   
`a_values` |  A `Tensor`. 1-D. The `values` of the `SparseTensor`, size `[nnz]` Vector.   
`a_shape` |  A `Tensor` of type `int64`. 1-D. The `shape` of the `SparseTensor`, size `[2]` Vector.   
`b` |  A `Tensor`. Must have the same type as `a_values`. 2-D. A dense Matrix.   
`adjoint_a` |  An optional `bool`. Defaults to `False`. Use the adjoint of A in the matrix multiply. If A is complex, this is transpose(conj(A)). Otherwise it's transpose(A).   
`adjoint_b` |  An optional `bool`. Defaults to `False`. Use the adjoint of B in the matrix multiply. If B is complex, this is transpose(conj(B)). Otherwise it's transpose(B).   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor`. Has the same type as `a_values`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/SparseTensorDenseMatMul

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

