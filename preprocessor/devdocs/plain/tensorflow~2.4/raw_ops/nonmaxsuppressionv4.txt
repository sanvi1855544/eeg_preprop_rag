# tf.raw_ops.NonMaxSuppressionV4

Greedily selects a subset of bounding boxes in descending order of score,

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.NonMaxSuppressionV4`

    
    tf.raw_ops.NonMaxSuppressionV4(
        boxes, scores, max_output_size, iou_threshold, score_threshold,
        pad_to_max_output_size=False, name=None
    )
    
pruning away boxes that have high intersection-over-union (IOU) overlap with
previously selected boxes. Bounding boxes with score less than
`score_threshold` are removed. Bounding boxes are supplied as [y1, x1, y2,
x2], where (y1, x1) and (y2, x2) are the coordinates of any diagonal pair of
box corners and the coordinates can be provided as normalized (i.e., lying in
the interval [0, 1]) or absolute. Note that this algorithm is agnostic to
where the origin is in the coordinate system and more generally is invariant
to orthogonal transformations and translations of the coordinate system; thus
translating or reflections of the coordinate system result in the same boxes
being selected by the algorithm. The output of this operation is a set of
integers indexing into the input collection of bounding boxes representing the
selected boxes. The bounding box coordinates corresponding to the selected
indices can then be obtained using the `tf.gather operation`. For example:
selected_indices = tf.image.non_max_suppression_v2( boxes, scores,
max_output_size, iou_threshold, score_threshold) selected_boxes =
tf.gather(boxes, selected_indices)

Args  
---  
`boxes` |  A `Tensor`. Must be one of the following types: `half`, `float32`. A 2-D float tensor of shape `[num_boxes, 4]`.   
`scores` |  A `Tensor`. Must have the same type as `boxes`. A 1-D float tensor of shape `[num_boxes]` representing a single score corresponding to each box (each row of boxes).   
`max_output_size` |  A `Tensor` of type `int32`. A scalar integer tensor representing the maximum number of boxes to be selected by non max suppression.   
`iou_threshold` |  A `Tensor`. Must be one of the following types: `half`, `float32`. A 0-D float tensor representing the threshold for deciding whether boxes overlap too much with respect to IOU.   
`score_threshold` |  A `Tensor`. Must have the same type as `iou_threshold`. A 0-D float tensor representing the threshold for deciding when to remove boxes based on score.   
`pad_to_max_output_size` |  An optional `bool`. Defaults to `False`. If true, the output `selected_indices` is padded to be of length `max_output_size`. Defaults to false.   
`name` |  A name for the operation (optional).   
Returns  
---  
A tuple of `Tensor` objects (selected_indices, valid_outputs).  
`selected_indices` |  A `Tensor` of type `int32`.   
`valid_outputs` |  A `Tensor` of type `int32`.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/NonMaxSuppressionV4

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

