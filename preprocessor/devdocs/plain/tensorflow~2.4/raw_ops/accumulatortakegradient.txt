# tf.raw_ops.AccumulatorTakeGradient

Extracts the average gradient in the given ConditionalAccumulator.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.AccumulatorTakeGradient`

    
    tf.raw_ops.AccumulatorTakeGradient(
        handle, num_required, dtype, name=None
    )
    
The op blocks until sufficient (i.e., more than num_required) gradients have
been accumulated. If the accumulator has already aggregated more than
num_required gradients, it returns the average of the accumulated gradients.
Also automatically increments the recorded global_step in the accumulator by
1, and resets the aggregate to 0.

Args  
---  
`handle` |  A `Tensor` of type mutable `string`. The handle to an accumulator.   
`num_required` |  A `Tensor` of type `int32`. Number of gradients required before we return an aggregate.   
`dtype` |  A `tf.DType` from: `tf.float32, tf.float64, tf.int32, tf.uint8, tf.int16, tf.int8, tf.complex64, tf.int64, tf.qint8, tf.quint8, tf.qint32, tf.bfloat16, tf.uint16, tf.complex128, tf.half, tf.uint32, tf.uint64`. The data type of accumulated gradients. Needs to correspond to the type of the accumulator.   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor` of type `dtype`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/AccumulatorTakeGradient

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

