# tf.raw_ops.RestoreV2

Restores tensors from a V2 checkpoint.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.RestoreV2`

    
    tf.raw_ops.RestoreV2(
        prefix, tensor_names, shape_and_slices, dtypes, name=None
    )
    
For backward compatibility with the V1 format, this Op currently allows
restoring from a V1 checkpoint as well:

  * This Op first attempts to find the V2 index file pointed to by "prefix", and if found proceed to read it as a V2 checkpoint;
  * Otherwise the V1 read path is invoked. Relying on this behavior is not recommended, as the ability to fall back to read V1 might be deprecated and eventually removed.

By default, restores the named tensors in full. If the caller wishes to
restore specific slices of stored tensors, "shape_and_slices" should be non-
empty strings and correspondingly well-formed.

Callers must ensure all the named tensors are indeed stored in the checkpoint.

Args  
---  
`prefix` |  A `Tensor` of type `string`. Must have a single element. The prefix of a V2 checkpoint.   
`tensor_names` |  A `Tensor` of type `string`. shape {N}. The names of the tensors to be restored.   
`shape_and_slices` |  A `Tensor` of type `string`. shape {N}. The slice specs of the tensors to be restored. Empty strings indicate that they are non-partitioned tensors.   
`dtypes` |  A list of `tf.DTypes` that has length `>= 1`. shape {N}. The list of expected dtype for the tensors. Must match those stored in the checkpoint.   
`name` |  A name for the operation (optional).   
Returns  
---  
A list of `Tensor` objects of type `dtypes`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/RestoreV2

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

