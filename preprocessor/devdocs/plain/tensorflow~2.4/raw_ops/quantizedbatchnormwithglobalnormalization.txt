# tf.raw_ops.QuantizedBatchNormWithGlobalNormalization

Quantized Batch normalization.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.QuantizedBatchNormWithGlobalNormalization`

    
    tf.raw_ops.QuantizedBatchNormWithGlobalNormalization(
        t, t_min, t_max, m, m_min, m_max, v, v_min, v_max, beta, beta_min, beta_max,
        gamma, gamma_min, gamma_max, out_type, variance_epsilon,
        scale_after_normalization, name=None
    )
    
This op is deprecated and will be removed in the future. Prefer
`tf.nn.batch_normalization`.

Args  
---  
`t` |  A `Tensor`. Must be one of the following types: `qint8`, `quint8`, `qint32`, `qint16`, `quint16`. A 4D input Tensor.   
`t_min` |  A `Tensor` of type `float32`. The value represented by the lowest quantized input.   
`t_max` |  A `Tensor` of type `float32`. The value represented by the highest quantized input.   
`m` |  A `Tensor`. Must have the same type as `t`. A 1D mean Tensor with size matching the last dimension of t. This is the first output from tf.nn.moments, or a saved moving average thereof.   
`m_min` |  A `Tensor` of type `float32`. The value represented by the lowest quantized mean.   
`m_max` |  A `Tensor` of type `float32`. The value represented by the highest quantized mean.   
`v` |  A `Tensor`. Must have the same type as `t`. A 1D variance Tensor with size matching the last dimension of t. This is the second output from tf.nn.moments, or a saved moving average thereof.   
`v_min` |  A `Tensor` of type `float32`. The value represented by the lowest quantized variance.   
`v_max` |  A `Tensor` of type `float32`. The value represented by the highest quantized variance.   
`beta` |  A `Tensor`. Must have the same type as `t`. A 1D beta Tensor with size matching the last dimension of t. An offset to be added to the normalized tensor.   
`beta_min` |  A `Tensor` of type `float32`. The value represented by the lowest quantized offset.   
`beta_max` |  A `Tensor` of type `float32`. The value represented by the highest quantized offset.   
`gamma` |  A `Tensor`. Must have the same type as `t`. A 1D gamma Tensor with size matching the last dimension of t. If "scale_after_normalization" is true, this tensor will be multiplied with the normalized tensor.   
`gamma_min` |  A `Tensor` of type `float32`. The value represented by the lowest quantized gamma.   
`gamma_max` |  A `Tensor` of type `float32`. The value represented by the highest quantized gamma.   
`out_type` |  A `tf.DType` from: `tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16`.   
`variance_epsilon` |  A `float`. A small float number to avoid dividing by 0.   
`scale_after_normalization` |  A `bool`. A bool indicating whether the resulted tensor needs to be multiplied with gamma.   
`name` |  A name for the operation (optional).   
Returns  
---  
A tuple of `Tensor` objects (result, result_min, result_max).  
`result` |  A `Tensor` of type `out_type`.   
`result_min` |  A `Tensor` of type `float32`.   
`result_max` |  A `Tensor` of type `float32`.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/QuantizedBatchNormWithGlobalNormalization

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

