# tf.raw_ops.ParallelConcat

Concatenates a list of `N` tensors along the first dimension.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.ParallelConcat`

    
    tf.raw_ops.ParallelConcat(
        values, shape, name=None
    )
    
The input tensors are all required to have size 1 in the first dimension.

#### For example:

    
    # 'x' is [[1, 4]]
    # 'y' is [[2, 5]]
    # 'z' is [[3, 6]]
    parallel_concat([x, y, z]) => [[1, 4], [2, 5], [3, 6]]  # Pack along first dim.
    
The difference between concat and parallel_concat is that concat requires all
of the inputs be computed before the operation will begin but doesn't require
that the input shapes be known during graph construction. Parallel concat will
copy pieces of the input into the output as they become available, in some
situations this can provide a performance benefit.

Args  
---  
`values` |  A list of at least 1 `Tensor` objects with the same type. Tensors to be concatenated. All must have size 1 in the first dimension and same shape.   
`shape` |  A `tf.TensorShape` or list of `ints`. the final shape of the result; should be equal to the shapes of any input but with the number of input values in the first dimension.   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor`. Has the same type as `values`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/ParallelConcat

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

