# tf.raw_ops.SerializeManySparse

Serialize an `N`-minibatch `SparseTensor` into an `[N, 3]` `Tensor` object.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.SerializeManySparse`

    
    tf.raw_ops.SerializeManySparse(
        sparse_indices, sparse_values, sparse_shape, out_type=tf.dtypes.string,
        name=None
    )
    
The `SparseTensor` must have rank `R` greater than 1, and the first dimension
is treated as the minibatch dimension. Elements of the `SparseTensor` must be
sorted in increasing order of this first dimension. The serialized
`SparseTensor` objects going into each row of `serialized_sparse` will have
rank `R-1`.

The minibatch size `N` is extracted from `sparse_shape[0]`.

Args  
---  
`sparse_indices` |  A `Tensor` of type `int64`. 2-D. The `indices` of the minibatch `SparseTensor`.   
`sparse_values` |  A `Tensor`. 1-D. The `values` of the minibatch `SparseTensor`.   
`sparse_shape` |  A `Tensor` of type `int64`. 1-D. The `shape` of the minibatch `SparseTensor`.   
`out_type` |  An optional `tf.DType` from: `tf.string, tf.variant`. Defaults to `tf.string`. The `dtype` to use for serialization; the supported types are `string` (default) and `variant`.   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor` of type `out_type`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/SerializeManySparse

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

