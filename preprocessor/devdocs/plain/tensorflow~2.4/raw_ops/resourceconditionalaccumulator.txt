# tf.raw_ops.ResourceConditionalAccumulator

A conditional accumulator for aggregating gradients.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.ResourceConditionalAccumulator`

    
    tf.raw_ops.ResourceConditionalAccumulator(
        dtype, shape, container='', shared_name='',
        reduction_type='MEAN', name=None
    )
    
The accumulator accepts gradients marked with local_step greater or equal to
the most recent global_step known to the accumulator. The average can be
extracted from the accumulator, provided sufficient gradients have been
accumulated. Extracting the average automatically resets the aggregate to 0,
and increments the global_step recorded by the accumulator. This is a resource
version of ConditionalAccumulator that will work in TF2.0 with tf.cond version
2.

Args  
---  
`dtype` |  A `tf.DType` from: `tf.float32, tf.float64, tf.int32, tf.uint8, tf.int16, tf.int8, tf.complex64, tf.int64, tf.qint8, tf.quint8, tf.qint32, tf.bfloat16, tf.uint16, tf.complex128, tf.half, tf.uint32, tf.uint64`. The type of the value being accumulated.   
`shape` |  A `tf.TensorShape` or list of `ints`. The shape of the values, can be [], in which case shape is unknown.   
`container` |  An optional `string`. Defaults to `""`. If non-empty, this accumulator is placed in the given container. Otherwise, a default container is used.   
`shared_name` |  An optional `string`. Defaults to `""`. If non-empty, this accumulator will be shared under the given name across multiple sessions.   
`reduction_type` |  An optional `string` from: `"MEAN", "SUM"`. Defaults to `"MEAN"`.   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor` of type `resource`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/ResourceConditionalAccumulator

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

