# tf.raw_ops.EnqueueTPUEmbeddingSparseBatch

An op that enqueues TPUEmbedding input indices from a SparseTensor.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.EnqueueTPUEmbeddingSparseBatch`

    
    tf.raw_ops.EnqueueTPUEmbeddingSparseBatch(
        sample_indices, embedding_indices, aggregation_weights, mode_override,
        device_ordinal=-1, combiners=[], name=None
    )
    
This Op eases the porting of code that uses embedding_lookup_sparse(),
although some Python preprocessing of the SparseTensor arguments to
embedding_lookup_sparse() is required to produce the arguments to this Op,
since only a single EnqueueTPUEmbeddingSparseBatch Op is allowed per training
step.

The tensors at corresponding positions in the three input lists must have the
same shape, i.e. rank 1 with dim_size() equal to the total number of lookups
into the table described by the corresponding table_id.

Args  
---  
`sample_indices` |  A list of at least 1 `Tensor` objects with the same type in: `int32`, `int64`. A list of rank 1 Tensors specifying the training example and feature to which the corresponding embedding_indices and aggregation_weights values belong. sample_indices[i] must equal b * nf + f, where nf is the number of features from the corresponding table, f is in [0, nf), and b is in [0, batch size).   
`embedding_indices` |  A list with the same length as `sample_indices` of `Tensor` objects with the same type in: `int32`, `int64`. A list of rank 1 Tensors, indices into the embedding tables.   
`aggregation_weights` |  A list with the same length as `sample_indices` of `Tensor` objects with the same type in: `float32`, `float64`. A list of rank 1 Tensors containing per sample -- i.e. per (training example, feature) -- aggregation weights.   
`mode_override` |  A `Tensor` of type `string`. A string input that overrides the mode specified in the TPUEmbeddingConfiguration. Supported values are {'unspecified', 'inference', 'training', 'backward_pass_only'}. When set to 'unspecified', the mode set in TPUEmbeddingConfiguration is used, otherwise mode_override is used.   
`device_ordinal` |  An optional `int`. Defaults to `-1`. The TPU device to use. Should be >= 0 and less than the number of TPU cores in the task on which the node is placed.   
`combiners` |  An optional list of `strings`. Defaults to `[]`. A list of string scalars, one for each embedding table that specify how to normalize the embedding activations after weighted summation. Supported combiners are 'mean', 'sum', or 'sqrtn'. It is invalid to have the sum of the weights be 0 for 'mean' or the sum of the squared weights be 0 for 'sqrtn'. If combiners isn't passed, the default is to use 'sum' for all tables.   
`name` |  A name for the operation (optional).   
Returns  
---  
The created Operation.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/EnqueueTPUEmbeddingSparseBatch

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

