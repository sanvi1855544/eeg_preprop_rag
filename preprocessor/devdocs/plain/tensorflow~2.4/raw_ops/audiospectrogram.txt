# tf.raw_ops.AudioSpectrogram

Produces a visualization of audio data over time.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.AudioSpectrogram`

    
    tf.raw_ops.AudioSpectrogram(
        input, window_size, stride, magnitude_squared=False, name=None
    )
    
Spectrograms are a standard way of representing audio information as a series
of slices of frequency information, one slice for each window of time. By
joining these together into a sequence, they form a distinctive fingerprint of
the sound over time.

This op expects to receive audio data as an input, stored as floats in the
range -1 to 1, together with a window width in samples, and a stride
specifying how far to move the window between slices. From this it generates a
three dimensional output. The first dimension is for the channels in the
input, so a stereo audio input would have two here for example. The second
dimension is time, with successive frequency slices. The third dimension has
an amplitude value for each frequency during that time slice.

This means the layout when converted and saved as an image is rotated 90
degrees clockwise from a typical spectrogram. Time is descending down the Y
axis, and the frequency decreases from left to right.

Each value in the result represents the square root of the sum of the real and
imaginary parts of an FFT on the current window of samples. In this way, the
lowest dimension represents the power of each frequency in the current window,
and adjacent windows are concatenated in the next dimension.

To get a more intuitive and visual look at what this operation does, you can
run tensorflow/examples/wav_to_spectrogram to read in an audio file and save
out the resulting spectrogram as a PNG image.

Args  
---  
`input` |  A `Tensor` of type `float32`. Float representation of audio data.   
`window_size` |  An `int`. How wide the input window is in samples. For the highest efficiency this should be a power of two, but other values are accepted.   
`stride` |  An `int`. How widely apart the center of adjacent sample windows should be.   
`magnitude_squared` |  An optional `bool`. Defaults to `False`. Whether to return the squared magnitude or just the magnitude. Using squared magnitude can avoid extra calculations.   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor` of type `float32`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/AudioSpectrogram

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

