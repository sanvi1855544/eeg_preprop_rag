# tf.raw_ops.FusedBatchNormGradV3

Gradient for batch normalization.

#### View aliases

Compat aliases for migration

See Migration guide for more details.

`tf.compat.v1.raw_ops.FusedBatchNormGradV3`

    
    tf.raw_ops.FusedBatchNormGradV3(
        y_backprop, x, scale, reserve_space_1, reserve_space_2, reserve_space_3,
        epsilon=0.0001, data_format='NHWC', is_training=True, name=None
    )
    
Note that the size of 4D Tensors are defined by either "NHWC" or "NCHW". The
size of 1D Tensors matches the dimension C of the 4D Tensors.

Args  
---  
`y_backprop` |  A `Tensor`. Must be one of the following types: `half`, `bfloat16`, `float32`. A 4D Tensor for the gradient with respect to y.   
`x` |  A `Tensor`. Must have the same type as `y_backprop`. A 4D Tensor for input data.   
`scale` |  A `Tensor` of type `float32`. A 1D Tensor for scaling factor, to scale the normalized x.   
`reserve_space_1` |  A `Tensor`. Must be one of the following types: `float32`. When is_training is True, a 1D Tensor for the computed batch mean to be reused in gradient computation. When is_training is False, a 1D Tensor for the population mean to be reused in both 1st and 2nd order gradient computation.   
`reserve_space_2` |  A `Tensor`. Must have the same type as `reserve_space_1`. When is_training is True, a 1D Tensor for the computed batch variance (inverted variance in the cuDNN case) to be reused in gradient computation. When is_training is False, a 1D Tensor for the population variance to be reused in both 1st and 2nd order gradient computation.   
`reserve_space_3` |  A `Tensor`. Must have the same type as `reserve_space_1`. When is_training is True, a 1D Tensor for some intermediate results to be reused in gradient computation. When is_training is False, a dummy empty Tensor will be created.   
`epsilon` |  An optional `float`. Defaults to `0.0001`. A small float number added to the variance of x.   
`data_format` |  An optional `string` from: `"NHWC", "NCHW", "NDHWC", "NCDHW"`. Defaults to `"NHWC"`. The data format for y_backprop, x, x_backprop. Either "NHWC" (default) or "NCHW".   
`is_training` |  An optional `bool`. Defaults to `True`. A bool value to indicate the operation is for training (default) or inference.   
`name` |  A name for the operation (optional).   
Returns  
---  
A tuple of `Tensor` objects (x_backprop, scale_backprop, offset_backprop,
reserve_space_4, reserve_space_5).  
`x_backprop` |  A `Tensor`. Has the same type as `y_backprop`.   
`scale_backprop` |  A `Tensor`. Has the same type as `reserve_space_1`.   
`offset_backprop` |  A `Tensor`. Has the same type as `reserve_space_1`.   
`reserve_space_4` |  A `Tensor`. Has the same type as `reserve_space_1`.   
`reserve_space_5` |  A `Tensor`. Has the same type as `reserve_space_1`.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/raw_ops/FusedBatchNormGradV3

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

