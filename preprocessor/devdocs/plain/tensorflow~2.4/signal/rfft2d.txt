# tf.signal.rfft2d

View source on GitHub  2D real-valued fast Fourier transform.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.signal.rfft2d`, `tf.compat.v1.spectral.rfft2d`

    
    tf.signal.rfft2d(
        input_tensor, fft_length=None, name=None
    )
    
Computes the 2-dimensional discrete Fourier transform of a real-valued signal over the inner-most 2 dimensions of `input`. Since the DFT of a real signal is Hermitian-symmetric, `RFFT2D` only returns the `fft_length / 2 + 1` unique components of the FFT for the inner-most dimension of `output`: the zero-frequency term, followed by the `fft_length / 2` positive-frequency terms. Along each axis `RFFT2D` is computed on, if `fft_length` is smaller than the corresponding dimension of `input`, the dimension is cropped. If it is larger, the dimension is padded with zeros. | Args  
---  
`input` |  A `Tensor`. Must be one of the following types: `float32`, `float64`. A float32 tensor.   
`fft_length` |  A `Tensor` of type `int32`. An int32 tensor of shape [2]. The FFT length for each dimension.   
`Tcomplex` |  An optional `tf.DType` from: `tf.complex64, tf.complex128`. Defaults to `tf.complex64`.   
`name` |  A name for the operation (optional).   
Returns  
---  
A `Tensor` of type `Tcomplex`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/signal/rfft2d

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

