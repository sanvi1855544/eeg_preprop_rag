# tf.data.experimental.ignore_errors

View source on GitHub  Creates a `Dataset` from another `Dataset` and silently
ignores any errors.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.data.experimental.ignore_errors`

    
    tf.data.experimental.ignore_errors(
        log_warning=False
    )
    
Use this transformation to produce a dataset that contains the same elements
as the input, but silently drops any elements that caused an error. For
example:

    
    dataset = tf.data.Dataset.from_tensor_slices([1., 2., 0., 4.])
    
    # Computing `tf.debugging.check_numerics(1. / 0.)` will raise an
    InvalidArgumentError.
    dataset = dataset.map(lambda x: tf.debugging.check_numerics(1. / x, "error"))
    
    # Using `ignore_errors()` will drop the element that causes an error.
    dataset =
        dataset.apply(tf.data.experimental.ignore_errors())  # ==> {1., 0.5, 0.2}
    
Args: log_warning: (Optional.) A 'tf.bool' scalar indicating whether ignored errors should be logged to stderr. Defaults to 'False'. | Returns  
---  
A `Dataset` transformation function, which can be passed to
`tf.data.Dataset.apply`.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/data/experimental/ignore_errors

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

