# tf.data.experimental.cardinality

View source on GitHub  Returns the cardinality of `dataset`, if known.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.data.experimental.cardinality`

    
    tf.data.experimental.cardinality(
        dataset
    )
    
The operation returns the cardinality of `dataset`. The operation may return
`tf.data.experimental.INFINITE_CARDINALITY` if `dataset` contains an infinite
number of elements or `tf.data.experimental.UNKNOWN_CARDINALITY` if the
analysis fails to determine the number of elements in `dataset` (e.g. when the
dataset source is a file).

    
    dataset = tf.data.Dataset.range(42)
    print(tf.data.experimental.cardinality(dataset).numpy())
    42
    dataset = dataset.repeat()
    cardinality = tf.data.experimental.cardinality(dataset)
    print((cardinality == tf.data.experimental.INFINITE_CARDINALITY).numpy())
    True
    dataset = dataset.filter(lambda x: True)
    cardinality = tf.data.experimental.cardinality(dataset)
    print((cardinality == tf.data.experimental.UNKNOWN_CARDINALITY).numpy())
    True
    
| Args  
---  
`dataset` |  A `tf.data.Dataset` for which to determine cardinality.   
Returns  
---  
A scalar `tf.int64` `Tensor` representing the cardinality of `dataset`. If the
cardinality is infinite or unknown, the operation returns the named constant
`INFINITE_CARDINALITY` and `UNKNOWN_CARDINALITY` respectively.  
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/data/experimental/cardinality

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

