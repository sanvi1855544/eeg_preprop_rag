# Module: tf.feature_column

Public API for tf.feature_column namespace.

## Functions

`bucketized_column(...)`: Represents discretized dense input bucketed by
`boundaries`.

`categorical_column_with_hash_bucket(...)`: Represents sparse feature where
ids are set by hashing.

`categorical_column_with_identity(...)`: A `CategoricalColumn` that returns
identity values.

`categorical_column_with_vocabulary_file(...)`: A `CategoricalColumn` with a
vocabulary file.

`categorical_column_with_vocabulary_list(...)`: A `CategoricalColumn` with in-
memory vocabulary.

`crossed_column(...)`: Returns a column for performing crosses of categorical
features.

`embedding_column(...)`: `DenseColumn` that converts from sparse, categorical
input.

`indicator_column(...)`: Represents multi-hot representation of given
categorical column.

`make_parse_example_spec(...)`: Creates parsing spec dictionary from input
feature_columns.

`numeric_column(...)`: Represents real valued or numerical features.

`sequence_categorical_column_with_hash_bucket(...)`: A sequence of categorical
terms where ids are set by hashing.

`sequence_categorical_column_with_identity(...)`: Returns a feature column
that represents sequences of integers.

`sequence_categorical_column_with_vocabulary_file(...)`: A sequence of
categorical terms where ids use a vocabulary file.

`sequence_categorical_column_with_vocabulary_list(...)`: A sequence of
categorical terms where ids use an in-memory list.

`sequence_numeric_column(...)`: Returns a feature column that represents
sequences of numeric data.

`shared_embeddings(...)`: List of dense columns that convert from sparse,
categorical input.

`weighted_categorical_column(...)`: Applies weight values to a
`CategoricalColumn`.

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/feature_column

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

