# tf.sparse.reorder

View source on GitHub  Reorders a `SparseTensor` into the canonical, row-major
ordering.

#### View aliases

Compat aliases for migration See Migration guide for more details.
`tf.compat.v1.sparse.reorder`, `tf.compat.v1.sparse_reorder`

    
    tf.sparse.reorder(
        sp_input, name=None
    )
    
Note that by convention, all sparse ops preserve the canonical ordering along
increasing dimension number. The only time ordering can be violated is during
manual manipulation of the indices and values to add entries. Reordering does
not affect the shape of the `SparseTensor`. For example, if `sp_input` has
shape `[4, 5]` and `indices` / `values`:

    
    [0, 3]: b
    [0, 1]: a
    [3, 1]: d
    [2, 0]: c
    
then the output will be a `SparseTensor` of shape `[4, 5]` and `indices` /
`values`:

    
    [0, 1]: a
    [0, 3]: b
    [2, 0]: c
    [3, 1]: d
    
| Args  
---  
`sp_input` |  The input `SparseTensor`.   
`name` |  A name prefix for the returned tensors (optional)   
Returns  
---  
A `SparseTensor` with the same shape and non-empty values, but in canonical
ordering.  
Raises  
---  
`TypeError` |  If `sp_input` is not a `SparseTensor`.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/sparse/reorder

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

