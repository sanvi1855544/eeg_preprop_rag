# Module: tf.signal

Signal processing operations.

See the tf.signal guide.

## Functions

`dct(...)`: Computes the 1D [Discrete Cosine Transform (DCT)][dct] of `input`.

`fft(...)`: Fast Fourier transform.

`fft2d(...)`: 2D fast Fourier transform.

`fft3d(...)`: 3D fast Fourier transform.

`fftshift(...)`: Shift the zero-frequency component to the center of the
spectrum.

`frame(...)`: Expands `signal`'s `axis` dimension into frames of
`frame_length`.

`hamming_window(...)`: Generate a Hamming window.

`hann_window(...)`: Generate a Hann window.

`idct(...)`: Computes the 1D [Inverse Discrete Cosine Transform (DCT)][idct]
of `input`.

`ifft(...)`: Inverse fast Fourier transform.

`ifft2d(...)`: Inverse 2D fast Fourier transform.

`ifft3d(...)`: Inverse 3D fast Fourier transform.

`ifftshift(...)`: The inverse of fftshift.

`inverse_mdct(...)`: Computes the inverse modified DCT of `mdcts`.

`inverse_stft(...)`: Computes the inverse Short-time Fourier Transform of
`stfts`.

`inverse_stft_window_fn(...)`: Generates a window function that can be used in
`inverse_stft`.

`irfft(...)`: Inverse real-valued fast Fourier transform.

`irfft2d(...)`: Inverse 2D real-valued fast Fourier transform.

`irfft3d(...)`: Inverse 3D real-valued fast Fourier transform.

`kaiser_bessel_derived_window(...)`: Generate a [Kaiser Bessel derived
window][kbd].

`kaiser_window(...)`: Generate a [Kaiser window][kaiser].

`linear_to_mel_weight_matrix(...)`: Returns a matrix to warp linear scale
spectrograms to the mel scale.

`mdct(...)`: Computes the [Modified Discrete Cosine Transform][mdct] of
`signals`.

`mfccs_from_log_mel_spectrograms(...)`: Computes MFCCs of
`log_mel_spectrograms`.

`overlap_and_add(...)`: Reconstructs a signal from a framed representation.

`rfft(...)`: Real-valued fast Fourier transform.

`rfft2d(...)`: 2D real-valued fast Fourier transform.

`rfft3d(...)`: 3D real-valued fast Fourier transform.

`stft(...)`: Computes the Short-time Fourier Transform of `signals`.

`vorbis_window(...)`: Generate a [Vorbis power complementary window][vorbis].

Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/signal

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

