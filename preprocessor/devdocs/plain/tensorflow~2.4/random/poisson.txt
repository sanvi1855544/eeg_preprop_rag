# tf.random.poisson

View source on GitHub  Draws `shape` samples from each of the given Poisson
distribution(s).

    
    tf.random.poisson(
        shape, lam, dtype=tf.dtypes.float32, seed=None, name=None
    )
    
`lam` is the rate parameter describing the distribution(s).

#### Example:

    
    samples = tf.random.poisson([10], [0.5, 1.5])
    # samples has shape [10, 2], where each slice [:, 0] and [:, 1] represents
    # the samples drawn from each distribution
    
    samples = tf.random.poisson([7, 5], [12.2, 3.3])
    # samples has shape [7, 5, 2], where each slice [:, :, 0] and [:, :, 1]
    # represents the 7x5 samples drawn from each of the two distributions
    
| Args  
---  
`shape` |  A 1-D integer Tensor or Python array. The shape of the output samples to be drawn per "rate"-parameterized distribution.   
`lam` |  A Tensor or Python value or N-D array of type `dtype`. `lam` provides the rate parameter(s) describing the poisson distribution(s) to sample.   
`dtype` |  The type of the output: `float16`, `float32`, `float64`, `int32` or `int64`.   
`seed` |  A Python integer. Used to create a random seed for the distributions. See `tf.random.set_seed` for behavior.   
`name` |  Optional name for the operation.   
Returns  
---  
`samples` |  a `Tensor` of shape `tf.concat([shape, tf.shape(lam)], axis=0)` with values of type `dtype`.   
Â© 2020 The TensorFlow Authors. All rights reserved.  
Licensed under the Creative Commons Attribution License 3.0.  
Code samples licensed under the Apache 2.0 License.  
https://www.tensorflow.org/versions/r2.4/api_docs/python/tf/random/poisson

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

