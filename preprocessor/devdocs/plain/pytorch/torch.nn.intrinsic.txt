# torch.nn.intrinsic

This module implements the combined (fused) modules conv + relu which can be
then quantized.

## ConvBn1d

`class torch.nn.intrinsic.ConvBn1d(conv, bn)` [source]

    
This is a sequential container which calls the Conv 1d and Batch Norm 1d
modules. During quantization this will be replaced with the corresponding
fused module.

## ConvBn2d

`class torch.nn.intrinsic.ConvBn2d(conv, bn)` [source]

    
This is a sequential container which calls the Conv 2d and Batch Norm 2d
modules. During quantization this will be replaced with the corresponding
fused module.

## ConvBnReLU1d

`class torch.nn.intrinsic.ConvBnReLU1d(conv, bn, relu)` [source]

    
This is a sequential container which calls the Conv 1d, Batch Norm 1d, and
ReLU modules. During quantization this will be replaced with the corresponding
fused module.

## ConvBnReLU2d

`class torch.nn.intrinsic.ConvBnReLU2d(conv, bn, relu)` [source]

    
This is a sequential container which calls the Conv 2d, Batch Norm 2d, and
ReLU modules. During quantization this will be replaced with the corresponding
fused module.

## ConvReLU1d

`class torch.nn.intrinsic.ConvReLU1d(conv, relu)` [source]

    
This is a sequential container which calls the Conv1d and ReLU modules. During
quantization this will be replaced with the corresponding fused module.

## ConvReLU2d

`class torch.nn.intrinsic.ConvReLU2d(conv, relu)` [source]

    
This is a sequential container which calls the Conv2d and ReLU modules. During
quantization this will be replaced with the corresponding fused module.

Â© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/torch.nn.intrinsic.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

