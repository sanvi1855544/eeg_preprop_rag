# HingeEmbeddingLoss

`class torch.nn.HingeEmbeddingLoss(margin=1.0, size_average=None, reduce=None,
reduction='mean')` [source]

    
Measures the loss given an input tensor xx and a labels tensor yy (containing
1 or -1). This is usually used for measuring whether two inputs are similar or
dissimilar, e.g. using the L1 pairwise distance as xx , and is typically used
for learning nonlinear embeddings or semi-supervised learning.

The loss function for nn -th sample in the mini-batch is

ln={xn,ifyn=1,max⁡{0,Δ−xn},ifyn=−1,l_n = \begin{cases} x_n, & \text{if}\; y_n
= 1,\\\ \max \\{0, \Delta - x_n\\}, & \text{if}\; y_n = -1, \end{cases}

and the total loss functions is

ℓ(x,y)={mean⁡(L),if reduction=‘mean’;sum⁡(L),if reduction=‘sum’.\ell(x, y) =
\begin{cases} \operatorname{mean}(L), & \text{if reduction} =
\text{`mean';}\\\ \operatorname{sum}(L), & \text{if reduction} = \text{`sum'.}
\end{cases}

where L={l1,…,lN}⊤L = \\{l_1,\dots,l_N\\}^\top .

Parameters

    
  * margin (float, optional) – Has a default value of `1`.
  * size_average (bool, optional) – Deprecated (see `reduction`). By default, the losses are averaged over each loss element in the batch. Note that for some losses, there are multiple elements per sample. If the field `size_average` is set to `False`, the losses are instead summed for each minibatch. Ignored when `reduce` is `False`. Default: `True`
  * reduce (bool, optional) – Deprecated (see `reduction`). By default, the losses are averaged or summed over observations for each minibatch depending on `size_average`. When `reduce` is `False`, returns a loss per batch element instead and ignores `size_average`. Default: `True`
  * reduction (string, optional) – Specifies the reduction to apply to the output: `'none'` | `'mean'` | `'sum'`. `'none'`: no reduction will be applied, `'mean'`: the sum of the output will be divided by the number of elements in the output, `'sum'`: the output will be summed. Note: `size_average` and `reduce` are in the process of being deprecated, and in the meantime, specifying either of those two args will override `reduction`. Default: `'mean'`

Shape:

    
  * Input: (∗)(*) where ∗* means, any number of dimensions. The sum operation operates over all the elements.
  * Target: (∗)(*) , same shape as the input
  * Output: scalar. If `reduction` is `'none'`, then same shape as the input

© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.nn.HingeEmbeddingLoss.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

