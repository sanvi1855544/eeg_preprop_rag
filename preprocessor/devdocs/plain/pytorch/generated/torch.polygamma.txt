# torch.polygamma

`torch.polygamma(n, input, *, out=None) → Tensor`

    
Computes the nthn^{th} derivative of the digamma function on `input`. n≥0n
\geq 0 is called the order of the polygamma function.

ψ(n)(x)=d(n)dx(n)ψ(x)\psi^{(n)}(x) = \frac{d^{(n)}}{dx^{(n)}} \psi(x)

Note

This function is implemented only for nonnegative integers n≥0n \geq 0 .

Parameters

    
  * n (int) – the order of the polygamma function
  * input (Tensor) – the input tensor.

Keyword Arguments

    
out (Tensor, optional) – the output tensor.

Example::

    
    
    >>> a = torch.tensor([1, 0.5])
    >>> torch.polygamma(1, a)
    tensor([1.64493, 4.9348])
    >>> torch.polygamma(2, a)
    tensor([ -2.4041, -16.8288])
    >>> torch.polygamma(3, a)
    tensor([ 6.4939, 97.4091])
    >>> torch.polygamma(4, a)
    tensor([ -24.8863, -771.4742])
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.polygamma.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

