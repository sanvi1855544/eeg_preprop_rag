# torch.save

`torch.save(obj, f, pickle_module=<module 'pickle' from
'/home/matti/miniconda3/lib/python3.7/pickle.py'>, pickle_protocol=2,
_use_new_zipfile_serialization=True)` [source]

    
Saves an object to a disk file.

See also: `saving-loading-tensors`

Parameters

    
  * obj – saved object
  * f – a file-like object (has to implement write and flush) or a string or os.PathLike object containing a file name
  * pickle_module – module used for pickling metadata and objects
  * pickle_protocol – can be specified to override the default protocol

Note

A common PyTorch convention is to save tensors using .pt file extension.

Note

PyTorch preserves storage sharing across serialization. See `preserve-storage-
sharing` for more details.

Note

The 1.6 release of PyTorch switched `torch.save` to use a new zipfile-based
file format. `torch.load` still retains the ability to load files in the old
format. If for any reason you want `torch.save` to use the old format, pass
the kwarg `_use_new_zipfile_serialization=False`.

#### Example

    
    >>> # Save to file
    >>> x = torch.tensor([0, 1, 2, 3, 4])
    >>> torch.save(x, 'tensor.pt')
    >>> # Save to io.BytesIO buffer
    >>> buffer = io.BytesIO()
    >>> torch.save(x, buffer)
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.save.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

