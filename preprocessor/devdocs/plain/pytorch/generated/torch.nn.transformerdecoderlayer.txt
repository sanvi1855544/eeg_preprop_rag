# TransformerDecoderLayer

`class torch.nn.TransformerDecoderLayer(d_model, nhead, dim_feedforward=2048,
dropout=0.1, activation='relu')` [source]

    
TransformerDecoderLayer is made up of self-attn, multi-head-attn and
feedforward network. This standard decoder layer is based on the paper
“Attention Is All You Need”. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Lukasz Kaiser, and Illia Polosukhin.
2017. Attention is all you need. In Advances in Neural Information Processing
Systems, pages 6000-6010. Users may modify or implement in a different way
during application.

Parameters

    
  * d_model – the number of expected features in the input (required).
  * nhead – the number of heads in the multiheadattention models (required).
  * dim_feedforward – the dimension of the feedforward network model (default=2048).
  * dropout – the dropout value (default=0.1).
  * activation – the activation function of intermediate layer, relu or gelu (default=relu).

Examples::

    
    
    >>> decoder_layer = nn.TransformerDecoderLayer(d_model=512, nhead=8)
    >>> memory = torch.rand(10, 32, 512)
    >>> tgt = torch.rand(20, 32, 512)
    >>> out = decoder_layer(tgt, memory)
    
`forward(tgt, memory, tgt_mask=None, memory_mask=None,
tgt_key_padding_mask=None, memory_key_padding_mask=None)` [source]

    
Pass the inputs (and mask) through the decoder layer.

Parameters

    
  * tgt – the sequence to the decoder layer (required).
  * memory – the sequence from the last layer of the encoder (required).
  * tgt_mask – the mask for the tgt sequence (optional).
  * memory_mask – the mask for the memory sequence (optional).
  * tgt_key_padding_mask – the mask for the tgt keys per batch (optional).
  * memory_key_padding_mask – the mask for the memory keys per batch (optional).

Shape:

    
see the docs in Transformer class.

© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.nn.TransformerDecoderLayer.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

