# torch.vdot

`torch.vdot(input, other, *, out=None) → Tensor`

    
Computes the dot product of two 1D tensors. The vdot(a, b) function handles
complex numbers differently than dot(a, b). If the first argument is complex,
the complex conjugate of the first argument is used for the calculation of the
dot product.

Note

Unlike NumPy’s vdot, torch.vdot intentionally only supports computing the dot
product of two 1D tensors with the same number of elements.

Parameters

    
  * input (Tensor) – first tensor in the dot product, must be 1D. Its conjugate is used if it’s complex.
  * other (Tensor) – second tensor in the dot product, must be 1D.

Keyword Arguments

    
out (Tensor, optional) – the output tensor.

Example:

    
    >>> torch.vdot(torch.tensor([2, 3]), torch.tensor([2, 1]))
    tensor(7)
    >>> a = torch.tensor((1 +2j, 3 - 1j))
    >>> b = torch.tensor((2 +1j, 4 - 0j))
    >>> torch.vdot(a, b)
    tensor([16.+1.j])
    >>> torch.vdot(b, a)
    tensor([16.-1.j])
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.vdot.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

