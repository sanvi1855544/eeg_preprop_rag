# torch.conj

`torch.conj(input, *, out=None) → Tensor`

    
Computes the element-wise conjugate of the given `input` tensor. If
:attr`input` has a non-complex dtype, this function just returns `input`.

Warning

In the future, `torch.conj()` may return a non-writeable view for an `input`
of non-complex dtype. It’s recommended that programs not modify the tensor
returned by `torch.conj()` when `input` is of non-complex dtype to be
compatible with this change.

outi=conj(inputi)\text{out}_{i} = conj(\text{input}_{i})

Parameters

    
input (Tensor) – the input tensor.

Keyword Arguments

    
out (Tensor, optional) – the output tensor.

Example:

    
    >>> torch.conj(torch.tensor([-1 + 1j, -2 + 2j, 3 - 3j]))
    tensor([-1 - 1j, -2 - 2j, 3 + 3j])
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.conj.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

