# PairwiseDistance

`class torch.nn.PairwiseDistance(p=2.0, eps=1e-06, keepdim=False)` [source]

    
Computes the batchwise pairwise distance between vectors v1v_1 , v2v_2 using
the p-norm:

∥x∥p=(∑i=1n∣xi∣p)1/p.\Vert x \Vert _p = \left( \sum_{i=1}^n \vert x_i \vert ^
p \right) ^ {1/p}.

Parameters

    
  * p (real) – the norm degree. Default: 2
  * eps (float, optional) – Small value to avoid division by zero. Default: 1e-6
  * keepdim (bool, optional) – Determines whether or not to keep the vector dimension. Default: False

Shape:

    
  * Input1: (N,D)(N, D) where `D = vector dimension`
  * Input2: (N,D)(N, D) , same shape as the Input1
  * Output: (N)(N) . If `keepdim` is `True`, then (N,1)(N, 1) .

Examples::

    
    
    >>> pdist = nn.PairwiseDistance(p=2)
    >>> input1 = torch.randn(100, 128)
    >>> input2 = torch.randn(100, 128)
    >>> output = pdist(input1, input2)
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.nn.PairwiseDistance.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

