# ConstantPad3d

`class torch.nn.ConstantPad3d(padding, value)` [source]

    
Pads the input tensor boundaries with a constant value.

For `N`-dimensional padding, use `torch.nn.functional.pad()`.

Parameters

    
padding (int, tuple) – the size of the padding. If is `int`, uses the same
padding in all boundaries. If a 6-`tuple`, uses
(padding_left\text{padding\\_left} , padding_right\text{padding\\_right} ,
padding_top\text{padding\\_top} , padding_bottom\text{padding\\_bottom} ,
padding_front\text{padding\\_front} , padding_back\text{padding\\_back} )

Shape:

    
  * Input: (N,C,Din,Hin,Win)(N, C, D_{in}, H_{in}, W_{in})
  * Output: (N,C,Dout,Hout,Wout)(N, C, D_{out}, H_{out}, W_{out}) where
Dout=Din+padding_front+padding_backD_{out} = D_{in} + \text{padding\\_front} +
\text{padding\\_back}

Hout=Hin+padding_top+padding_bottomH_{out} = H_{in} + \text{padding\\_top} +
\text{padding\\_bottom}

Wout=Win+padding_left+padding_rightW_{out} = W_{in} + \text{padding\\_left} +
\text{padding\\_right}

Examples:

    
    >>> m = nn.ConstantPad3d(3, 3.5)
    >>> input = torch.randn(16, 3, 10, 20, 30)
    >>> output = m(input)
    >>> # using different paddings for different sides
    >>> m = nn.ConstantPad3d((3, 3, 6, 6, 0, 1), 3.5)
    >>> output = m(input)
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.nn.ConstantPad3d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

