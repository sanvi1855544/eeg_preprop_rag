# MaxUnpool3d

`class torch.nn.MaxUnpool3d(kernel_size, stride=None, padding=0)` [source]

    
Computes a partial inverse of `MaxPool3d`.

`MaxPool3d` is not fully invertible, since the non-maximal values are lost.
`MaxUnpool3d` takes in as input the output of `MaxPool3d` including the
indices of the maximal values and computes a partial inverse in which all non-
maximal values are set to zero.

Note

`MaxPool3d` can map several input sizes to the same output sizes. Hence, the
inversion process can get ambiguous. To accommodate this, you can provide the
needed output size as an additional argument `output_size` in the forward
call. See the Inputs section below.

Parameters

    
  * kernel_size (int or tuple) – Size of the max pooling window.
  * stride (int or tuple) – Stride of the max pooling window. It is set to `kernel_size` by default.
  * padding (int or tuple) – Padding that was added to the input

Inputs:

    
  * `input`: the input Tensor to invert
  * `indices`: the indices given out by `MaxPool3d`
  * `output_size` (optional): the targeted output size

Shape:

    
  * Input: (N,C,Din,Hin,Win)(N, C, D_{in}, H_{in}, W_{in})
  * Output: (N,C,Dout,Hout,Wout)(N, C, D_{out}, H_{out}, W_{out}) , where
Dout=(Din−1)×stride[0]−2×padding[0]+kernel_size[0]D_{out} = (D_{in} - 1)
\times \text{stride[0]} - 2 \times \text{padding[0]} + \text{kernel\\_size[0]}

Hout=(Hin−1)×stride[1]−2×padding[1]+kernel_size[1]H_{out} = (H_{in} - 1)
\times \text{stride[1]} - 2 \times \text{padding[1]} + \text{kernel\\_size[1]}

Wout=(Win−1)×stride[2]−2×padding[2]+kernel_size[2]W_{out} = (W_{in} - 1)
\times \text{stride[2]} - 2 \times \text{padding[2]} + \text{kernel\\_size[2]}

or as given by `output_size` in the call operator

Example:

    
    >>> # pool of square window of size=3, stride=2
    >>> pool = nn.MaxPool3d(3, stride=2, return_indices=True)
    >>> unpool = nn.MaxUnpool3d(3, stride=2)
    >>> output, indices = pool(torch.randn(20, 16, 51, 33, 15))
    >>> unpooled_output = unpool(output, indices)
    >>> unpooled_output.size()
    torch.Size([20, 16, 51, 33, 15])
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.nn.MaxUnpool3d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

