# LazyConv2d

`class torch.nn.LazyConv2d(out_channels, kernel_size, stride=1, padding=0,
dilation=1, groups=1, bias=True, padding_mode='zeros')` [source]

    
A `torch.nn.Conv2d` module with lazy initialization of the `in_channels`
argument of the `Conv2d` that is inferred from the `input.size(1)`.

Parameters

    
  * out_channels (int) – Number of channels produced by the convolution
  * kernel_size (int or tuple) – Size of the convolving kernel
  * stride (int or tuple, optional) – Stride of the convolution. Default: 1
  * padding (int or tuple, optional) – Zero-padding added to both sides of the input. Default: 0
  * padding_mode (string, optional) – `'zeros'`, `'reflect'`, `'replicate'` or `'circular'`. Default: `'zeros'`
  * dilation (int or tuple, optional) – Spacing between kernel elements. Default: 1
  * groups (int, optional) – Number of blocked connections from input channels to output channels. Default: 1
  * bias (bool, optional) – If `True`, adds a learnable bias to the output. Default: `True`

See also

`torch.nn.Conv2d` and `torch.nn.modules.lazy.LazyModuleMixin`

`cls_to_become`

    
alias of `Conv2d`

© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.nn.LazyConv2d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

