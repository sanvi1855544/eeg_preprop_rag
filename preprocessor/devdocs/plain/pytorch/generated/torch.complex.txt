# torch.complex

`torch.complex(real, imag, *, out=None) → Tensor`

    
Constructs a complex tensor with its real part equal to `real` and its
imaginary part equal to `imag`.

Parameters

    
  * real (Tensor) – The real part of the complex tensor. Must be float or double.
  * imag (Tensor) – The imaginary part of the complex tensor. Must be same dtype as `real`.

Keyword Arguments

    
out (Tensor) – If the inputs are `torch.float32`, must be `torch.complex64`.
If the inputs are `torch.float64`, must be `torch.complex128`.

Example::

    
    
    >>> real = torch.tensor([1, 2], dtype=torch.float32)
    >>> imag = torch.tensor([3, 4], dtype=torch.float32)
    >>> z = torch.complex(real, imag)
    >>> z
    tensor([(1.+3.j), (2.+4.j)])
    >>> z.dtype
    torch.complex64
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.complex.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

