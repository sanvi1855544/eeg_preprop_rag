# torch.eye

`torch.eye(n, m=None, *, out=None, dtype=None, layout=torch.strided,
device=None, requires_grad=False) → Tensor`

    
Returns a 2-D tensor with ones on the diagonal and zeros elsewhere.

Parameters

    
  * n (int) – the number of rows
  * m (int, optional) – the number of columns with default being `n`

Keyword Arguments

    
  * out (Tensor, optional) – the output tensor.
  * dtype (`torch.dtype`, optional) – the desired data type of returned tensor. Default: if `None`, uses a global default (see `torch.set_default_tensor_type()`).
  * layout (`torch.layout`, optional) – the desired layout of returned Tensor. Default: `torch.strided`.
  * device (`torch.device`, optional) – the desired device of returned tensor. Default: if `None`, uses the current device for the default tensor type (see `torch.set_default_tensor_type()`). `device` will be the CPU for CPU tensor types and the current CUDA device for CUDA tensor types.
  * requires_grad (bool, optional) – If autograd should record operations on the returned tensor. Default: `False`.

Returns

    
A 2-D tensor with ones on the diagonal and zeros elsewhere

Return type

    
Tensor

Example:

    
    >>> torch.eye(3)
    tensor([[ 1.,  0.,  0.],
            [ 0.,  1.,  0.],
            [ 0.,  0.,  1.]])
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.eye.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

