# torch.quantize_per_tensor

`torch.quantize_per_tensor(input, scale, zero_point, dtype) → Tensor`

    
Converts a float tensor to a quantized tensor with given scale and zero point.

Parameters

    
  * input (Tensor) – float tensor to quantize
  * scale (float) – scale to apply in quantization formula
  * zero_point (int) – offset in integer value that maps to float zero
  * dtype (`torch.dtype`) – the desired data type of returned tensor. Has to be one of the quantized dtypes: `torch.quint8`, `torch.qint8`, `torch.qint32`

Returns

    
A newly quantized tensor

Return type

    
Tensor

Example:

    
    >>> torch.quantize_per_tensor(torch.tensor([-1.0, 0.0, 1.0, 2.0]), 0.1, 10, torch.quint8)
    tensor([-1.,  0.,  1.,  2.], size=(4,), dtype=torch.quint8,
           quantization_scheme=torch.per_tensor_affine, scale=0.1, zero_point=10)
    >>> torch.quantize_per_tensor(torch.tensor([-1.0, 0.0, 1.0, 2.0]), 0.1, 10, torch.quint8).int_repr()
    tensor([ 0, 10, 20, 30], dtype=torch.uint8)
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.quantize_per_tensor.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

