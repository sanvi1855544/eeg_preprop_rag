# torch.heaviside

`torch.heaviside(input, values, *, out=None) → Tensor`

    
Computes the Heaviside step function for each element in `input`. The
Heaviside step function is defined as:

heaviside(input,values)={0,if input < 0values,if input == 01,if input >
0\text{{heaviside}}(input, values) = \begin{cases} 0, & \text{if input < 0}\\\
values, & \text{if input == 0}\\\ 1, & \text{if input > 0} \end{cases}

Parameters

    
  * input (Tensor) – the input tensor.
  * values (Tensor) – The values to use where `input` is zero.

Keyword Arguments

    
out (Tensor, optional) – the output tensor.

Example:

    
    >>> input = torch.tensor([-1.5, 0, 2.0])
    >>> values = torch.tensor([0.5])
    >>> torch.heaviside(input, values)
    tensor([0.0000, 0.5000, 1.0000])
    >>> values = torch.tensor([1.2, -2.0, 3.5])
    >>> torch.heaviside(input, values)
    tensor([0., -2., 1.])
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.heaviside.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

