# torch.any

`torch.any(input) → Tensor`

    
Parameters

    
input (Tensor) – the input tensor.

Tests if any element in `input` evaluates to `True`.

Note

This function matches the behaviour of NumPy in returning output of dtype
`bool` for all supported dtypes except `uint8`. For `uint8` the dtype of
output is `uint8` itself.

Example:

    
    >>> a = torch.rand(1, 2).bool()
    >>> a
    tensor([[False, True]], dtype=torch.bool)
    >>> torch.any(a)
    tensor(True, dtype=torch.bool)
    >>> a = torch.arange(0, 3)
    >>> a
    tensor([0, 1, 2])
    >>> torch.any(a)
    tensor(True)
    
`torch.any(input, dim, keepdim=False, *, out=None) → Tensor`

For each row of `input` in the given dimension `dim`, returns `True` if any
element in the row evaluate to `True` and `False` otherwise.

If `keepdim` is `True`, the output tensor is of the same size as `input`
except in the dimension `dim` where it is of size 1. Otherwise, `dim` is
squeezed (see `torch.squeeze()`), resulting in the output tensor having 1
fewer dimension than `input`.

Parameters

    
  * input (Tensor) – the input tensor.
  * dim (int) – the dimension to reduce.
  * keepdim (bool) – whether the output tensor has `dim` retained or not.

Keyword Arguments

    
out (Tensor, optional) – the output tensor.

Example:

    
    >>> a = torch.randn(4, 2) < 0
    >>> a
    tensor([[ True,  True],
            [False,  True],
            [ True,  True],
            [False, False]])
    >>> torch.any(a, 1)
    tensor([ True,  True,  True, False])
    >>> torch.any(a, 0)
    tensor([True, True])
    
© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/generated/torch.any.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

