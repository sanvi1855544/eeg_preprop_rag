# PyTorch documentation

PyTorch is an optimized tensor library for deep learning using GPUs and CPUs.

Features described in this documentation are classified by release status:

Stable: These features will be maintained long-term and there should generally
be no major performance limitations or gaps in documentation. We also expect
to maintain backwards compatibility (although breaking changes can happen and
notice will be given one release ahead of time).

Beta: Features are tagged as Beta because the API may change based on user
feedback, because the performance needs to improve, or because coverage across
operators is not yet complete. For Beta features, we are committing to seeing
the feature through to the Stable classification. We are not, however,
committing to backwards compatibility.

Prototype: These features are typically not available as part of binary
distributions like PyPI or Conda, except sometimes behind run-time flags, and
are at an early stage for feedback and testing.

Notes

  * Automatic Mixed Precision examples
  * Autograd mechanics
  * Broadcasting semantics
  * CPU threading and TorchScript inference
  * CUDA semantics
  * Distributed Data Parallel
  * Extending PyTorch
  * Frequently Asked Questions
  * Features for large-scale deployments
  * Modules
  * Multiprocessing best practices
  * Reproducibility
  * Serialization semantics
  * Windows FAQ

Language Bindings

  * C++
  * Javadoc

Python API

  * torch
  * torch.nn
  * torch.nn.functional
  * torch.Tensor
  * Tensor Attributes
  * Tensor Views
  * torch.autograd
  * torch.cuda
  * torch.cuda.amp
  * torch.backends
  * torch.distributed
  * torch.distributions
  * torch.fft
  * torch.futures
  * torch.fx
  * torch.hub
  * torch.jit
  * torch.linalg
  * torch.overrides
  * torch.nn.init
  * torch.onnx
  * torch.optim
  * Complex Numbers
  * DDP Communication Hooks
  * Pipeline Parallelism
  * Quantization
  * Distributed RPC Framework
  * torch.random
  * torch.sparse
  * torch.Storage
  * torch.utils.benchmark
  * torch.utils.bottleneck
  * torch.utils.checkpoint
  * torch.utils.cpp_extension
  * torch.utils.data
  * torch.utils.dlpack
  * torch.utils.mobile_optimizer
  * torch.utils.model_zoo
  * torch.utils.tensorboard
  * Type Info
  * Named Tensors
  * Named Tensors operator coverage
  * torch.__config__

Libraries

  * torchaudio
  * torchtext
  * torchvision
  * TorchElastic
  * TorchServe
  * PyTorch on XLA Devices

Community

  * PyTorch Contribution Guide
  * PyTorch Governance
  * PyTorch Governance | Persons of Interest

# Indices and tables

  * Index
  * Module Index

Â© 2019 Torch Contributors  
Licensed under the 3-clause BSD License.  
https://pytorch.org/docs/1.8.0/

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

