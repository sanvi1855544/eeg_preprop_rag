# torch.nn.functional.avg_pool3d

`torch.nn.functional.avg_pool3d(input, kernel_size, stride=None, padding=0,
ceil_mode=False, count_include_pad=True, divisor_override=None) → Tensor`

    
Applies 3D average-pooling operation in kT×kH×kWkT \times kH \times kW regions
by step size sT×sH×sWsT \times sH \times sW steps. The number of output
features is equal to ⌊input planessT⌋\lfloor\frac{\text{input
planes}}{sT}\rfloor.

See `AvgPool3d` for details and output shape.

Parameters

    
  * input – input tensor (minibatch,in_channels,iT×iH,iW)(\text{minibatch} , \text{in\\_channels} , iT \times iH , iW)
  * kernel_size – size of the pooling region. Can be a single number or a tuple `(kT, kH, kW)`
  * stride – stride of the pooling operation. Can be a single number or a tuple `(sT, sH, sW)`. Default: `kernel_size`
  * padding – implicit zero paddings on both sides of the input. Can be a single number or a tuple `(padT, padH, padW)`, Default: 0
  * ceil_mode – when True, will use `ceil` instead of `floor` in the formula to compute the output shape
  * count_include_pad – when True, will include the zero-padding in the averaging calculation
  * divisor_override – if specified, it will be used as divisor, otherwise size of the pooling region will be used. Default: None

© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.nn.functional.avg_pool3d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

