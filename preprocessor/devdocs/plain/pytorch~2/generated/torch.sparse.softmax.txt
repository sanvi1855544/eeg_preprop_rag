# torch.sparse.softmax

`torch.sparse.softmax(input, dim, *, dtype=None) → Tensor`

    
Applies a softmax function.

Softmax is defined as:

Softmax(xi)=exp(xi)∑jexp(xj)\text{Softmax}(x_{i}) = \frac{exp(x_i)}{\sum_j
exp(x_j)}

where i,ji, j run over sparse tensor indices and unspecified entries are
ignores. This is equivalent to defining unspecified entries as negative
infinity so that exp(xk)=0exp(x_k) = 0 when the entry with index kk has not
specified.

It is applied to all slices along `dim`, and will re-scale them so that the
elements lie in the range `[0, 1]` and sum to 1.

Parameters

    
  * input (Tensor) – input
  * dim (int) – A dimension along which softmax will be computed.
  * dtype (`torch.dtype`, optional) – the desired data type of returned tensor. If specified, the input tensor is casted to `dtype` before the operation is performed. This is useful for preventing data type overflows. Default: None

© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.sparse.softmax.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

