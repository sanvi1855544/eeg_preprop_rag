# torch.conj

`torch.conj(input) → Tensor`

    
Returns a view of `input` with a flipped conjugate bit. If `input` has a non-
complex dtype, this function just returns `input`.

Note

`torch.conj()` performs a lazy conjugation, but the actual conjugated tensor
can be materialized at any time using `torch.resolve_conj()`.

Warning

In the future, `torch.conj()` may return a non-writeable view for an `input`
of non-complex dtype. It’s recommended that programs not modify the tensor
returned by `torch.conj_physical()` when `input` is of non-complex dtype to be
compatible with this change.

Parameters

    
input (Tensor) – the input tensor.

Example:

    
    >>> x = torch.tensor([-1 + 1j, -2 + 2j, 3 - 3j])
    >>> x.is_conj()
    False
    >>> y = torch.conj(x)
    >>> y.is_conj()
    True
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.conj.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

