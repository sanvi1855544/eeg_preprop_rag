# torch.Tensor.new_empty

`Tensor.new_empty(size, *, dtype=None, device=None, requires_grad=False,
layout=torch.strided, pin_memory=False) → Tensor`

    
Returns a Tensor of size `size` filled with uninitialized data. By default,
the returned Tensor has the same `torch.dtype` and `torch.device` as this
tensor.

Parameters

    
size (int...) – a list, tuple, or `torch.Size` of integers defining the shape
of the output tensor.

Keyword Arguments

    
  * dtype (`torch.dtype`, optional) – the desired type of returned tensor. Default: if None, same `torch.dtype` as this tensor.
  * device (`torch.device`, optional) – the desired device of returned tensor. Default: if None, same `torch.device` as this tensor.
  * requires_grad (bool, optional) – If autograd should record operations on the returned tensor. Default: `False`.
  * layout (`torch.layout`, optional) – the desired layout of returned Tensor. Default: `torch.strided`.
  * pin_memory (bool, optional) – If set, returned tensor would be allocated in the pinned memory. Works only for CPU tensors. Default: `False`.

Example:

    
    >>> tensor = torch.ones(())
    >>> tensor.new_empty((2, 3))
    tensor([[ 5.8182e-18,  4.5765e-41, -1.0545e+30],
            [ 3.0949e-41,  4.4842e-44,  0.0000e+00]])
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.Tensor.new_empty.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

