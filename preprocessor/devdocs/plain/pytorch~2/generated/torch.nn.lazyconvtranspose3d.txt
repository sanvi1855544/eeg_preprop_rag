# LazyConvTranspose3d

`class torch.nn.LazyConvTranspose3d(out_channels, kernel_size, stride=1,
padding=0, output_padding=0, groups=1, bias=True, dilation=1,
padding_mode='zeros', device=None, dtype=None)` [source]

    
A `torch.nn.ConvTranspose3d` module with lazy initialization of the
`in_channels` argument of the `ConvTranspose3d` that is inferred from the
`input.size(1)`. The attributes that will be lazily initialized are `weight`
and `bias`.

Check the `torch.nn.modules.lazy.LazyModuleMixin` for further documentation on
lazy modules and their limitations.

Parameters

    
  * out_channels (int) – Number of channels produced by the convolution
  * kernel_size (int or tuple) – Size of the convolving kernel
  * stride (int or tuple, optional) – Stride of the convolution. Default: 1
  * padding (int or tuple, optional) – `dilation * (kernel_size - 1) - padding` zero-padding will be added to both sides of each dimension in the input. Default: 0
  * output_padding (int or tuple, optional) – Additional size added to one side of each dimension in the output shape. Default: 0
  * groups (int, optional) – Number of blocked connections from input channels to output channels. Default: 1
  * bias (bool, optional) – If `True`, adds a learnable bias to the output. Default: `True`
  * dilation (int or tuple, optional) – Spacing between kernel elements. Default: 1

See also

`torch.nn.ConvTranspose3d` and `torch.nn.modules.lazy.LazyModuleMixin`

`cls_to_become`

    
alias of `ConvTranspose3d`

© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.nn.LazyConvTranspose3d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

