# AdaptiveMaxPool1d

`class torch.nn.AdaptiveMaxPool1d(output_size, return_indices=False)` [source]

    
Applies a 1D adaptive max pooling over an input signal composed of several
input planes.

The output size is LoutL_{out}, for any input size. The number of output
features is equal to the number of input planes.

Parameters

    
  * output_size (Union[int, Tuple[int]]) – the target output size LoutL_{out}.
  * return_indices (bool) – if `True`, will return the indices along with the outputs. Useful to pass to nn.MaxUnpool1d. Default: `False`

Shape:

    
  * Input: (N,C,Lin)(N, C, L_{in}) or (C,Lin)(C, L_{in}).
  * Output: (N,C,Lout)(N, C, L_{out}) or (C,Lout)(C, L_{out}), where Lout=output_sizeL_{out}=\text{output\\_size}.

#### Examples

    
    >>> # target output size of 5
    >>> m = nn.AdaptiveMaxPool1d(5)
    >>> input = torch.randn(1, 64, 8)
    >>> output = m(input)
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.nn.AdaptiveMaxPool1d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

