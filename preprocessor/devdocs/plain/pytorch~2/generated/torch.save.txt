# torch.save

`torch.save(obj, f, pickle_module=pickle, pickle_protocol=DEFAULT_PROTOCOL,
_use_new_zipfile_serialization=True)` [source]

    
Saves an object to a disk file.

See also: Saving and loading tensors

Parameters

    
  * obj (object) – saved object
  * f (Union[str, PathLike, BinaryIO, IO[bytes]]) – a file-like object (has to implement write and flush) or a string or os.PathLike object containing a file name
  * pickle_module (Any) – module used for pickling metadata and objects
  * pickle_protocol (int) – can be specified to override the default protocol

Note

A common PyTorch convention is to save tensors using .pt file extension.

Note

PyTorch preserves storage sharing across serialization. See Saving and loading
tensors preserves views for more details.

Note

The 1.6 release of PyTorch switched `torch.save` to use a new zipfile-based
file format. `torch.load` still retains the ability to load files in the old
format. If for any reason you want `torch.save` to use the old format, pass
the kwarg `_use_new_zipfile_serialization=False`.

#### Example

    
    >>> # Save to file
    >>> x = torch.tensor([0, 1, 2, 3, 4])
    >>> torch.save(x, 'tensor.pt')
    >>> # Save to io.BytesIO buffer
    >>> buffer = io.BytesIO()
    >>> torch.save(x, buffer)
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.save.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

