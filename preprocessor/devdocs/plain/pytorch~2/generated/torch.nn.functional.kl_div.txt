# torch.nn.functional.kl_div

`torch.nn.functional.kl_div(input, target, size_average=None, reduce=None,
reduction='mean', log_target=False)` [source]

    
The Kullback-Leibler divergence Loss

See `KLDivLoss` for details.

Parameters

    
  * input (Tensor) – Tensor of arbitrary shape in log-probabilities.
  * target (Tensor) – Tensor of the same shape as input. See `log_target` for the target’s interpretation.
  * size_average (bool, optional) – Deprecated (see `reduction`). By default, the losses are averaged over each loss element in the batch. Note that for some losses, there multiple elements per sample. If the field `size_average` is set to `False`, the losses are instead summed for each minibatch. Ignored when reduce is `False`. Default: `True`
  * reduce (bool, optional) – Deprecated (see `reduction`). By default, the losses are averaged or summed over observations for each minibatch depending on `size_average`. When `reduce` is `False`, returns a loss per batch element instead and ignores `size_average`. Default: `True`
  * reduction (str, optional) – Specifies the reduction to apply to the output: `'none'` | `'batchmean'` | `'sum'` | `'mean'`. `'none'`: no reduction will be applied `'batchmean'`: the sum of the output will be divided by the batchsize `'sum'`: the output will be summed `'mean'`: the output will be divided by the number of elements in the output Default: `'mean'`
  * log_target (bool) – A flag indicating whether `target` is passed in the log space. It is recommended to pass certain distributions (like `softmax`) in the log space to avoid numerical issues caused by explicit `log`. Default: `False`

Return type

    
Tensor

Note

`size_average` and `reduce` are in the process of being deprecated, and in the
meantime, specifying either of those two args will override `reduction`.

Warning

`reduction` = `'mean'` doesn’t return the true kl divergence value, please use
`reduction` = `'batchmean'` which aligns with KL math definition.

© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.nn.functional.kl_div.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

