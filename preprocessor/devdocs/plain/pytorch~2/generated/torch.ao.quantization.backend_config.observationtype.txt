# ObservationType

`class torch.ao.quantization.backend_config.ObservationType(value)` [source]

    
An enum that represents different ways of how an operator/operator pattern
should be observed

`INPUT_OUTPUT_NOT_OBSERVED = 2`

    
this means the input and output are never observed example: x.shape, x.size

`OUTPUT_SHARE_OBSERVER_WITH_INPUT = 1`

    
this means the output will use the same observer instance as input, based on
qconfig.activation example: torch.cat, maxpool

`OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT = 0`

    
this means input and output are observed with different observers, based on
qconfig.activation example: conv, linear, softmax

Â© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.ao.quantization.backend_config.ObservationType.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

