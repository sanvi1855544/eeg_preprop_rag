# ConvBnReLU2d

`class torch.ao.nn.intrinsic.qat.ConvBnReLU2d(in_channels, out_channels,
kernel_size, stride=1, padding=0, dilation=1, groups=1, bias=None,
padding_mode='zeros', eps=1e-05, momentum=0.1, freeze_bn=False, qconfig=None)`
[source]

    
A ConvBnReLU2d module is a module fused from Conv2d, BatchNorm2d and ReLU,
attached with FakeQuantize modules for weight, used in quantization aware
training.

We combined the interface of `torch.nn.Conv2d` and `torch.nn.BatchNorm2d` and
`torch.nn.ReLU`.

Similar to `torch.nn.Conv2d`, with FakeQuantize modules initialized to
default.

Variables

    
weight_fake_quant – fake quant module for weight

© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

