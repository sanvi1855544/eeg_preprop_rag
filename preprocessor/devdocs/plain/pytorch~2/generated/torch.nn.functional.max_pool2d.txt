# torch.nn.functional.max_pool2d

`torch.nn.functional.max_pool2d(input, kernel_size, stride=None, padding=0,
dilation=1, ceil_mode=False, return_indices=False)`

    
Applies a 2D max pooling over an input signal composed of several input
planes.

Note

The order of `ceil_mode` and `return_indices` is different from what seen in
`MaxPool2d`, and will change in a future release.

See `MaxPool2d` for details.

Parameters

    
  * input – input tensor (minibatch,in_channels,iH,iW)(\text{minibatch} , \text{in\\_channels} , iH , iW), minibatch dim optional.
  * kernel_size – size of the pooling region. Can be a single number or a tuple `(kH, kW)`
  * stride – stride of the pooling operation. Can be a single number or a tuple `(sH, sW)`. Default: `kernel_size`
  * padding – Implicit negative infinity padding to be added on both sides, must be >= 0 and <= kernel_size / 2.
  * dilation – The stride between elements within a sliding window, must be > 0.
  * ceil_mode – If `True`, will use `ceil` instead of `floor` to compute the output shape. This ensures that every element in the input tensor is covered by a sliding window.
  * return_indices – If `True`, will return the argmax along with the max values. Useful for `torch.nn.functional.max_unpool2d` later

© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.nn.functional.max_pool2d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

