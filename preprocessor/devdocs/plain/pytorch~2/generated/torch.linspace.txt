# torch.linspace

`torch.linspace(start, end, steps, *, out=None, dtype=None,
layout=torch.strided, device=None, requires_grad=False) → Tensor`

    
Creates a one-dimensional tensor of size `steps` whose values are evenly
spaced from `start` to `end`, inclusive. That is, the value are:

(start,start+end−startsteps−1,…,start+(steps−2)∗end−startsteps−1,end)(\text{start},
\text{start} + \frac{\text{end} - \text{start}}{\text{steps} - 1}, \ldots,
\text{start} + (\text{steps} - 2) * \frac{\text{end} -
\text{start}}{\text{steps} - 1}, \text{end})

From PyTorch 1.11 linspace requires the steps argument. Use steps=100 to
restore the previous behavior.

Parameters

    
  * start (float) – the starting value for the set of points
  * end (float) – the ending value for the set of points
  * steps (int) – size of the constructed tensor

Keyword Arguments

    
  * out (Tensor, optional) – the output tensor.
  * dtype (torch.dtype, optional) – the data type to perform the computation in. Default: if None, uses the global default dtype (see torch.get_default_dtype()) when both `start` and `end` are real, and corresponding complex dtype when either is complex.
  * layout (`torch.layout`, optional) – the desired layout of returned Tensor. Default: `torch.strided`.
  * device (`torch.device`, optional) – the desired device of returned tensor. Default: if `None`, uses the current device for the default tensor type (see `torch.set_default_tensor_type()`). `device` will be the CPU for CPU tensor types and the current CUDA device for CUDA tensor types.
  * requires_grad (bool, optional) – If autograd should record operations on the returned tensor. Default: `False`.

Example:

    
    >>> torch.linspace(3, 10, steps=5)
    tensor([  3.0000,   4.7500,   6.5000,   8.2500,  10.0000])
    >>> torch.linspace(-10, 10, steps=5)
    tensor([-10.,  -5.,   0.,   5.,  10.])
    >>> torch.linspace(start=-10, end=10, steps=5)
    tensor([-10.,  -5.,   0.,   5.,  10.])
    >>> torch.linspace(start=-10, end=10, steps=1)
    tensor([-10.])
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.linspace.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

