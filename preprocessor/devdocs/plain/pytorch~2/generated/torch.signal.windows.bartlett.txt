# torch.signal.windows.bartlett

`torch.signal.windows.bartlett(M, *, sym=True, dtype=None,
layout=torch.strided, device=None, requires_grad=False)` [source]

    
Computes the Bartlett window.

The Bartlett window is defined as follows:

wn=1−∣2nM−1−1∣={2nM−1if 0≤n≤M−122−2nM−1if M−12<n<Mw_n = 1 - \left| \frac{2n}{M
- 1} - 1 \right| = \begin{cases} \frac{2n}{M - 1} & \text{if } 0 \leq n \leq
\frac{M - 1}{2} \\\ 2 - \frac{2n}{M - 1} & \text{if } \frac{M - 1}{2} < n < M
\\\ \end{cases}

The window is normalized to 1 (maximum value is 1). However, the 1 doesn’t
appear if `M` is even and `sym` is `True`.

Parameters

    
M (int) – the length of the window. In other words, the number of points of
the returned window.

Keyword Arguments

    
  * sym (bool, optional) – If `False`, returns a periodic window suitable for use in spectral analysis. If `True`, returns a symmetric window suitable for use in filter design. Default: `True`.
  * dtype (`torch.dtype`, optional) – the desired data type of returned tensor. Default: if `None`, uses a global default (see `torch.set_default_tensor_type()`).
  * layout (`torch.layout`, optional) – the desired layout of returned Tensor. Default: `torch.strided`.
  * device (`torch.device`, optional) – the desired device of returned tensor. Default: if `None`, uses the current device for the default tensor type (see `torch.set_default_tensor_type()`). `device` will be the CPU for CPU tensor types and the current CUDA device for CUDA tensor types.
  * requires_grad (bool, optional) – If autograd should record operations on the returned tensor. Default: `False`.

Return type

    
Tensor

Examples:

    
    >>> # Generates a symmetric Bartlett window.
    >>> torch.signal.windows.bartlett(10)
    tensor([0.0000, 0.2222, 0.4444, 0.6667, 0.8889, 0.8889, 0.6667, 0.4444, 0.2222, 0.0000])
    
    >>> # Generates a periodic Bartlett window.
    >>> torch.signal.windows.bartlett(10, sym=False)
    tensor([0.0000, 0.2000, 0.4000, 0.6000, 0.8000, 1.0000, 0.8000, 0.6000, 0.4000, 0.2000])
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.signal.windows.bartlett.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

