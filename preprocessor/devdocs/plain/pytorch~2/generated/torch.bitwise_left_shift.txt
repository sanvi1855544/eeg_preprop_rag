# torch.bitwise_left_shift

`torch.bitwise_left_shift(input, other, *, out=None) → Tensor`

    
Computes the left arithmetic shift of `input` by `other` bits. The input
tensor must be of integral type. This operator supports broadcasting to a
common shape and type promotion.

The operation applied is:

outi=inputi<<otheri\text{out}_i = \text{input}_i << \text{other}_i

Parameters

    
  * input (Tensor or Scalar) – the first input tensor
  * other (Tensor or Scalar) – the second input tensor

Keyword Arguments

    
out (Tensor, optional) – the output tensor.

Example:

    
    >>> torch.bitwise_left_shift(torch.tensor([-1, -2, 3], dtype=torch.int8), torch.tensor([1, 0, 3], dtype=torch.int8))
    tensor([-2, -2, 24], dtype=torch.int8)
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.bitwise_left_shift.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

