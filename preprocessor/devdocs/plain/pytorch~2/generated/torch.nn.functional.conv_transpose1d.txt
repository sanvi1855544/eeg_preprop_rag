# torch.nn.functional.conv_transpose1d

`torch.nn.functional.conv_transpose1d(input, weight, bias=None, stride=1,
padding=0, output_padding=0, groups=1, dilation=1) → Tensor`

    
Applies a 1D transposed convolution operator over an input signal composed of
several input planes, sometimes also called “deconvolution”.

This operator supports TensorFloat32.

See `ConvTranspose1d` for details and output shape.

Note

In some circumstances when given tensors on a CUDA device and using CuDNN,
this operator may select a nondeterministic algorithm to increase performance.
If this is undesirable, you can try to make the operation deterministic
(potentially at a performance cost) by setting
`torch.backends.cudnn.deterministic = True`. See Reproducibility for more
information.

Parameters

    
  * input – input tensor of shape (minibatch,in_channels,iW)(\text{minibatch} , \text{in\\_channels} , iW)
  * weight – filters of shape (in_channels,out_channelsgroups,kW)(\text{in\\_channels} , \frac{\text{out\\_channels}}{\text{groups}} , kW)
  * bias – optional bias of shape (out_channels)(\text{out\\_channels}). Default: None
  * stride – the stride of the convolving kernel. Can be a single number or a tuple `(sW,)`. Default: 1
  * padding – `dilation * (kernel_size - 1) - padding` zero-padding will be added to both sides of each dimension in the input. Can be a single number or a tuple `(padW,)`. Default: 0
  * output_padding – additional size added to one side of each dimension in the output shape. Can be a single number or a tuple `(out_padW)`. Default: 0
  * groups – split input into groups, in_channels\text{in\\_channels} should be divisible by the number of groups. Default: 1
  * dilation – the spacing between kernel elements. Can be a single number or a tuple `(dW,)`. Default: 1

Examples:

    
    >>> inputs = torch.randn(20, 16, 50)
    >>> weights = torch.randn(16, 33, 5)
    >>> F.conv_transpose1d(inputs, weights)
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.nn.functional.conv_transpose1d.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

