# torch.all

`torch.all(input) → Tensor`

    
Tests if all elements in `input` evaluate to `True`.

Note

This function matches the behaviour of NumPy in returning output of dtype
`bool` for all supported dtypes except `uint8`. For `uint8` the dtype of
output is `uint8` itself.

Example:

    
    >>> a = torch.rand(1, 2).bool()
    >>> a
    tensor([[False, True]], dtype=torch.bool)
    >>> torch.all(a)
    tensor(False, dtype=torch.bool)
    >>> a = torch.arange(0, 3)
    >>> a
    tensor([0, 1, 2])
    >>> torch.all(a)
    tensor(False)
    
torch.all(input, dim, keepdim=False, *, out=None) → Tensor

For each row of `input` in the given dimension `dim`, returns `True` if all
elements in the row evaluate to `True` and `False` otherwise.

If `keepdim` is `True`, the output tensor is of the same size as `input`
except in the dimension `dim` where it is of size 1. Otherwise, `dim` is
squeezed (see `torch.squeeze()`), resulting in the output tensor having 1
fewer dimension than `input`.

Parameters

    
  * input (Tensor) – the input tensor.
  * dim (int) – the dimension to reduce.
  * keepdim (bool) – whether the output tensor has `dim` retained or not.

Keyword Arguments

    
out (Tensor, optional) – the output tensor.

Example:

    
    >>> a = torch.rand(4, 2).bool()
    >>> a
    tensor([[True, True],
            [True, False],
            [True, True],
            [True, True]], dtype=torch.bool)
    >>> torch.all(a, dim=1)
    tensor([ True, False,  True,  True], dtype=torch.bool)
    >>> torch.all(a, dim=0)
    tensor([ True, False], dtype=torch.bool)
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.all.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

