# torch.view_as_complex

`torch.view_as_complex(input) → Tensor`

    
Returns a view of `input` as a complex tensor. For an input complex tensor of
`size` m1,m2,…,mi,2m1, m2, \dots, mi, 2, this function returns a new complex
tensor of `size` m1,m2,…,mim1, m2, \dots, mi where the last dimension of the
input tensor is expected to represent the real and imaginary components of
complex numbers.

Warning

`view_as_complex()` is only supported for tensors with `torch.dtype`
`torch.float64` and `torch.float32`. The input is expected to have the last
dimension of `size` 2\. In addition, the tensor must have a `stride` of 1 for
its last dimension. The strides of all other dimensions must be even numbers.

Parameters

    
input (Tensor) – the input tensor.

Example:

    
    >>> x=torch.randn(4, 2)
    >>> x
    tensor([[ 1.6116, -0.5772],
            [-1.4606, -0.9120],
            [ 0.0786, -1.7497],
            [-0.6561, -1.6623]])
    >>> torch.view_as_complex(x)
    tensor([(1.6116-0.5772j), (-1.4606-0.9120j), (0.0786-1.7497j), (-0.6561-1.6623j)])
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.view_as_complex.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

