# QuantWrapper

`class torch.ao.quantization.QuantWrapper(module)` [source]

    
A wrapper class that wraps the input module, adds QuantStub and DeQuantStub
and surround the call to module with call to quant and dequant modules.

This is used by the `quantization` utility functions to add the quant and
dequant modules, before `convert` function `QuantStub` will just be observer,
it observes the input tensor, after `convert`, `QuantStub` will be swapped to
`nnq.Quantize` which does actual quantization. Similarly for `DeQuantStub`.

Â© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.ao.quantization.QuantWrapper.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

