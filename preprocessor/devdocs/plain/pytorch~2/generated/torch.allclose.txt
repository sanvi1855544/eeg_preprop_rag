# torch.allclose

`torch.allclose(input, other, rtol=1e-05, atol=1e-08, equal_nan=False) → bool`

    
This function checks if `input` and `other` satisfy the condition:

∣input−other∣≤atol+rtol×∣other∣\lvert \text{input} - \text{other} \rvert \leq
\texttt{atol} + \texttt{rtol} \times \lvert \text{other} \rvert

elementwise, for all elements of `input` and `other`. The behaviour of this
function is analogous to numpy.allclose

Parameters

    
  * input (Tensor) – first tensor to compare
  * other (Tensor) – second tensor to compare
  * atol (float, optional) – absolute tolerance. Default: 1e-08
  * rtol (float, optional) – relative tolerance. Default: 1e-05
  * equal_nan (bool, optional) – if `True`, then two `NaN` s will be considered equal. Default: `False`

Example:

    
    >>> torch.allclose(torch.tensor([10000., 1e-07]), torch.tensor([10000.1, 1e-08]))
    False
    >>> torch.allclose(torch.tensor([10000., 1e-08]), torch.tensor([10000.1, 1e-09]))
    True
    >>> torch.allclose(torch.tensor([1.0, float('nan')]), torch.tensor([1.0, float('nan')]))
    False
    >>> torch.allclose(torch.tensor([1.0, float('nan')]), torch.tensor([1.0, float('nan')]), equal_nan=True)
    True
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.allclose.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

