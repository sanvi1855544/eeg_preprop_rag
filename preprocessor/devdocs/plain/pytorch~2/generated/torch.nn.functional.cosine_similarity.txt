# torch.nn.functional.cosine_similarity

`torch.nn.functional.cosine_similarity(x1, x2, dim=1, eps=1e-8) → Tensor`

    
Returns cosine similarity between `x1` and `x2`, computed along dim. `x1` and
`x2` must be broadcastable to a common shape. `dim` refers to the dimension in
this common shape. Dimension `dim` of the output is squeezed (see
`torch.squeeze()`), resulting in the output tensor having 1 fewer dimension.

similarity=x1⋅x2max⁡(∥x1∥2,ϵ)⋅max⁡(∥x2∥2,ϵ)\text{similarity} = \dfrac{x_1
\cdot x_2}{\max(\Vert x_1 \Vert _2, \epsilon) \cdot \max(\Vert x_2 \Vert _2,
\epsilon)}

Supports type promotion.

Parameters

    
  * x1 (Tensor) – First input.
  * x2 (Tensor) – Second input.
  * dim (int, optional) – Dimension along which cosine similarity is computed. Default: 1
  * eps (float, optional) – Small value to avoid division by zero. Default: 1e-8

Example:

    
    >>> input1 = torch.randn(100, 128)
    >>> input2 = torch.randn(100, 128)
    >>> output = F.cosine_similarity(input1, input2)
    >>> print(output)
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.nn.functional.cosine_similarity.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

