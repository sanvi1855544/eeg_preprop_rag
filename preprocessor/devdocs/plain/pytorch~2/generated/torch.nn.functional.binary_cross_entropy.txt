# torch.nn.functional.binary_cross_entropy

`torch.nn.functional.binary_cross_entropy(input, target, weight=None,
size_average=None, reduce=None, reduction='mean')` [source]

    
Function that measures the Binary Cross Entropy between the target and input
probabilities.

See `BCELoss` for details.

Parameters

    
  * input (Tensor) – Tensor of arbitrary shape as probabilities.
  * target (Tensor) – Tensor of the same shape as input with values between 0 and 1.
  * weight (Tensor, optional) – a manual rescaling weight if provided it’s repeated to match input tensor shape
  * size_average (bool, optional) – Deprecated (see `reduction`). By default, the losses are averaged over each loss element in the batch. Note that for some losses, there multiple elements per sample. If the field `size_average` is set to `False`, the losses are instead summed for each minibatch. Ignored when reduce is `False`. Default: `True`
  * reduce (bool, optional) – Deprecated (see `reduction`). By default, the losses are averaged or summed over observations for each minibatch depending on `size_average`. When `reduce` is `False`, returns a loss per batch element instead and ignores `size_average`. Default: `True`
  * reduction (str, optional) – Specifies the reduction to apply to the output: `'none'` | `'mean'` | `'sum'`. `'none'`: no reduction will be applied, `'mean'`: the sum of the output will be divided by the number of elements in the output, `'sum'`: the output will be summed. Note: `size_average` and `reduce` are in the process of being deprecated, and in the meantime, specifying either of those two args will override `reduction`. Default: `'mean'`

Return type

    
Tensor

Examples:

    
    >>> input = torch.randn(3, 2, requires_grad=True)
    >>> target = torch.rand(3, 2, requires_grad=False)
    >>> loss = F.binary_cross_entropy(torch.sigmoid(input), target)
    >>> loss.backward()
    
© 2024, PyTorch Contributors  
PyTorch has a BSD-style license, as found in the LICENSE file.  
https://pytorch.org/docs/2.1/generated/torch.nn.functional.binary_cross_entropy.html

  *[ISP]: Internet Service Provider
  *[LIFO]: last-in, first-out
  *[FIFO]: first-in, first-out

