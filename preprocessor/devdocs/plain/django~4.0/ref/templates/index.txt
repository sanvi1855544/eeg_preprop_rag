# Templates

Django’s template engine provides a powerful mini-language for defining the
user-facing layer of your application, encouraging a clean separation of
application and presentation logic. Templates can be maintained by anyone with
an understanding of HTML; no knowledge of Python is required. For introductory
material, see Templates topic guide.

  * The Django template language
    * Templates
    * Variables
    * Filters
    * Tags
    * Comments
    * Template inheritance
    * Automatic HTML escaping
    * Accessing method calls
    * Custom tag and filter libraries
  * Built-in template tags and filters
    * Built-in tag reference
    * Built-in filter reference
    * Internationalization tags and filters
    * Other tags and filters libraries
  * The Django template language: for Python programmers
    * Overview
    * Configuring an engine
    * Loading a template
    * Rendering a context
    * Playing with `Context` objects
    * Loading templates
    * Custom loaders
    * Template origin

See also

For information on writing your own custom tags and filters, see How to create
custom template tags and filters.

To learn how to override templates in other Django applications, see How to
override templates.

© Django Software Foundation and individual contributors  
Licensed under the BSD License.  
https://docs.djangoproject.com/en/4.0/ref/templates/index/

  *[ISP]: Internet Service Provider

