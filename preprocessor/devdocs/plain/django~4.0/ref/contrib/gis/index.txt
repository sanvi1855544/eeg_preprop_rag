# GeoDjango

GeoDjango intends to be a world-class geographic web framework. Its goal is to
make it as easy as possible to build GIS web applications and harness the
power of spatially enabled data.

  * GeoDjango Tutorial
    * Introduction
    * Setting Up
    * Geographic Data
    * Geographic Models
    * Importing Spatial Data
    * Spatial Queries
    * Putting your data on the map
  * GeoDjango Installation
    * Overview
    * Requirements
    * Installation
    * Troubleshooting
    * Platform-specific instructions
  * GeoDjango Model API
    * Spatial Field Types
    * Spatial Field Options
    * Geometry Field Options
  * GeoDjango Database API
    * Spatial Backends
    * Creating and Saving Models with Geometry Fields
    * Creating and Saving Models with Raster Fields
    * Spatial Lookups
    * Distance Queries
    * Compatibility Tables
  * GeoDjango Forms API
    * Field arguments
    * Form field classes
    * Form widgets
  * GIS QuerySet API Reference
    * Spatial Lookups
    * Distance Lookups
  * Geographic Database Functions
    * `Area`
    * `AsGeoJSON`
    * `AsGML`
    * `AsKML`
    * `AsSVG`
    * `AsWKB`
    * `AsWKT`
    * `Azimuth`
    * `BoundingCircle`
    * `Centroid`
    * `Difference`
    * `Distance`
    * `Envelope`
    * `ForcePolygonCW`
    * `GeoHash`
    * `GeometryDistance`
    * `Intersection`
    * `IsValid`
    * `Length`
    * `LineLocatePoint`
    * `MakeValid`
    * `MemSize`
    * `NumGeometries`
    * `NumPoints`
    * `Perimeter`
    * `PointOnSurface`
    * `Reverse`
    * `Scale`
    * `SnapToGrid`
    * `SymDifference`
    * `Transform`
    * `Translate`
    * `Union`
  * Measurement Objects
    * Example
    * Supported units
    * Measurement API
  * GEOS API
    * Background
    * Tutorial
    * Geometry Objects
    * Geometry Collections
    * Prepared Geometries
    * Geometry Factories
    * I/O Objects
    * Settings
    * Exceptions
  * GDAL API
    * Overview
    * Vector Data Source Objects
    * OGR Geometries
    * Coordinate System Objects
    * Raster Data Objects
    * Settings
    * Exceptions
  * Geolocation with GeoIP2
    * Example
    * API Reference
    * Methods
    * Settings
    * Exceptions
  * GeoDjango Utilities
    * `LayerMapping` data import utility
    * OGR Inspection
    * `GeoJSON` Serializer
  * GeoDjango Management Commands
    * `inspectdb`
    * `ogrinspect`
  * GeoDjango’s admin site
    * `GISModelAdmin`
    * `GeoModelAdmin`
    * `OSMGeoAdmin`
  * Geographic Feeds
    * Example
    * API Reference
  * Geographic Sitemaps
    * Example
    * Reference
  * Testing GeoDjango apps
    * PostGIS
    * GeoDjango tests
  * Deploying GeoDjango

© Django Software Foundation and individual contributors  
Licensed under the BSD License.  
https://docs.djangoproject.com/en/4.0/ref/contrib/gis/index/

  *[ISP]: Internet Service Provider

